-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity feature_Loop_memset_featureHist_proc1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    featureHist_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    featureHist_ce0 : OUT STD_LOGIC;
    featureHist_we0 : OUT STD_LOGIC;
    featureHist_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    featureHist_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    featureHist_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    featureHist_ce1 : OUT STD_LOGIC;
    featureHist_we1 : OUT STD_LOGIC;
    featureHist_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    featureHist_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_frame_in_AWVALID : OUT STD_LOGIC;
    m_axi_frame_in_AWREADY : IN STD_LOGIC;
    m_axi_frame_in_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_in_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_in_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_in_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_in_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_in_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_in_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_in_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_in_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_in_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_WVALID : OUT STD_LOGIC;
    m_axi_frame_in_WREADY : IN STD_LOGIC;
    m_axi_frame_in_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_frame_in_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_WLAST : OUT STD_LOGIC;
    m_axi_frame_in_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_ARVALID : OUT STD_LOGIC;
    m_axi_frame_in_ARREADY : IN STD_LOGIC;
    m_axi_frame_in_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_in_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_in_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_in_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_in_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_in_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_in_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_in_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_in_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_in_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_RVALID : IN STD_LOGIC;
    m_axi_frame_in_RREADY : OUT STD_LOGIC;
    m_axi_frame_in_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_frame_in_RLAST : IN STD_LOGIC;
    m_axi_frame_in_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_in_BVALID : IN STD_LOGIC;
    m_axi_frame_in_BREADY : OUT STD_LOGIC;
    m_axi_frame_in_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_in_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    frame_in1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    frame_in1_empty_n : IN STD_LOGIC;
    frame_in1_read : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of feature_Loop_memset_featureHist_proc1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000010000000000";
    constant ap_ST_pp0_stg0_fsm_11 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000100000000000";
    constant ap_ST_st15_fsm_12 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000001000000000000";
    constant ap_ST_st16_fsm_13 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000010000000000000";
    constant ap_ST_st17_fsm_14 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000100000000000000";
    constant ap_ST_st18_fsm_15 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000001000000000000000";
    constant ap_ST_st19_fsm_16 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000010000000000000000";
    constant ap_ST_st20_fsm_17 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000100000000000000000";
    constant ap_ST_pp1_stg0_fsm_18 : STD_LOGIC_VECTOR (29 downto 0) := "000000000001000000000000000000";
    constant ap_ST_pp1_stg1_fsm_19 : STD_LOGIC_VECTOR (29 downto 0) := "000000000010000000000000000000";
    constant ap_ST_pp1_stg2_fsm_20 : STD_LOGIC_VECTOR (29 downto 0) := "000000000100000000000000000000";
    constant ap_ST_pp1_stg3_fsm_21 : STD_LOGIC_VECTOR (29 downto 0) := "000000001000000000000000000000";
    constant ap_ST_pp1_stg4_fsm_22 : STD_LOGIC_VECTOR (29 downto 0) := "000000010000000000000000000000";
    constant ap_ST_pp1_stg5_fsm_23 : STD_LOGIC_VECTOR (29 downto 0) := "000000100000000000000000000000";
    constant ap_ST_pp1_stg6_fsm_24 : STD_LOGIC_VECTOR (29 downto 0) := "000001000000000000000000000000";
    constant ap_ST_pp1_stg7_fsm_25 : STD_LOGIC_VECTOR (29 downto 0) := "000010000000000000000000000000";
    constant ap_ST_pp1_stg8_fsm_26 : STD_LOGIC_VECTOR (29 downto 0) := "000100000000000000000000000000";
    constant ap_ST_pp1_stg9_fsm_27 : STD_LOGIC_VECTOR (29 downto 0) := "001000000000000000000000000000";
    constant ap_ST_pp1_stg10_fsm_28 : STD_LOGIC_VECTOR (29 downto 0) := "010000000000000000000000000000";
    constant ap_ST_pp1_stg11_fsm_29 : STD_LOGIC_VECTOR (29 downto 0) := "100000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_780 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011110000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv11_3C0 : STD_LOGIC_VECTOR (10 downto 0) := "01111000000";
    constant ap_const_lv9_140 : STD_LOGIC_VECTOR (8 downto 0) := "101000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_18 : STD_LOGIC_VECTOR (10 downto 0) := "00000011000";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv11_6 : STD_LOGIC_VECTOR (10 downto 0) := "00000000110";
    constant ap_const_lv11_8 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_const_lv11_7 : STD_LOGIC_VECTOR (10 downto 0) := "00000000111";
    constant ap_const_lv11_9 : STD_LOGIC_VECTOR (10 downto 0) := "00000001001";
    constant ap_const_lv11_B : STD_LOGIC_VECTOR (10 downto 0) := "00000001011";
    constant ap_const_lv11_A : STD_LOGIC_VECTOR (10 downto 0) := "00000001010";
    constant ap_const_lv11_C : STD_LOGIC_VECTOR (10 downto 0) := "00000001100";
    constant ap_const_lv11_E : STD_LOGIC_VECTOR (10 downto 0) := "00000001110";
    constant ap_const_lv11_D : STD_LOGIC_VECTOR (10 downto 0) := "00000001101";
    constant ap_const_lv11_F : STD_LOGIC_VECTOR (10 downto 0) := "00000001111";
    constant ap_const_lv11_11 : STD_LOGIC_VECTOR (10 downto 0) := "00000010001";
    constant ap_const_lv11_10 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_const_lv11_12 : STD_LOGIC_VECTOR (10 downto 0) := "00000010010";
    constant ap_const_lv11_14 : STD_LOGIC_VECTOR (10 downto 0) := "00000010100";
    constant ap_const_lv11_13 : STD_LOGIC_VECTOR (10 downto 0) := "00000010011";
    constant ap_const_lv11_15 : STD_LOGIC_VECTOR (10 downto 0) := "00000010101";
    constant ap_const_lv11_17 : STD_LOGIC_VECTOR (10 downto 0) := "00000010111";
    constant ap_const_lv11_16 : STD_LOGIC_VECTOR (10 downto 0) := "00000010110";
    constant ap_const_lv34_11112 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000010001000100010010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_49 : BOOLEAN;
    signal indvar2_i_reg_549 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_indvar2_i_reg_549_pp0_it1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_11 : STD_LOGIC;
    signal ap_sig_bdd_141 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal exitcond5_i_reg_1676 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_149 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal indvar_flatten_i_reg_561 : STD_LOGIC_VECTOR (6 downto 0);
    signal iterator_i_reg_572 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_i_reg_583 : STD_LOGIC_VECTOR (1 downto 0);
    signal iterator_i_46_reg_594 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_i_reg_605 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_636 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_pp1_stg5_fsm_23 : STD_LOGIC;
    signal ap_sig_bdd_174 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it3 : STD_LOGIC := '0';
    signal exitcond_flatten_i_reg_1731 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1984 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg7_fsm_25 : STD_LOGIC;
    signal ap_sig_bdd_199 : BOOLEAN;
    signal or_cond3_i_reg_1921 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_i_reg_1998 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg1_fsm_19 : STD_LOGIC;
    signal ap_sig_bdd_215 : BOOLEAN;
    signal or_cond11_i_reg_1957 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond10_i_reg_2014 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_640 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_18 : STD_LOGIC;
    signal ap_sig_bdd_234 : BOOLEAN;
    signal reg_644 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_pp1_stg6_fsm_24 : STD_LOGIC;
    signal ap_sig_bdd_245 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg8_fsm_26 : STD_LOGIC;
    signal ap_sig_bdd_254 : BOOLEAN;
    signal or_cond5_i_reg_1930 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_i_reg_2002 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_648 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_652 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_pp1_stg9_fsm_27 : STD_LOGIC;
    signal ap_sig_bdd_274 : BOOLEAN;
    signal ap_reg_ppstg_or_cond5_i_reg_1930_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_i_reg_2002_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg10_fsm_28 : STD_LOGIC;
    signal ap_sig_bdd_294 : BOOLEAN;
    signal or_cond13_i_reg_1966 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond12_i_reg_2018 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg3_fsm_21 : STD_LOGIC;
    signal ap_sig_bdd_311 : BOOLEAN;
    signal or_cond15_i_reg_1975 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond14_i_reg_2022 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_657 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_661 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_cond7_i_reg_1939 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond7_i_reg_1939_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_i_reg_2006 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond6_i_reg_2006_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_i_reg_1948 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond9_i_reg_1948_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond8_i_reg_2010 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond8_i_reg_2010_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_666_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_678 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_pp1_stg2_fsm_20 : STD_LOGIC;
    signal ap_sig_bdd_368 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg4_fsm_22 : STD_LOGIC;
    signal ap_sig_bdd_384 : BOOLEAN;
    signal ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_672_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_684 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_bdd_409 : BOOLEAN;
    signal tmp_cast_i_fu_690_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_cast_i_reg_1634 : STD_LOGIC_VECTOR (33 downto 0);
    signal indvarinc_i_fu_699_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_427 : BOOLEAN;
    signal tmp_91_cast_i_fu_711_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_91_cast_i_reg_1647 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_i_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_7_cast_i_fu_714_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_13_7_cast_i_reg_1652 : STD_LOGIC_VECTOR (16 downto 0);
    signal k_fu_723_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_reg_1660 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_444 : BOOLEAN;
    signal tmp_3_i_fu_753_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_3_i_reg_1665 : STD_LOGIC_VECTOR (18 downto 0);
    signal exitcond3_i_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal frame_in_addr_reg_1670 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_458 : BOOLEAN;
    signal exitcond5_i_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_i_reg_1676_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next2_i_fu_787_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_next2_i_reg_1680 : STD_LOGIC_VECTOR (10 downto 0);
    signal frame_in_addr_read_reg_1685 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_12 : STD_LOGIC;
    signal ap_sig_bdd_477 : BOOLEAN;
    signal tmp_5_reg_1695 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_840_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_4_reg_1701 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_14 : STD_LOGIC;
    signal ap_sig_bdd_488 : BOOLEAN;
    signal tmp_7_reg_1706 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_6_reg_1711 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_15 : STD_LOGIC;
    signal ap_sig_bdd_503 : BOOLEAN;
    signal tmp_8_fu_880_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_reg_1716 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_16 : STD_LOGIC;
    signal ap_sig_bdd_513 : BOOLEAN;
    signal tmp_9_fu_884_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_reg_1721 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_32_i_fu_893_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_32_i_reg_1726 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_17 : STD_LOGIC;
    signal ap_sig_bdd_526 : BOOLEAN;
    signal exitcond_flatten_i_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_i_fu_905_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten_next_i_reg_1735 : STD_LOGIC_VECTOR (6 downto 0);
    signal iterator_mid2_i_fu_923_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal iterator_mid2_i_reg_1740 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it2 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_mid2_i_fu_931_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_mid2_i_reg_1769 : STD_LOGIC_VECTOR (8 downto 0);
    signal iterator_mid2_i_44_fu_939_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal iterator_mid2_i_44_reg_1782 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_mid2_i_fu_953_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_mid2_i_reg_1787 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_i_fu_964_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_i_reg_1793 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_34_7_i_fu_969_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_7_i_reg_1798 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_1_7_i_fu_974_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_7_i_reg_1803 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_i_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_reg_1808 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_7_i_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_7_i_reg_1820 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_cast_cast_i_fu_992_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_cast_cast_i_reg_1832 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_i_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_i_reg_1837 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_cast_cast_i_fu_1005_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_1_cast_cast_i_reg_1842 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_1_i_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_1_i_reg_1847 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_1_cast_cast_i_fu_1019_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_1_1_cast_cast_i_reg_1852 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_2_i_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_2_i_reg_1857 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_2_cast_cast_i_fu_1033_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_1_2_cast_cast_i_reg_1862 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_3_i_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_3_i_reg_1867 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_3_cast_cast_i_fu_1047_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_1_3_cast_cast_i_reg_1872 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_4_i_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_4_i_reg_1877 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_4_cast_cast_i_fu_1061_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_1_4_cast_cast_i_reg_1882 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_5_i_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_5_i_reg_1887 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_5_cast_cast_i_fu_1075_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_1_5_cast_cast_i_reg_1892 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_6_i_fu_1079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_6_i_reg_1897 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_6_cast_cast_i_fu_1089_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_1_6_cast_cast_i_reg_1902 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_7_i_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_7_i_reg_1907 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_fu_1098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_i_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_i_reg_1916 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_i_fu_1106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_1_i_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_1_i_reg_1925 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_i_fu_1114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_2_i_fu_1118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_2_i_reg_1934 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond7_i_fu_1122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_3_i_fu_1126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_3_i_reg_1943 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_i_fu_1130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_4_i_fu_1134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_4_i_reg_1952 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond11_i_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_5_i_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_5_i_reg_1961 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond13_i_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_6_i_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_6_i_reg_1970 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond15_i_fu_1154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_7_i_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_7_i_reg_1979 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_1162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_i_fu_1186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_i_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_i_fu_1194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond8_i_fu_1198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond10_i_fu_1202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond12_i_fu_1206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond14_i_fu_1210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_i_49_fu_1262_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_i_49_reg_2046 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_17_2_i_fu_1273_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_2_i_reg_2051 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_2_i_fu_1293_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_2_i_reg_2066 : STD_LOGIC_VECTOR (10 downto 0);
    signal featureHist_addr_1_reg_2071 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_2_i_reg_2082 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_3_i_fu_1306_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_3_i_reg_2087 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_3_i_fu_1311_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_3_i_reg_2092 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_3_i_reg_2112 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_34_3_i_fu_1328_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_3_i_reg_2117 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_4_i_fu_1333_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_4_i_reg_2122 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_39_i_reg_2127 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_40_i_reg_2132 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_22_4_i_fu_1342_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_4_i_reg_2142 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_31_1_i_fu_1365_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_1_i_reg_2152 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_pp1_stg11_fsm_29 : STD_LOGIC;
    signal ap_sig_bdd_765 : BOOLEAN;
    signal tmp_41_i_reg_2157 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_29_4_i_reg_2167 : STD_LOGIC_VECTOR (2 downto 0);
    signal featureHist_addr_2_reg_2172 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_42_i_reg_2178 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_31_2_i_fu_1392_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_2_i_reg_2183 : STD_LOGIC_VECTOR (8 downto 0);
    signal featureHist_addr_3_reg_2188 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_3_i_fu_1413_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_3_i_reg_2194 : STD_LOGIC_VECTOR (8 downto 0);
    signal featureHist_addr_4_reg_2199 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_34_4_i_fu_1423_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_4_i_reg_2205 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_31_4_i_fu_1439_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_4_i_reg_2210 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_17_5_i_fu_1445_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_5_i_reg_2215 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_5_i_fu_1450_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_5_i_reg_2220 : STD_LOGIC_VECTOR (10 downto 0);
    signal featureHist_addr_5_reg_2230 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_34_5_i_fu_1471_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_5_i_reg_2246 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_6_i_fu_1476_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_6_i_reg_2251 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_6_i_fu_1485_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_6_i_reg_2261 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_6_i_fu_1494_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_6_i_reg_2271 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_45_i_reg_2276 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_29_6_i_reg_2286 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_7_i_fu_1503_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_7_i_reg_2291 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_7_i_fu_1508_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_7_i_reg_2296 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_31_5_i_fu_1531_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_5_i_reg_2306 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_7_i_reg_2321 : STD_LOGIC_VECTOR (2 downto 0);
    signal featureHist_addr_6_reg_2326 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_47_i_reg_2332 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_48_i_reg_2337 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_31_6_i_fu_1561_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_6_i_reg_2342 : STD_LOGIC_VECTOR (8 downto 0);
    signal featureHist_addr_7_reg_2347 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_7_i_fu_1582_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_7_i_reg_2353 : STD_LOGIC_VECTOR (8 downto 0);
    signal featureHist_addr_8_reg_2358 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_bdd_882 : BOOLEAN;
    signal rgb_i_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal rgb_i_ce0 : STD_LOGIC;
    signal rgb_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal rgb_i_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal rgb_i_ce1 : STD_LOGIC;
    signal rgb_i_we1 : STD_LOGIC;
    signal rgb_i_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal rgb_i_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal invdar_i_reg_526 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_i_reg_537 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar2_i_phi_fu_553_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_flatten_i_phi_fu_565_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal iterator_i_phi_fu_576_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_i_phi_fu_587_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal iterator_i_46_phi_fu_598_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_i_phi_fu_609_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_i_fu_694_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_i_fu_793_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_i_fu_1171_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_i_fu_1181_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_i_fu_1214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_1_i_fu_1223_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_1_i_fu_1238_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_1_i_fu_1243_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_2_i_fu_1283_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_2_i_fu_1288_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_i_fu_1298_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_2_i_fu_1302_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_3_i_fu_1316_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_3_i_fu_1320_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_3_i_fu_1324_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_4_i_fu_1338_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_4_i_fu_1347_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_4_i_fu_1371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_1_i_fu_1375_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_2_i_fu_1398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_3_i_fu_1419_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_5_i_fu_1455_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_4_i_fu_1459_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_5_i_fu_1463_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_5_i_fu_1467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_6_i_fu_1481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_6_i_fu_1490_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_6_i_fu_1499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_7_i_fu_1513_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_7_i_fu_1537_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_7_i_fu_1541_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_5_i_fu_1545_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_6_i_fu_1567_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_7_i_fu_1588_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_771_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_m_axi_frame_in_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_m_axi_frame_in_ARREADY : STD_LOGIC;
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_997 : BOOLEAN;
    signal p_shl_i_fu_729_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl1_i_fu_741_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl_cast_i_fu_737_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl1_cast_i_fu_749_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_fu_759_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_762_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_2_fu_766_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl2_i_fu_798_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl3_i_fu_810_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl2_cast_i_fu_806_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl3_cast_i_fu_818_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_i_fu_822_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1592_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal neg_mul_i_fu_852_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_13_i_fu_867_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_14_i_fu_870_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_v_i_fu_873_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal neg_ti_i_fu_888_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond1215_i_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal iterator_1_dup_i_fu_911_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_1211_i_fu_947_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_cast_i_fu_961_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_cast_i_45_fu_979_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal j_1_i_fu_1000_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_1_i_fu_1014_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_2_i_fu_1028_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_3_i_fu_1042_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_4_i_fu_1056_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_5_i_fu_1070_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_6_i_fu_1084_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_17_i_fu_1166_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_i_fu_1176_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_1_i_fu_1218_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_1_i_fu_1233_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_i_fu_1228_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_19_i_fu_1248_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_cast_i_fu_1258_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_2_i_fu_1278_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_1_i_fu_1268_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_1_i_fu_1351_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_1_cast_i_fu_1361_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_2_i_fu_1379_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_2_cast_i_fu_1389_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_3_i_fu_1402_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_3_cast_i_fu_1410_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_4_i_fu_1428_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_4_cast_i_fu_1436_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_5_i_fu_1517_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_5_cast_i_fu_1527_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_6_i_fu_1549_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_6_cast_i_fu_1558_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_7_i_fu_1571_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_7_cast_i_fu_1579_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1592_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1592_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (29 downto 0);

    component feature_mul_mul_18ns_16s_34_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component feature_Loop_memset_featureHist_proc1_rgb_i IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    rgb_i_U : component feature_Loop_memset_featureHist_proc1_rgb_i
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rgb_i_address0,
        ce0 => rgb_i_ce0,
        q0 => rgb_i_q0,
        address1 => rgb_i_address1,
        ce1 => rgb_i_ce1,
        we1 => rgb_i_we1,
        d1 => rgb_i_d1,
        q1 => rgb_i_q1);

    feature_mul_mul_18ns_16s_34_3_U7 : component feature_mul_mul_18ns_16s_34_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 16,
        dout_WIDTH => 34)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1592_p0,
        din1 => tmp_5_i_fu_822_p2,
        ce => grp_fu_1592_ce,
        dout => grp_fu_1592_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond3_i_fu_717_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_frame_in_ARREADY assign process. --
    ap_reg_ioackin_m_axi_frame_in_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_frame_in_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                    if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_in_ARREADY))) then 
                        ap_reg_ioackin_m_axi_frame_in_ARREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = m_axi_frame_in_ARREADY)) then 
                        ap_reg_ioackin_m_axi_frame_in_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_11) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond5_i_fu_781_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_11) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (ap_const_lv1_0 = exitcond5_i_fu_781_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_11) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond5_i_fu_781_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and not((ap_const_lv1_0 = exitcond_flatten_i_fu_899_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_17)) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_17) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29) and not((ap_const_lv1_0 = exitcond_flatten_i_reg_1731))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it2 assign process. --
    ap_reg_ppiten_pp1_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29)) then 
                    ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it3 assign process. --
    ap_reg_ppiten_pp1_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29)) then 
                    ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_17)) then 
                    ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- i_i_reg_583 assign process. --
    i_i_reg_583_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
                i_i_reg_583 <= i_mid2_i_reg_1787;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_17)) then 
                i_i_reg_583 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    -- indvar2_i_reg_549 assign process. --
    indvar2_i_reg_549_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_11) and (ap_const_lv1_0 = exitcond5_i_reg_1676) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
                indvar2_i_reg_549 <= indvar_next2_i_reg_1680;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                indvar2_i_reg_549 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- indvar_flatten_i_reg_561 assign process. --
    indvar_flatten_i_reg_561_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
                indvar_flatten_i_reg_561 <= indvar_flatten_next_i_reg_1735;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_17)) then 
                indvar_flatten_i_reg_561 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    -- invdar_i_reg_526 assign process. --
    invdar_i_reg_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_409))) then 
                invdar_i_reg_526 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = tmp_2_i_fu_705_p2))) then 
                invdar_i_reg_526 <= indvarinc_i_fu_699_p2;
            end if; 
        end if;
    end process;

    -- iterator_i_46_reg_594 assign process. --
    iterator_i_46_reg_594_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
                iterator_i_46_reg_594 <= tmp_34_7_i_reg_1798;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_17)) then 
                iterator_i_46_reg_594 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- iterator_i_reg_572 assign process. --
    iterator_i_reg_572_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
                iterator_i_reg_572 <= iterator_mid2_i_44_reg_1782;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_17)) then 
                iterator_i_reg_572 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- j_i_reg_605 assign process. --
    j_i_reg_605_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
                j_i_reg_605 <= j_1_7_i_reg_1803;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_17)) then 
                j_i_reg_605 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    -- k_i_reg_537 assign process. --
    k_i_reg_537_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and not((ap_const_lv1_0 = exitcond_flatten_i_fu_899_p2)))) then 
                k_i_reg_537 <= k_reg_1660;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_2_i_fu_705_p2)))) then 
                k_i_reg_537 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    -- reg_652 assign process. --
    reg_652_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond5_i_reg_1930_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_i_reg_2002_pp1_it1))) then 
                reg_652 <= featureHist_q1;
            elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond1_i_reg_1912) and (ap_const_lv1_0 = or_cond_i_reg_1984) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = or_cond3_i_reg_1921) and (ap_const_lv1_0 = or_cond2_i_reg_1998) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_28) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it2)))) then 
                reg_652 <= featureHist_q0;
            end if; 
        end if;
    end process;

    -- reg_661 assign process. --
    reg_661_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it2))) then 
                reg_661 <= featureHist_q0;
            elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_27) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond7_i_reg_1939_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond6_i_reg_2006_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond9_i_reg_1948_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond8_i_reg_2010_pp1_it1)))) then 
                reg_661 <= featureHist_q1;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_11) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                ap_reg_ppstg_exitcond5_i_reg_1676_pp0_it1 <= exitcond5_i_reg_1676;
                ap_reg_ppstg_indvar2_i_reg_549_pp0_it1 <= indvar2_i_reg_549;
                exitcond5_i_reg_1676 <= exitcond5_i_fu_781_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18)) then
                ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it1 <= iterator_mid2_i_reg_1740;
                ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it2 <= ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it1;
                exitcond_flatten_i_reg_1731 <= exitcond_flatten_i_fu_899_p2;
                tmp_34_5_i_reg_2246 <= tmp_34_5_i_fu_1471_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22)) then
                ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it1 <= or_cond10_i_reg_2014;
                ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it2 <= ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it1;
                ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it1 <= or_cond12_i_reg_2018;
                ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it2 <= ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it1;
                ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it1 <= or_cond14_i_reg_2022;
                ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it2 <= ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it1;
                ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it3 <= ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it2;
                ap_reg_ppstg_or_cond4_i_reg_2002_pp1_it1 <= or_cond4_i_reg_2002;
                ap_reg_ppstg_or_cond6_i_reg_2006_pp1_it1 <= or_cond6_i_reg_2006;
                ap_reg_ppstg_or_cond8_i_reg_2010_pp1_it1 <= or_cond8_i_reg_2010;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21)) then
                ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it1 <= or_cond11_i_reg_1957;
                ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it2 <= ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it1;
                ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it1 <= or_cond13_i_reg_1966;
                ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it2 <= ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it1;
                ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it1 <= or_cond15_i_reg_1975;
                ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it2 <= ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it1;
                ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it3 <= ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it2;
                ap_reg_ppstg_or_cond5_i_reg_1930_pp1_it1 <= or_cond5_i_reg_1930;
                ap_reg_ppstg_or_cond7_i_reg_1939_pp1_it1 <= or_cond7_i_reg_1939;
                ap_reg_ppstg_or_cond9_i_reg_1948_pp1_it1 <= or_cond9_i_reg_1948;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond1_i_reg_1912) and (ap_const_lv1_0 = or_cond_i_reg_1984) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26))) then
                featureHist_addr_1_reg_2071 <= tmp_23_i_fu_1298_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = or_cond3_i_reg_1921) and (ap_const_lv1_0 = or_cond2_i_reg_1998) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then
                featureHist_addr_2_reg_2172 <= tmp_32_1_i_fu_1375_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = or_cond4_i_reg_2002) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond5_i_reg_1930_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22))) then
                featureHist_addr_3_reg_2188 <= tmp_32_2_i_fu_1398_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond7_i_reg_1939_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond6_i_reg_2006_pp1_it1))) then
                featureHist_addr_4_reg_2199 <= tmp_32_3_i_fu_1419_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond9_i_reg_1948_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond8_i_reg_2010_pp1_it1))) then
                featureHist_addr_5_reg_2230 <= tmp_32_4_i_fu_1459_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22))) then
                featureHist_addr_6_reg_2326 <= tmp_32_5_i_fu_1545_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_27) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it2))) then
                featureHist_addr_7_reg_2347 <= tmp_32_6_i_fu_1567_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_20))) then
                featureHist_addr_8_reg_2358 <= tmp_32_7_i_fu_1588_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_11) and (ap_const_lv1_0 = exitcond5_i_reg_1676) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                frame_in_addr_read_reg_1685 <= m_axi_frame_in_RDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                frame_in_addr_reg_1670 <= tmp_3_fu_771_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and (ap_const_lv1_0 = exitcond_flatten_i_fu_899_p2))) then
                i_mid2_i_reg_1787 <= i_mid2_i_fu_953_p3;
                iterator_mid2_i_44_reg_1782 <= iterator_mid2_i_44_fu_939_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then
                indvar_flatten_next_i_reg_1735 <= indvar_flatten_next_i_fu_905_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                indvar_next2_i_reg_1680 <= indvar_next2_i_fu_787_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and (ap_const_lv1_0 = exitcond_flatten_i_fu_899_p2))) then
                iterator_mid2_i_reg_1740 <= iterator_mid2_i_fu_923_p3;
                j_mid2_i_reg_1769 <= j_mid2_i_fu_931_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_20))) then
                    j_1_1_cast_cast_i_reg_1852(0) <= j_1_1_cast_cast_i_fu_1019_p1(0);    j_1_1_cast_cast_i_reg_1852(8 downto 2) <= j_1_1_cast_cast_i_fu_1019_p1(8 downto 2);
                    j_1_2_cast_cast_i_reg_1862(8 downto 2) <= j_1_2_cast_cast_i_fu_1033_p1(8 downto 2);
                    j_1_3_cast_cast_i_reg_1872(1 downto 0) <= j_1_3_cast_cast_i_fu_1047_p1(1 downto 0);    j_1_3_cast_cast_i_reg_1872(8 downto 3) <= j_1_3_cast_cast_i_fu_1047_p1(8 downto 3);
                    j_1_4_cast_cast_i_reg_1882(1) <= j_1_4_cast_cast_i_fu_1061_p1(1);    j_1_4_cast_cast_i_reg_1882(8 downto 3) <= j_1_4_cast_cast_i_fu_1061_p1(8 downto 3);
                    j_1_5_cast_cast_i_reg_1892(0) <= j_1_5_cast_cast_i_fu_1075_p1(0);    j_1_5_cast_cast_i_reg_1892(8 downto 3) <= j_1_5_cast_cast_i_fu_1075_p1(8 downto 3);
                    j_1_6_cast_cast_i_reg_1902(8 downto 3) <= j_1_6_cast_cast_i_fu_1089_p1(8 downto 3);
                    j_1_cast_cast_i_reg_1842(8 downto 1) <= j_1_cast_cast_i_fu_1005_p1(8 downto 1);
                    j_cast_cast_i_reg_1832(8 downto 0) <= j_cast_cast_i_fu_992_p1(8 downto 0);
                tmp_12_1_i_reg_1847 <= tmp_12_1_i_fu_1009_p2;
                tmp_12_2_i_reg_1857 <= tmp_12_2_i_fu_1023_p2;
                tmp_12_3_i_reg_1867 <= tmp_12_3_i_fu_1037_p2;
                tmp_12_4_i_reg_1877 <= tmp_12_4_i_fu_1051_p2;
                tmp_12_5_i_reg_1887 <= tmp_12_5_i_fu_1065_p2;
                tmp_12_6_i_reg_1897 <= tmp_12_6_i_fu_1079_p2;
                tmp_12_7_i_reg_1907 <= tmp_12_7_i_fu_1093_p2;
                tmp_14_7_i_reg_1820 <= tmp_14_7_i_fu_987_p2;
                tmp_4_i_reg_1808 <= tmp_4_i_fu_982_p2;
                tmp_6_i_reg_1837 <= tmp_6_i_fu_995_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19))) then
                j_1_7_i_reg_1803 <= j_1_7_i_fu_974_p2;
                tmp_34_7_i_reg_1798 <= tmp_34_7_i_fu_969_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                k_reg_1660 <= k_fu_723_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22) and (ap_const_lv1_0 = or_cond11_i_reg_1957))) then
                or_cond10_i_reg_2014 <= or_cond10_i_fu_1202_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21))) then
                or_cond11_i_reg_1957 <= or_cond11_i_fu_1138_p2;
                or_cond13_i_reg_1966 <= or_cond13_i_fu_1146_p2;
                or_cond15_i_reg_1975 <= or_cond15_i_fu_1154_p2;
                or_cond1_i_reg_1912 <= or_cond1_i_fu_1098_p2;
                or_cond3_i_reg_1921 <= or_cond3_i_fu_1106_p2;
                or_cond5_i_reg_1930 <= or_cond5_i_fu_1114_p2;
                or_cond7_i_reg_1939 <= or_cond7_i_fu_1122_p2;
                or_cond9_i_reg_1948 <= or_cond9_i_fu_1130_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22) and (ap_const_lv1_0 = or_cond13_i_reg_1966))) then
                or_cond12_i_reg_2018 <= or_cond12_i_fu_1206_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22) and (ap_const_lv1_0 = or_cond15_i_reg_1975))) then
                or_cond14_i_reg_2022 <= or_cond14_i_fu_1210_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond3_i_reg_1921) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22))) then
                or_cond2_i_reg_1998 <= or_cond2_i_fu_1186_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond5_i_reg_1930) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22))) then
                or_cond4_i_reg_2002 <= or_cond4_i_fu_1190_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22) and (ap_const_lv1_0 = or_cond7_i_reg_1939))) then
                or_cond6_i_reg_2006 <= or_cond6_i_fu_1194_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22) and (ap_const_lv1_0 = or_cond9_i_reg_1948))) then
                or_cond8_i_reg_2010 <= or_cond8_i_fu_1198_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond1_i_reg_1912) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22))) then
                or_cond_i_reg_1984 <= or_cond_i_fu_1162_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond1_i_reg_1912) and (ap_const_lv1_0 = or_cond_i_reg_1984)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25) and (ap_const_lv1_0 = or_cond3_i_reg_1921) and (ap_const_lv1_0 = or_cond2_i_reg_1998)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it1)))) then
                reg_636 <= rgb_i_q0(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond1_i_reg_1912) and (ap_const_lv1_0 = or_cond_i_reg_1984)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25) and (ap_const_lv1_0 = or_cond3_i_reg_1921) and (ap_const_lv1_0 = or_cond2_i_reg_1998)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18)))) then
                reg_640 <= rgb_i_q1(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond1_i_reg_1912) and (ap_const_lv1_0 = or_cond_i_reg_1984) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26) and (ap_const_lv1_0 = or_cond5_i_reg_1930) and (ap_const_lv1_0 = or_cond4_i_reg_2002)))) then
                reg_644 <= rgb_i_q0(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond3_i_reg_1921) and (ap_const_lv1_0 = or_cond2_i_reg_1998) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_24)))) then
                reg_648 <= rgb_i_q1(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond5_i_reg_1930) and (ap_const_lv1_0 = or_cond4_i_reg_2002) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it1)))) then
                reg_657 <= rgb_i_q0(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond1_i_reg_1912) and (ap_const_lv1_0 = or_cond_i_reg_1984) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = or_cond3_i_reg_1921) and (ap_const_lv1_0 = or_cond2_i_reg_1998) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_24) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond5_i_reg_1930_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_i_reg_2002_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it3)))) then
                reg_678 <= grp_fu_666_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_28) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond7_i_reg_1939_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond6_i_reg_2006_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond9_i_reg_1948_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond8_i_reg_2010_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_24) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it2)))) then
                reg_684 <= grp_fu_672_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21) and (ap_const_lv1_0 = or_cond1_i_fu_1098_p2))) then
                tmp_10_i_reg_1916 <= tmp_10_i_fu_1102_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_2_i_fu_705_p2)))) then
                    tmp_13_7_cast_i_reg_1652(15 downto 0) <= tmp_13_7_cast_i_fu_714_p1(15 downto 0);
                    tmp_91_cast_i_reg_1647(15 downto 0) <= tmp_91_cast_i_fu_711_p1(15 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21) and (ap_const_lv1_0 = or_cond3_i_fu_1106_p2))) then
                tmp_16_1_i_reg_1925 <= tmp_16_1_i_fu_1110_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21) and (ap_const_lv1_0 = or_cond5_i_fu_1114_p2))) then
                tmp_16_2_i_reg_1934 <= tmp_16_2_i_fu_1118_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21) and (ap_const_lv1_0 = or_cond7_i_fu_1122_p2))) then
                tmp_16_3_i_reg_1943 <= tmp_16_3_i_fu_1126_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21) and (ap_const_lv1_0 = or_cond9_i_fu_1130_p2))) then
                tmp_16_4_i_reg_1952 <= tmp_16_4_i_fu_1134_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21) and (ap_const_lv1_0 = or_cond11_i_fu_1138_p2))) then
                tmp_16_5_i_reg_1961 <= tmp_16_5_i_fu_1142_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21) and (ap_const_lv1_0 = or_cond13_i_fu_1146_p2))) then
                tmp_16_6_i_reg_1970 <= tmp_16_6_i_fu_1150_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21) and (ap_const_lv1_0 = or_cond15_i_fu_1154_p2))) then
                tmp_16_7_i_reg_1979 <= tmp_16_7_i_fu_1158_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25) and (ap_const_lv1_0 = or_cond5_i_reg_1930) and (ap_const_lv1_0 = or_cond4_i_reg_2002))) then
                tmp_17_2_i_reg_2051 <= tmp_17_2_i_fu_1273_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26) and (ap_const_lv1_0 = or_cond7_i_reg_1939) and (ap_const_lv1_0 = or_cond6_i_reg_2006))) then
                tmp_17_3_i_reg_2087 <= tmp_17_3_i_fu_1306_p2;
                tmp_22_3_i_reg_2092 <= tmp_22_3_i_fu_1311_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_27) and (ap_const_lv1_0 = or_cond9_i_reg_1948) and (ap_const_lv1_0 = or_cond8_i_reg_2010))) then
                tmp_17_4_i_reg_2122 <= tmp_17_4_i_fu_1333_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29))) then
                tmp_17_5_i_reg_2215 <= tmp_17_5_i_fu_1445_p2;
                tmp_22_5_i_reg_2220 <= tmp_22_5_i_fu_1450_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it1))) then
                tmp_17_6_i_reg_2251 <= tmp_17_6_i_fu_1476_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_20) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it1))) then
                tmp_17_7_i_reg_2291 <= tmp_17_7_i_fu_1503_p2;
                tmp_22_7_i_reg_2296 <= tmp_22_7_i_fu_1508_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_28) and (ap_const_lv1_0 = or_cond9_i_reg_1948) and (ap_const_lv1_0 = or_cond8_i_reg_2010))) then
                tmp_22_4_i_reg_2142 <= tmp_22_4_i_fu_1342_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it1))) then
                tmp_22_6_i_reg_2261 <= tmp_22_6_i_fu_1485_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond1_i_reg_1912) and (ap_const_lv1_0 = or_cond_i_reg_1984) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25))) then
                tmp_22_i_49_reg_2046 <= tmp_22_i_49_fu_1262_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26) and (ap_const_lv1_0 = or_cond5_i_reg_1930) and (ap_const_lv1_0 = or_cond4_i_reg_2002))) then
                tmp_29_2_i_reg_2082 <= rgb_i_q1(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_27) and (ap_const_lv1_0 = or_cond7_i_reg_1939) and (ap_const_lv1_0 = or_cond6_i_reg_2006))) then
                tmp_29_3_i_reg_2112 <= rgb_i_q1(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond9_i_reg_1948) and (ap_const_lv1_0 = or_cond8_i_reg_2010) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29))) then
                tmp_29_4_i_reg_2167 <= rgb_i_q1(7 downto 5);
                tmp_41_i_reg_2157 <= rgb_i_q0(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_20))) then
                tmp_29_6_i_reg_2286 <= rgb_i_q1(7 downto 5);
                tmp_45_i_reg_2276 <= rgb_i_q0(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it1))) then
                tmp_29_7_i_reg_2321 <= rgb_i_q1(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond3_i_reg_1921) and (ap_const_lv1_0 = or_cond2_i_reg_1998) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29))) then
                tmp_31_1_i_reg_2152 <= tmp_31_1_i_fu_1365_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = or_cond5_i_reg_1930) and (ap_const_lv1_0 = or_cond4_i_reg_2002) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21))) then
                tmp_31_2_i_reg_2183 <= tmp_31_2_i_fu_1392_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond7_i_reg_1939_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond6_i_reg_2006_pp1_it1))) then
                tmp_31_3_i_reg_2194 <= tmp_31_3_i_fu_1413_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_or_cond9_i_reg_1948_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond8_i_reg_2010_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29))) then
                tmp_31_4_i_reg_2210 <= tmp_31_4_i_fu_1439_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21))) then
                tmp_31_5_i_reg_2306 <= tmp_31_5_i_fu_1531_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it2))) then
                tmp_31_6_i_reg_2342 <= tmp_31_6_i_fu_1561_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it2))) then
                tmp_31_7_i_reg_2353 <= tmp_31_7_i_fu_1582_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_17)) then
                tmp_32_i_reg_1726 <= tmp_32_i_fu_893_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25))) then
                tmp_34_2_i_reg_2066 <= tmp_34_2_i_fu_1293_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_27))) then
                tmp_34_3_i_reg_2117 <= tmp_34_3_i_fu_1328_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_28)) then
                tmp_34_4_i_reg_2205 <= tmp_34_4_i_fu_1423_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19)) then
                tmp_34_6_i_reg_2271 <= tmp_34_6_i_fu_1494_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_28) and (ap_const_lv1_0 = or_cond7_i_reg_1939) and (ap_const_lv1_0 = or_cond6_i_reg_2006))) then
                tmp_39_i_reg_2127 <= rgb_i_q0(7 downto 5);
                tmp_40_i_reg_2132 <= rgb_i_q1(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond3_i_fu_717_p2))) then
                    tmp_3_i_reg_1665(18 downto 7) <= tmp_3_i_fu_753_p2(18 downto 7);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18) and (ap_const_lv1_0 = or_cond9_i_reg_1948) and (ap_const_lv1_0 = or_cond8_i_reg_2010))) then
                tmp_42_i_reg_2178 <= rgb_i_q0(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it1))) then
                tmp_47_i_reg_2332 <= rgb_i_q0(7 downto 5);
                tmp_48_i_reg_2337 <= rgb_i_q1(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_14) and not((ap_const_lv1_0 = tmp_5_reg_1695)))) then
                tmp_4_reg_1701 <= tmp_4_fu_840_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_12)) then
                tmp_5_reg_1695 <= tmp_5_i_fu_822_p2(15 downto 15);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_1695)) and (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_15))) then
                tmp_6_reg_1711 <= neg_mul_i_fu_852_p2(32 downto 23);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_14) and (ap_const_lv1_0 = tmp_5_reg_1695))) then
                tmp_7_reg_1706 <= grp_fu_1592_p2(33 downto 23);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_1695)) and (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_16))) then
                tmp_8_reg_1716 <= tmp_8_fu_880_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_5_reg_1695) and (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_16))) then
                tmp_9_reg_1721 <= tmp_9_fu_884_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_409))) then
                tmp_cast_i_reg_1634 <= tmp_cast_i_fu_690_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19))) then
                tmp_i_reg_1793 <= tmp_i_fu_964_p2;
            end if;
        end if;
    end process;
    tmp_91_cast_i_reg_1647(16) <= '0';
    tmp_13_7_cast_i_reg_1652(16) <= '0';
    tmp_3_i_reg_1665(6 downto 0) <= "0000000";
    j_cast_cast_i_reg_1832(15 downto 9) <= "0000000";
    j_1_cast_cast_i_reg_1842(0) <= '1';
    j_1_cast_cast_i_reg_1842(15 downto 9) <= "0000000";
    j_1_1_cast_cast_i_reg_1852(1) <= '1';
    j_1_1_cast_cast_i_reg_1852(15 downto 9) <= "0000000";
    j_1_2_cast_cast_i_reg_1862(1 downto 0) <= "11";
    j_1_2_cast_cast_i_reg_1862(15 downto 9) <= "0000000";
    j_1_3_cast_cast_i_reg_1872(2) <= '1';
    j_1_3_cast_cast_i_reg_1872(15 downto 9) <= "0000000";
    j_1_4_cast_cast_i_reg_1882(0) <= '1';
    j_1_4_cast_cast_i_reg_1882(2 downto 2) <= "1";
    j_1_4_cast_cast_i_reg_1882(15 downto 9) <= "0000000";
    j_1_5_cast_cast_i_reg_1892(2 downto 1) <= "11";
    j_1_5_cast_cast_i_reg_1892(15 downto 9) <= "0000000";
    j_1_6_cast_cast_i_reg_1902(2 downto 0) <= "111";
    j_1_6_cast_cast_i_reg_1902(15 downto 9) <= "0000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_sig_bdd_149, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp1_stg5_fsm_23, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_reg_ppiten_pp1_it3, ap_sig_bdd_409, tmp_2_i_fu_705_p2, exitcond3_i_fu_717_p2, exitcond5_i_fu_781_p2, exitcond_flatten_i_fu_899_p2, ap_sig_ioackin_m_axi_frame_in_ARREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_409)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = tmp_2_i_fu_705_p2))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_lv1_0 = exitcond3_i_fu_717_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_in_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_11;
            when ap_ST_pp0_stg0_fsm_11 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond5_i_fu_781_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_11;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond5_i_fu_781_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_11;
                end if;
            when ap_ST_st15_fsm_12 => 
                ap_NS_fsm <= ap_ST_st16_fsm_13;
            when ap_ST_st16_fsm_13 => 
                ap_NS_fsm <= ap_ST_st17_fsm_14;
            when ap_ST_st17_fsm_14 => 
                ap_NS_fsm <= ap_ST_st18_fsm_15;
            when ap_ST_st18_fsm_15 => 
                ap_NS_fsm <= ap_ST_st19_fsm_16;
            when ap_ST_st19_fsm_16 => 
                ap_NS_fsm <= ap_ST_st20_fsm_17;
            when ap_ST_st20_fsm_17 => 
                ap_NS_fsm <= ap_ST_pp1_stg0_fsm_18;
            when ap_ST_pp1_stg0_fsm_18 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = exitcond_flatten_i_fu_899_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg1_fsm_19;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_pp1_stg1_fsm_19 => 
                ap_NS_fsm <= ap_ST_pp1_stg2_fsm_20;
            when ap_ST_pp1_stg2_fsm_20 => 
                ap_NS_fsm <= ap_ST_pp1_stg3_fsm_21;
            when ap_ST_pp1_stg3_fsm_21 => 
                ap_NS_fsm <= ap_ST_pp1_stg4_fsm_22;
            when ap_ST_pp1_stg4_fsm_22 => 
                ap_NS_fsm <= ap_ST_pp1_stg5_fsm_23;
            when ap_ST_pp1_stg5_fsm_23 => 
                if (not(((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it2))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg6_fsm_24;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_pp1_stg6_fsm_24 => 
                ap_NS_fsm <= ap_ST_pp1_stg7_fsm_25;
            when ap_ST_pp1_stg7_fsm_25 => 
                ap_NS_fsm <= ap_ST_pp1_stg8_fsm_26;
            when ap_ST_pp1_stg8_fsm_26 => 
                ap_NS_fsm <= ap_ST_pp1_stg9_fsm_27;
            when ap_ST_pp1_stg9_fsm_27 => 
                ap_NS_fsm <= ap_ST_pp1_stg10_fsm_28;
            when ap_ST_pp1_stg10_fsm_28 => 
                ap_NS_fsm <= ap_ST_pp1_stg11_fsm_29;
            when ap_ST_pp1_stg11_fsm_29 => 
                ap_NS_fsm <= ap_ST_pp1_stg0_fsm_18;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st3_fsm_2, exitcond3_i_fu_717_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond3_i_fu_717_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, exitcond3_i_fu_717_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond3_i_fu_717_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_141 assign process. --
    ap_sig_bdd_141_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_141 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    -- ap_sig_bdd_149 assign process. --
    ap_sig_bdd_149_assign_proc : process(m_axi_frame_in_RVALID, exitcond5_i_reg_1676)
    begin
                ap_sig_bdd_149 <= ((m_axi_frame_in_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond5_i_reg_1676));
    end process;


    -- ap_sig_bdd_174 assign process. --
    ap_sig_bdd_174_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_174 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    -- ap_sig_bdd_199 assign process. --
    ap_sig_bdd_199_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_199 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    -- ap_sig_bdd_215 assign process. --
    ap_sig_bdd_215_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_215 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    -- ap_sig_bdd_234 assign process. --
    ap_sig_bdd_234_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_234 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    -- ap_sig_bdd_245 assign process. --
    ap_sig_bdd_245_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_245 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    -- ap_sig_bdd_254 assign process. --
    ap_sig_bdd_254_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_254 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    -- ap_sig_bdd_274 assign process. --
    ap_sig_bdd_274_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_274 <= (ap_const_lv1_1 = ap_CS_fsm(27 downto 27));
    end process;


    -- ap_sig_bdd_294 assign process. --
    ap_sig_bdd_294_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_294 <= (ap_const_lv1_1 = ap_CS_fsm(28 downto 28));
    end process;


    -- ap_sig_bdd_311 assign process. --
    ap_sig_bdd_311_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_311 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    -- ap_sig_bdd_368 assign process. --
    ap_sig_bdd_368_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_368 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    -- ap_sig_bdd_384 assign process. --
    ap_sig_bdd_384_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_384 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    -- ap_sig_bdd_409 assign process. --
    ap_sig_bdd_409_assign_proc : process(ap_start, ap_done_reg, frame_in1_empty_n)
    begin
                ap_sig_bdd_409 <= ((frame_in1_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_427 assign process. --
    ap_sig_bdd_427_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_427 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_444 assign process. --
    ap_sig_bdd_444_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_444 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_458 assign process. --
    ap_sig_bdd_458_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_458 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_477 assign process. --
    ap_sig_bdd_477_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_477 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    -- ap_sig_bdd_488 assign process. --
    ap_sig_bdd_488_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_488 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    -- ap_sig_bdd_49 assign process. --
    ap_sig_bdd_49_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_49 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_503 assign process. --
    ap_sig_bdd_503_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_503 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    -- ap_sig_bdd_513 assign process. --
    ap_sig_bdd_513_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_513 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    -- ap_sig_bdd_526 assign process. --
    ap_sig_bdd_526_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_526 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    -- ap_sig_bdd_765 assign process. --
    ap_sig_bdd_765_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_765 <= (ap_const_lv1_1 = ap_CS_fsm(29 downto 29));
    end process;


    -- ap_sig_bdd_882 assign process. --
    ap_sig_bdd_882_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_882 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    -- ap_sig_bdd_997 assign process. --
    ap_sig_bdd_997_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_997 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_11 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_11_assign_proc : process(ap_sig_bdd_141)
    begin
        if (ap_sig_bdd_141) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_18 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_18_assign_proc : process(ap_sig_bdd_234)
    begin
        if (ap_sig_bdd_234) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg10_fsm_28 assign process. --
    ap_sig_cseq_ST_pp1_stg10_fsm_28_assign_proc : process(ap_sig_bdd_294)
    begin
        if (ap_sig_bdd_294) then 
            ap_sig_cseq_ST_pp1_stg10_fsm_28 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg10_fsm_28 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg11_fsm_29 assign process. --
    ap_sig_cseq_ST_pp1_stg11_fsm_29_assign_proc : process(ap_sig_bdd_765)
    begin
        if (ap_sig_bdd_765) then 
            ap_sig_cseq_ST_pp1_stg11_fsm_29 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg11_fsm_29 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg1_fsm_19 assign process. --
    ap_sig_cseq_ST_pp1_stg1_fsm_19_assign_proc : process(ap_sig_bdd_215)
    begin
        if (ap_sig_bdd_215) then 
            ap_sig_cseq_ST_pp1_stg1_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg1_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg2_fsm_20 assign process. --
    ap_sig_cseq_ST_pp1_stg2_fsm_20_assign_proc : process(ap_sig_bdd_368)
    begin
        if (ap_sig_bdd_368) then 
            ap_sig_cseq_ST_pp1_stg2_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg2_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg3_fsm_21 assign process. --
    ap_sig_cseq_ST_pp1_stg3_fsm_21_assign_proc : process(ap_sig_bdd_311)
    begin
        if (ap_sig_bdd_311) then 
            ap_sig_cseq_ST_pp1_stg3_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg3_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg4_fsm_22 assign process. --
    ap_sig_cseq_ST_pp1_stg4_fsm_22_assign_proc : process(ap_sig_bdd_384)
    begin
        if (ap_sig_bdd_384) then 
            ap_sig_cseq_ST_pp1_stg4_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg4_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg5_fsm_23 assign process. --
    ap_sig_cseq_ST_pp1_stg5_fsm_23_assign_proc : process(ap_sig_bdd_174)
    begin
        if (ap_sig_bdd_174) then 
            ap_sig_cseq_ST_pp1_stg5_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg5_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg6_fsm_24 assign process. --
    ap_sig_cseq_ST_pp1_stg6_fsm_24_assign_proc : process(ap_sig_bdd_245)
    begin
        if (ap_sig_bdd_245) then 
            ap_sig_cseq_ST_pp1_stg6_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg6_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg7_fsm_25 assign process. --
    ap_sig_cseq_ST_pp1_stg7_fsm_25_assign_proc : process(ap_sig_bdd_199)
    begin
        if (ap_sig_bdd_199) then 
            ap_sig_cseq_ST_pp1_stg7_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg7_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg8_fsm_26 assign process. --
    ap_sig_cseq_ST_pp1_stg8_fsm_26_assign_proc : process(ap_sig_bdd_254)
    begin
        if (ap_sig_bdd_254) then 
            ap_sig_cseq_ST_pp1_stg8_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg8_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg9_fsm_27 assign process. --
    ap_sig_cseq_ST_pp1_stg9_fsm_27_assign_proc : process(ap_sig_bdd_274)
    begin
        if (ap_sig_bdd_274) then 
            ap_sig_cseq_ST_pp1_stg9_fsm_27 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg9_fsm_27 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st11_fsm_10 assign process. --
    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_bdd_882)
    begin
        if (ap_sig_bdd_882) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st15_fsm_12 assign process. --
    ap_sig_cseq_ST_st15_fsm_12_assign_proc : process(ap_sig_bdd_477)
    begin
        if (ap_sig_bdd_477) then 
            ap_sig_cseq_ST_st15_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st17_fsm_14 assign process. --
    ap_sig_cseq_ST_st17_fsm_14_assign_proc : process(ap_sig_bdd_488)
    begin
        if (ap_sig_bdd_488) then 
            ap_sig_cseq_ST_st17_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st18_fsm_15 assign process. --
    ap_sig_cseq_ST_st18_fsm_15_assign_proc : process(ap_sig_bdd_503)
    begin
        if (ap_sig_bdd_503) then 
            ap_sig_cseq_ST_st18_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st19_fsm_16 assign process. --
    ap_sig_cseq_ST_st19_fsm_16_assign_proc : process(ap_sig_bdd_513)
    begin
        if (ap_sig_bdd_513) then 
            ap_sig_cseq_ST_st19_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_49)
    begin
        if (ap_sig_bdd_49) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st20_fsm_17 assign process. --
    ap_sig_cseq_ST_st20_fsm_17_assign_proc : process(ap_sig_bdd_526)
    begin
        if (ap_sig_bdd_526) then 
            ap_sig_cseq_ST_st20_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_427)
    begin
        if (ap_sig_bdd_427) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_444)
    begin
        if (ap_sig_bdd_444) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_458)
    begin
        if (ap_sig_bdd_458) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_997)
    begin
        if (ap_sig_bdd_997) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_frame_in_ARREADY assign process. --
    ap_sig_ioackin_m_axi_frame_in_ARREADY_assign_proc : process(m_axi_frame_in_ARREADY, ap_reg_ioackin_m_axi_frame_in_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_in_ARREADY)) then 
            ap_sig_ioackin_m_axi_frame_in_ARREADY <= m_axi_frame_in_ARREADY;
        else 
            ap_sig_ioackin_m_axi_frame_in_ARREADY <= ap_const_logic_1;
        end if; 
    end process;

    exitcond1215_i_fu_917_p2 <= "1" when (j_i_phi_fu_609_p4 = ap_const_lv9_140) else "0";
    exitcond3_i_fu_717_p2 <= "1" when (k_i_reg_537 = ap_const_lv7_78) else "0";
    exitcond5_i_fu_781_p2 <= "1" when (indvar2_i_phi_fu_553_p4 = ap_const_lv11_780) else "0";
    exitcond_flatten_i_fu_899_p2 <= "1" when (indvar_flatten_i_phi_fu_565_p4 = ap_const_lv7_50) else "0";

    -- featureHist_address0 assign process. --
    featureHist_address0_assign_proc : process(ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_reg_ppiten_pp1_it3, ap_sig_cseq_ST_pp1_stg7_fsm_25, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_sig_cseq_ST_pp1_stg8_fsm_26, ap_sig_cseq_ST_pp1_stg9_fsm_27, ap_sig_cseq_ST_pp1_stg3_fsm_21, ap_sig_cseq_ST_pp1_stg2_fsm_20, ap_sig_cseq_ST_pp1_stg4_fsm_22, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp1_stg11_fsm_29, featureHist_addr_3_reg_2188, featureHist_addr_4_reg_2199, featureHist_addr_5_reg_2230, tmp_1_i_fu_694_p1, tmp_23_i_fu_1298_p1, tmp_32_1_i_fu_1375_p1, tmp_32_5_i_fu_1545_p1, tmp_32_6_i_fu_1567_p1, tmp_32_7_i_fu_1588_p1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21))) then 
            featureHist_address0 <= featureHist_addr_5_reg_2230;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29))) then 
            featureHist_address0 <= featureHist_addr_4_reg_2199;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25))) then 
            featureHist_address0 <= featureHist_addr_3_reg_2188;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            featureHist_address0 <= tmp_1_i_fu_694_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_20))) then 
            featureHist_address0 <= tmp_32_7_i_fu_1588_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_27))) then 
            featureHist_address0 <= tmp_32_6_i_fu_1567_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22))) then 
            featureHist_address0 <= tmp_32_5_i_fu_1545_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
            featureHist_address0 <= tmp_32_1_i_fu_1375_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26))) then 
            featureHist_address0 <= tmp_23_i_fu_1298_p1(9 - 1 downto 0);
        else 
            featureHist_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    -- featureHist_address1 assign process. --
    featureHist_address1_assign_proc : process(ap_sig_cseq_ST_pp1_stg5_fsm_23, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_reg_ppiten_pp1_it3, ap_sig_cseq_ST_pp1_stg7_fsm_25, ap_sig_cseq_ST_pp1_stg1_fsm_19, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_sig_cseq_ST_pp1_stg8_fsm_26, ap_sig_cseq_ST_pp1_stg3_fsm_21, ap_sig_cseq_ST_pp1_stg4_fsm_22, featureHist_addr_1_reg_2071, ap_sig_cseq_ST_pp1_stg11_fsm_29, featureHist_addr_2_reg_2172, featureHist_addr_6_reg_2326, featureHist_addr_7_reg_2347, featureHist_addr_8_reg_2358, tmp_32_2_i_fu_1398_p1, tmp_32_3_i_fu_1419_p1, tmp_32_4_i_fu_1459_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) then 
            featureHist_address1 <= featureHist_addr_8_reg_2358;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19))) then 
            featureHist_address1 <= featureHist_addr_7_reg_2347;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25))) then 
            featureHist_address1 <= featureHist_addr_6_reg_2326;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21))) then 
            featureHist_address1 <= featureHist_addr_2_reg_2172;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29))) then 
            featureHist_address1 <= featureHist_addr_1_reg_2071;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
            featureHist_address1 <= tmp_32_4_i_fu_1459_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26))) then 
            featureHist_address1 <= tmp_32_3_i_fu_1419_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22))) then 
            featureHist_address1 <= tmp_32_2_i_fu_1398_p1(9 - 1 downto 0);
        else 
            featureHist_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    -- featureHist_ce0 assign process. --
    featureHist_ce0_assign_proc : process(ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_reg_ppiten_pp1_it3, ap_sig_cseq_ST_pp1_stg7_fsm_25, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_sig_cseq_ST_pp1_stg8_fsm_26, ap_sig_cseq_ST_pp1_stg9_fsm_27, ap_sig_cseq_ST_pp1_stg3_fsm_21, ap_sig_cseq_ST_pp1_stg2_fsm_20, ap_sig_cseq_ST_pp1_stg4_fsm_22, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp1_stg11_fsm_29)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21)) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25)))) then 
            featureHist_ce0 <= ap_const_logic_1;
        else 
            featureHist_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- featureHist_ce1 assign process. --
    featureHist_ce1_assign_proc : process(ap_sig_cseq_ST_pp1_stg5_fsm_23, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_reg_ppiten_pp1_it3, ap_sig_cseq_ST_pp1_stg7_fsm_25, ap_sig_cseq_ST_pp1_stg1_fsm_19, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_sig_cseq_ST_pp1_stg8_fsm_26, ap_sig_cseq_ST_pp1_stg3_fsm_21, ap_sig_cseq_ST_pp1_stg4_fsm_22, ap_sig_cseq_ST_pp1_stg11_fsm_29)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3)))) then 
            featureHist_ce1 <= ap_const_logic_1;
        else 
            featureHist_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- featureHist_d0 assign process. --
    featureHist_d0_assign_proc : process(ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp1_stg7_fsm_25, ap_sig_cseq_ST_pp1_stg3_fsm_21, reg_678, reg_684, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp1_stg11_fsm_29)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29)))) then 
            featureHist_d0 <= reg_684;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25))) then 
            featureHist_d0 <= reg_678;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            featureHist_d0 <= ap_const_lv16_0;
        else 
            featureHist_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- featureHist_d1 assign process. --
    featureHist_d1_assign_proc : process(ap_sig_cseq_ST_pp1_stg5_fsm_23, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_reg_ppiten_pp1_it3, ap_sig_cseq_ST_pp1_stg7_fsm_25, ap_sig_cseq_ST_pp1_stg1_fsm_19, ap_sig_cseq_ST_pp1_stg3_fsm_21, reg_678, reg_684, ap_sig_cseq_ST_pp1_stg11_fsm_29)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25))) then 
            featureHist_d1 <= reg_684;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3)))) then 
            featureHist_d1 <= reg_678;
        else 
            featureHist_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- featureHist_we0 assign process. --
    featureHist_we0_assign_proc : process(ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp1_stg7_fsm_25, ap_reg_ppstg_or_cond5_i_reg_1930_pp1_it1, ap_reg_ppstg_or_cond4_i_reg_2002_pp1_it1, ap_sig_cseq_ST_pp1_stg3_fsm_21, ap_reg_ppstg_or_cond7_i_reg_1939_pp1_it1, ap_reg_ppstg_or_cond6_i_reg_2006_pp1_it1, ap_reg_ppstg_or_cond9_i_reg_1948_pp1_it1, ap_reg_ppstg_or_cond8_i_reg_2010_pp1_it1, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp1_stg11_fsm_29)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond5_i_reg_1930_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_i_reg_2002_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond7_i_reg_1939_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond6_i_reg_2006_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond9_i_reg_1948_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond8_i_reg_2010_pp1_it1)))) then 
            featureHist_we0 <= ap_const_logic_1;
        else 
            featureHist_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- featureHist_we1 assign process. --
    featureHist_we1_assign_proc : process(ap_sig_cseq_ST_pp1_stg5_fsm_23, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_reg_ppiten_pp1_it3, exitcond_flatten_i_reg_1731, or_cond1_i_reg_1912, or_cond_i_reg_1984, ap_sig_cseq_ST_pp1_stg7_fsm_25, or_cond3_i_reg_1921, or_cond2_i_reg_1998, ap_sig_cseq_ST_pp1_stg1_fsm_19, ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it2, ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it2, ap_sig_cseq_ST_pp1_stg3_fsm_21, ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it2, ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it2, ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it3, ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it3, ap_sig_cseq_ST_pp1_stg11_fsm_29)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_lv1_0 = or_cond1_i_reg_1912) and (ap_const_lv1_0 = or_cond_i_reg_1984) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = or_cond3_i_reg_1921) and (ap_const_lv1_0 = or_cond2_i_reg_1998) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond11_i_reg_1957_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond10_i_reg_2014_pp1_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond13_i_reg_1966_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond12_i_reg_2018_pp1_it2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond15_i_reg_1975_pp1_it3) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond14_i_reg_2022_pp1_it3)))) then 
            featureHist_we1 <= ap_const_logic_1;
        else 
            featureHist_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_in1_read assign process. --
    frame_in1_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_409)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_409))) then 
            frame_in1_read <= ap_const_logic_1;
        else 
            frame_in1_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1592_ce <= ap_const_logic_1;
    grp_fu_1592_p0 <= ap_const_lv34_11112(18 - 1 downto 0);
    grp_fu_666_p2 <= std_logic_vector(unsigned(reg_652) + unsigned(ap_const_lv16_1));
    grp_fu_672_p2 <= std_logic_vector(unsigned(reg_661) + unsigned(ap_const_lv16_1));
    i_1211_i_fu_947_p2 <= std_logic_vector(unsigned(i_i_phi_fu_587_p4) + unsigned(ap_const_lv2_1));
    i_cast_i_fu_961_p1 <= std_logic_vector(resize(unsigned(i_mid2_i_reg_1787),9));

    -- i_i_phi_fu_587_p4 assign process. --
    i_i_phi_fu_587_p4_assign_proc : process(i_i_reg_583, ap_reg_ppiten_pp1_it1, exitcond_flatten_i_reg_1731, ap_sig_cseq_ST_pp1_stg0_fsm_18, i_mid2_i_reg_1787)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
            i_i_phi_fu_587_p4 <= i_mid2_i_reg_1787;
        else 
            i_i_phi_fu_587_p4 <= i_i_reg_583;
        end if; 
    end process;

    i_mid2_i_fu_953_p3 <= 
        i_1211_i_fu_947_p2 when (exitcond1215_i_fu_917_p2(0) = '1') else 
        i_i_phi_fu_587_p4;

    -- indvar2_i_phi_fu_553_p4 assign process. --
    indvar2_i_phi_fu_553_p4_assign_proc : process(indvar2_i_reg_549, ap_sig_cseq_ST_pp0_stg0_fsm_11, exitcond5_i_reg_1676, ap_reg_ppiten_pp0_it1, indvar_next2_i_reg_1680)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_11) and (ap_const_lv1_0 = exitcond5_i_reg_1676) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            indvar2_i_phi_fu_553_p4 <= indvar_next2_i_reg_1680;
        else 
            indvar2_i_phi_fu_553_p4 <= indvar2_i_reg_549;
        end if; 
    end process;


    -- indvar_flatten_i_phi_fu_565_p4 assign process. --
    indvar_flatten_i_phi_fu_565_p4_assign_proc : process(indvar_flatten_i_reg_561, ap_reg_ppiten_pp1_it1, exitcond_flatten_i_reg_1731, ap_sig_cseq_ST_pp1_stg0_fsm_18, indvar_flatten_next_i_reg_1735)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
            indvar_flatten_i_phi_fu_565_p4 <= indvar_flatten_next_i_reg_1735;
        else 
            indvar_flatten_i_phi_fu_565_p4 <= indvar_flatten_i_reg_561;
        end if; 
    end process;

    indvar_flatten_next_i_fu_905_p2 <= std_logic_vector(unsigned(indvar_flatten_i_phi_fu_565_p4) + unsigned(ap_const_lv7_1));
    indvar_next2_i_fu_787_p2 <= std_logic_vector(unsigned(indvar2_i_phi_fu_553_p4) + unsigned(ap_const_lv11_1));
    indvarinc_i_fu_699_p2 <= std_logic_vector(unsigned(invdar_i_reg_526) + unsigned(ap_const_lv9_1));
    iterator_1_dup_i_fu_911_p2 <= std_logic_vector(unsigned(iterator_i_phi_fu_576_p4) + unsigned(ap_const_lv11_3C0));

    -- iterator_i_46_phi_fu_598_p4 assign process. --
    iterator_i_46_phi_fu_598_p4_assign_proc : process(iterator_i_46_reg_594, ap_reg_ppiten_pp1_it1, exitcond_flatten_i_reg_1731, ap_sig_cseq_ST_pp1_stg0_fsm_18, tmp_34_7_i_reg_1798)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
            iterator_i_46_phi_fu_598_p4 <= tmp_34_7_i_reg_1798;
        else 
            iterator_i_46_phi_fu_598_p4 <= iterator_i_46_reg_594;
        end if; 
    end process;


    -- iterator_i_phi_fu_576_p4 assign process. --
    iterator_i_phi_fu_576_p4_assign_proc : process(iterator_i_reg_572, ap_reg_ppiten_pp1_it1, exitcond_flatten_i_reg_1731, ap_sig_cseq_ST_pp1_stg0_fsm_18, iterator_mid2_i_44_reg_1782)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
            iterator_i_phi_fu_576_p4 <= iterator_mid2_i_44_reg_1782;
        else 
            iterator_i_phi_fu_576_p4 <= iterator_i_reg_572;
        end if; 
    end process;

    iterator_mid2_i_44_fu_939_p3 <= 
        iterator_1_dup_i_fu_911_p2 when (exitcond1215_i_fu_917_p2(0) = '1') else 
        iterator_i_phi_fu_576_p4;
    iterator_mid2_i_fu_923_p3 <= 
        iterator_1_dup_i_fu_911_p2 when (exitcond1215_i_fu_917_p2(0) = '1') else 
        iterator_i_46_phi_fu_598_p4;
    j_1_1_cast_cast_i_fu_1019_p1 <= std_logic_vector(resize(unsigned(j_1_1_i_fu_1014_p2),16));
    j_1_1_i_fu_1014_p2 <= (j_mid2_i_reg_1769 or ap_const_lv9_2);
    j_1_2_cast_cast_i_fu_1033_p1 <= std_logic_vector(resize(unsigned(j_1_2_i_fu_1028_p2),16));
    j_1_2_i_fu_1028_p2 <= (j_mid2_i_reg_1769 or ap_const_lv9_3);
    j_1_3_cast_cast_i_fu_1047_p1 <= std_logic_vector(resize(unsigned(j_1_3_i_fu_1042_p2),16));
    j_1_3_i_fu_1042_p2 <= (j_mid2_i_reg_1769 or ap_const_lv9_4);
    j_1_4_cast_cast_i_fu_1061_p1 <= std_logic_vector(resize(unsigned(j_1_4_i_fu_1056_p2),16));
    j_1_4_i_fu_1056_p2 <= (j_mid2_i_reg_1769 or ap_const_lv9_5);
    j_1_5_cast_cast_i_fu_1075_p1 <= std_logic_vector(resize(unsigned(j_1_5_i_fu_1070_p2),16));
    j_1_5_i_fu_1070_p2 <= (j_mid2_i_reg_1769 or ap_const_lv9_6);
    j_1_6_cast_cast_i_fu_1089_p1 <= std_logic_vector(resize(unsigned(j_1_6_i_fu_1084_p2),16));
    j_1_6_i_fu_1084_p2 <= (j_mid2_i_reg_1769 or ap_const_lv9_7);
    j_1_7_i_fu_974_p2 <= std_logic_vector(unsigned(j_mid2_i_reg_1769) + unsigned(ap_const_lv9_8));
    j_1_cast_cast_i_fu_1005_p1 <= std_logic_vector(resize(unsigned(j_1_i_fu_1000_p2),16));
    j_1_i_fu_1000_p2 <= (j_mid2_i_reg_1769 or ap_const_lv9_1);
    j_cast_cast_i_fu_992_p1 <= std_logic_vector(resize(unsigned(j_mid2_i_reg_1769),16));

    -- j_i_phi_fu_609_p4 assign process. --
    j_i_phi_fu_609_p4_assign_proc : process(j_i_reg_605, ap_reg_ppiten_pp1_it1, exitcond_flatten_i_reg_1731, ap_sig_cseq_ST_pp1_stg0_fsm_18, j_1_7_i_reg_1803)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1731) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
            j_i_phi_fu_609_p4 <= j_1_7_i_reg_1803;
        else 
            j_i_phi_fu_609_p4 <= j_i_reg_605;
        end if; 
    end process;

    j_mid2_i_fu_931_p3 <= 
        ap_const_lv9_0 when (exitcond1215_i_fu_917_p2(0) = '1') else 
        j_i_phi_fu_609_p4;
    k_fu_723_p2 <= std_logic_vector(unsigned(k_i_reg_537) + unsigned(ap_const_lv7_1));
    m_axi_frame_in_ARADDR <= frame_in_addr_reg_1670;
    m_axi_frame_in_ARBURST <= ap_const_lv2_0;
    m_axi_frame_in_ARCACHE <= ap_const_lv4_0;
    m_axi_frame_in_ARID <= ap_const_lv1_0;
    m_axi_frame_in_ARLEN <= ap_const_lv32_780;
    m_axi_frame_in_ARLOCK <= ap_const_lv2_0;
    m_axi_frame_in_ARPROT <= ap_const_lv3_0;
    m_axi_frame_in_ARQOS <= ap_const_lv4_0;
    m_axi_frame_in_ARREGION <= ap_const_lv4_0;
    m_axi_frame_in_ARSIZE <= ap_const_lv3_0;
    m_axi_frame_in_ARUSER <= ap_const_lv1_0;

    -- m_axi_frame_in_ARVALID assign process. --
    m_axi_frame_in_ARVALID_assign_proc : process(ap_reg_ioackin_m_axi_frame_in_ARREADY, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_in_ARREADY))) then 
            m_axi_frame_in_ARVALID <= ap_const_logic_1;
        else 
            m_axi_frame_in_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_frame_in_AWADDR <= ap_const_lv32_0;
    m_axi_frame_in_AWBURST <= ap_const_lv2_0;
    m_axi_frame_in_AWCACHE <= ap_const_lv4_0;
    m_axi_frame_in_AWID <= ap_const_lv1_0;
    m_axi_frame_in_AWLEN <= ap_const_lv32_0;
    m_axi_frame_in_AWLOCK <= ap_const_lv2_0;
    m_axi_frame_in_AWPROT <= ap_const_lv3_0;
    m_axi_frame_in_AWQOS <= ap_const_lv4_0;
    m_axi_frame_in_AWREGION <= ap_const_lv4_0;
    m_axi_frame_in_AWSIZE <= ap_const_lv3_0;
    m_axi_frame_in_AWUSER <= ap_const_lv1_0;
    m_axi_frame_in_AWVALID <= ap_const_logic_0;
    m_axi_frame_in_BREADY <= ap_const_logic_0;

    -- m_axi_frame_in_RREADY assign process. --
    m_axi_frame_in_RREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_11, exitcond5_i_reg_1676, ap_sig_bdd_149, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_11) and (ap_const_lv1_0 = exitcond5_i_reg_1676) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            m_axi_frame_in_RREADY <= ap_const_logic_1;
        else 
            m_axi_frame_in_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_frame_in_WDATA <= ap_const_lv8_0;
    m_axi_frame_in_WID <= ap_const_lv1_0;
    m_axi_frame_in_WLAST <= ap_const_logic_0;
    m_axi_frame_in_WSTRB <= ap_const_lv1_0;
    m_axi_frame_in_WUSER <= ap_const_lv1_0;
    m_axi_frame_in_WVALID <= ap_const_logic_0;
    neg_mul_i_fu_852_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(tmp_4_reg_1701));
    neg_ti_i_fu_888_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(tmp_8_reg_1716));
    or_cond10_i_fu_1202_p2 <= (tmp_14_7_i_reg_1820 or tmp_16_5_i_reg_1961);
    or_cond11_i_fu_1138_p2 <= (tmp_4_i_reg_1808 or tmp_12_5_i_reg_1887);
    or_cond12_i_fu_1206_p2 <= (tmp_14_7_i_reg_1820 or tmp_16_6_i_reg_1970);
    or_cond13_i_fu_1146_p2 <= (tmp_4_i_reg_1808 or tmp_12_6_i_reg_1897);
    or_cond14_i_fu_1210_p2 <= (tmp_14_7_i_reg_1820 or tmp_16_7_i_reg_1979);
    or_cond15_i_fu_1154_p2 <= (tmp_4_i_reg_1808 or tmp_12_7_i_reg_1907);
    or_cond1_i_fu_1098_p2 <= (tmp_4_i_reg_1808 or tmp_6_i_reg_1837);
    or_cond2_i_fu_1186_p2 <= (tmp_14_7_i_reg_1820 or tmp_16_1_i_reg_1925);
    or_cond3_i_fu_1106_p2 <= (tmp_4_i_reg_1808 or tmp_12_1_i_reg_1847);
    or_cond4_i_fu_1190_p2 <= (tmp_14_7_i_reg_1820 or tmp_16_2_i_reg_1934);
    or_cond5_i_fu_1114_p2 <= (tmp_4_i_reg_1808 or tmp_12_2_i_reg_1857);
    or_cond6_i_fu_1194_p2 <= (tmp_14_7_i_reg_1820 or tmp_16_3_i_reg_1943);
    or_cond7_i_fu_1122_p2 <= (tmp_4_i_reg_1808 or tmp_12_3_i_reg_1867);
    or_cond8_i_fu_1198_p2 <= (tmp_14_7_i_reg_1820 or tmp_16_4_i_reg_1952);
    or_cond9_i_fu_1130_p2 <= (tmp_4_i_reg_1808 or tmp_12_4_i_reg_1877);
    or_cond_i_fu_1162_p2 <= (tmp_14_7_i_reg_1820 or tmp_10_i_reg_1916);
    p_shl1_cast_i_fu_749_p1 <= std_logic_vector(resize(unsigned(p_shl1_i_fu_741_p3),19));
    p_shl1_i_fu_741_p3 <= (k_i_reg_537 & ap_const_lv7_0);
    p_shl2_cast_i_fu_806_p1 <= std_logic_vector(resize(unsigned(p_shl2_i_fu_798_p3),16));
    p_shl2_i_fu_798_p3 <= (k_i_reg_537 & ap_const_lv8_0);
    p_shl3_cast_i_fu_818_p1 <= std_logic_vector(resize(unsigned(p_shl3_i_fu_810_p3),16));
    p_shl3_i_fu_810_p3 <= (k_i_reg_537 & ap_const_lv4_0);
    p_shl_cast_i_fu_737_p1 <= std_logic_vector(resize(unsigned(p_shl_i_fu_729_p3),19));
    p_shl_i_fu_729_p3 <= (k_i_reg_537 & ap_const_lv11_0);
    p_v_i_fu_873_p3 <= 
        tmp_13_i_fu_867_p1 when (tmp_5_reg_1695(0) = '1') else 
        tmp_14_i_fu_870_p1;

    -- rgb_i_address0 assign process. --
    rgb_i_address0_assign_proc : process(ap_sig_cseq_ST_pp1_stg5_fsm_23, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp1_stg7_fsm_25, ap_sig_cseq_ST_pp1_stg1_fsm_19, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_sig_cseq_ST_pp1_stg6_fsm_24, ap_sig_cseq_ST_pp1_stg8_fsm_26, ap_sig_cseq_ST_pp1_stg9_fsm_27, ap_sig_cseq_ST_pp1_stg10_fsm_28, ap_sig_cseq_ST_pp1_stg3_fsm_21, ap_sig_cseq_ST_pp1_stg2_fsm_20, ap_sig_cseq_ST_pp1_stg4_fsm_22, ap_sig_cseq_ST_pp1_stg11_fsm_29, tmp_12_i_fu_1171_p1, tmp_20_i_fu_1214_p1, tmp_23_1_i_fu_1238_p1, tmp_23_2_i_fu_1283_p1, tmp_18_2_i_fu_1302_p1, tmp_18_3_i_fu_1320_p1, tmp_18_4_i_fu_1338_p1, tmp_23_4_i_fu_1371_p1, tmp_18_5_i_fu_1463_p1, tmp_18_6_i_fu_1481_p1, tmp_23_6_i_fu_1499_p1, tmp_18_7_i_fu_1537_p1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21))) then 
            rgb_i_address0 <= tmp_18_7_i_fu_1537_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_20))) then 
            rgb_i_address0 <= tmp_23_6_i_fu_1499_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19))) then 
            rgb_i_address0 <= tmp_18_6_i_fu_1481_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
            rgb_i_address0 <= tmp_18_5_i_fu_1463_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29))) then 
            rgb_i_address0 <= tmp_23_4_i_fu_1371_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_28))) then 
            rgb_i_address0 <= tmp_18_4_i_fu_1338_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_27))) then 
            rgb_i_address0 <= tmp_18_3_i_fu_1320_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26))) then 
            rgb_i_address0 <= tmp_18_2_i_fu_1302_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25))) then 
            rgb_i_address0 <= tmp_23_2_i_fu_1283_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_24))) then 
            rgb_i_address0 <= tmp_23_1_i_fu_1238_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            rgb_i_address0 <= tmp_20_i_fu_1214_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22))) then 
            rgb_i_address0 <= tmp_12_i_fu_1171_p1(11 - 1 downto 0);
        else 
            rgb_i_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- rgb_i_address1 assign process. --
    rgb_i_address1_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp1_stg5_fsm_23, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp1_stg7_fsm_25, ap_sig_cseq_ST_pp1_stg1_fsm_19, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_sig_cseq_ST_pp1_stg6_fsm_24, ap_sig_cseq_ST_pp1_stg8_fsm_26, ap_sig_cseq_ST_pp1_stg9_fsm_27, ap_sig_cseq_ST_pp1_stg10_fsm_28, ap_sig_cseq_ST_pp1_stg3_fsm_21, ap_sig_cseq_ST_pp1_stg2_fsm_20, ap_sig_cseq_ST_pp1_stg4_fsm_22, ap_sig_cseq_ST_pp1_stg11_fsm_29, tmp_8_i_fu_793_p1, tmp_15_i_fu_1181_p1, tmp_18_1_i_fu_1223_p1, tmp_27_1_i_fu_1243_p1, tmp_27_2_i_fu_1288_p1, tmp_27_3_i_fu_1316_p1, tmp_23_3_i_fu_1324_p1, tmp_27_4_i_fu_1347_p1, tmp_27_5_i_fu_1455_p1, tmp_23_5_i_fu_1467_p1, tmp_27_6_i_fu_1490_p1, tmp_27_7_i_fu_1513_p1, tmp_23_7_i_fu_1541_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            rgb_i_address1 <= tmp_8_i_fu_793_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21))) then 
            rgb_i_address1 <= tmp_23_7_i_fu_1541_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_20))) then 
            rgb_i_address1 <= tmp_27_7_i_fu_1513_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19))) then 
            rgb_i_address1 <= tmp_27_6_i_fu_1490_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18))) then 
            rgb_i_address1 <= tmp_23_5_i_fu_1467_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29))) then 
            rgb_i_address1 <= tmp_27_5_i_fu_1455_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_28))) then 
            rgb_i_address1 <= tmp_27_4_i_fu_1347_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_27))) then 
            rgb_i_address1 <= tmp_23_3_i_fu_1324_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26))) then 
            rgb_i_address1 <= tmp_27_3_i_fu_1316_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25))) then 
            rgb_i_address1 <= tmp_27_2_i_fu_1288_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_24))) then 
            rgb_i_address1 <= tmp_27_1_i_fu_1243_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            rgb_i_address1 <= tmp_18_1_i_fu_1223_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22))) then 
            rgb_i_address1 <= tmp_15_i_fu_1181_p1(11 - 1 downto 0);
        else 
            rgb_i_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- rgb_i_ce0 assign process. --
    rgb_i_ce0_assign_proc : process(ap_sig_cseq_ST_pp1_stg5_fsm_23, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp1_stg7_fsm_25, ap_sig_cseq_ST_pp1_stg1_fsm_19, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_sig_cseq_ST_pp1_stg6_fsm_24, ap_sig_cseq_ST_pp1_stg8_fsm_26, ap_sig_cseq_ST_pp1_stg9_fsm_27, ap_sig_cseq_ST_pp1_stg10_fsm_28, ap_sig_cseq_ST_pp1_stg3_fsm_21, ap_sig_cseq_ST_pp1_stg2_fsm_20, ap_sig_cseq_ST_pp1_stg4_fsm_22, ap_sig_cseq_ST_pp1_stg11_fsm_29)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22)))) then 
            rgb_i_ce0 <= ap_const_logic_1;
        else 
            rgb_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- rgb_i_ce1 assign process. --
    rgb_i_ce1_assign_proc : process(ap_sig_bdd_149, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp1_stg5_fsm_23, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp1_stg7_fsm_25, ap_sig_cseq_ST_pp1_stg1_fsm_19, ap_sig_cseq_ST_pp1_stg0_fsm_18, ap_sig_cseq_ST_pp1_stg6_fsm_24, ap_sig_cseq_ST_pp1_stg8_fsm_26, ap_sig_cseq_ST_pp1_stg9_fsm_27, ap_sig_cseq_ST_pp1_stg10_fsm_28, ap_sig_cseq_ST_pp1_stg3_fsm_21, ap_sig_cseq_ST_pp1_stg2_fsm_20, ap_sig_cseq_ST_pp1_stg4_fsm_22, ap_sig_cseq_ST_pp1_stg11_fsm_29)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_23) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            rgb_i_ce1 <= ap_const_logic_1;
        else 
            rgb_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    rgb_i_d1 <= frame_in_addr_read_reg_1685;

    -- rgb_i_we1 assign process. --
    rgb_i_we1_assign_proc : process(ap_sig_bdd_149, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond5_i_reg_1676_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_149 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_i_reg_1676_pp0_it1)))) then 
            rgb_i_we1 <= ap_const_logic_1;
        else 
            rgb_i_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_i_fu_1102_p2 <= "1" when (unsigned(j_cast_cast_i_reg_1832) > unsigned(p_read1)) else "0";
    tmp_12_1_i_fu_1009_p2 <= "1" when (unsigned(j_1_cast_cast_i_fu_1005_p1) < unsigned(p_read3)) else "0";
    tmp_12_2_i_fu_1023_p2 <= "1" when (unsigned(j_1_1_cast_cast_i_fu_1019_p1) < unsigned(p_read3)) else "0";
    tmp_12_3_i_fu_1037_p2 <= "1" when (unsigned(j_1_2_cast_cast_i_fu_1033_p1) < unsigned(p_read3)) else "0";
    tmp_12_4_i_fu_1051_p2 <= "1" when (unsigned(j_1_3_cast_cast_i_fu_1047_p1) < unsigned(p_read3)) else "0";
    tmp_12_5_i_fu_1065_p2 <= "1" when (unsigned(j_1_4_cast_cast_i_fu_1061_p1) < unsigned(p_read3)) else "0";
    tmp_12_6_i_fu_1079_p2 <= "1" when (unsigned(j_1_5_cast_cast_i_fu_1075_p1) < unsigned(p_read3)) else "0";
    tmp_12_7_i_fu_1093_p2 <= "1" when (unsigned(j_1_6_cast_cast_i_fu_1089_p1) < unsigned(p_read3)) else "0";
    tmp_12_i_fu_1171_p1 <= std_logic_vector(resize(unsigned(tmp_17_i_fu_1166_p2),64));
    tmp_13_7_cast_i_fu_714_p1 <= std_logic_vector(resize(unsigned(p_read2),17));
        tmp_13_i_fu_867_p1 <= std_logic_vector(resize(signed(tmp_6_reg_1711),17));

    tmp_14_7_i_fu_987_p2 <= "1" when (signed(tmp_13_7_cast_i_reg_1652) < signed(tmp_cast_i_45_fu_979_p1)) else "0";
        tmp_14_i_fu_870_p1 <= std_logic_vector(resize(signed(tmp_7_reg_1706),17));

    tmp_15_i_fu_1181_p1 <= std_logic_vector(resize(unsigned(tmp_22_i_fu_1176_p2),64));
    tmp_16_1_i_fu_1110_p2 <= "1" when (unsigned(j_1_cast_cast_i_reg_1842) > unsigned(p_read1)) else "0";
    tmp_16_2_i_fu_1118_p2 <= "1" when (unsigned(j_1_1_cast_cast_i_reg_1852) > unsigned(p_read1)) else "0";
    tmp_16_3_i_fu_1126_p2 <= "1" when (unsigned(j_1_2_cast_cast_i_reg_1862) > unsigned(p_read1)) else "0";
    tmp_16_4_i_fu_1134_p2 <= "1" when (unsigned(j_1_3_cast_cast_i_reg_1872) > unsigned(p_read1)) else "0";
    tmp_16_5_i_fu_1142_p2 <= "1" when (unsigned(j_1_4_cast_cast_i_reg_1882) > unsigned(p_read1)) else "0";
    tmp_16_6_i_fu_1150_p2 <= "1" when (unsigned(j_1_5_cast_cast_i_reg_1892) > unsigned(p_read1)) else "0";
    tmp_16_7_i_fu_1158_p2 <= "1" when (unsigned(j_1_6_cast_cast_i_reg_1902) > unsigned(p_read1)) else "0";
    tmp_17_1_i_fu_1218_p2 <= (iterator_mid2_i_reg_1740 or ap_const_lv11_5);
    tmp_17_2_i_fu_1273_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1740) + unsigned(ap_const_lv11_8));
    tmp_17_3_i_fu_1306_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1740) + unsigned(ap_const_lv11_B));
    tmp_17_4_i_fu_1333_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1740) + unsigned(ap_const_lv11_E));
    tmp_17_5_i_fu_1445_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it1) + unsigned(ap_const_lv11_11));
    tmp_17_6_i_fu_1476_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it1) + unsigned(ap_const_lv11_14));
    tmp_17_7_i_fu_1503_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it2) + unsigned(ap_const_lv11_17));
    tmp_17_i_fu_1166_p2 <= (iterator_mid2_i_reg_1740 or ap_const_lv11_2);
    tmp_18_1_i_fu_1223_p1 <= std_logic_vector(resize(unsigned(tmp_17_1_i_fu_1218_p2),64));
    tmp_18_2_i_fu_1302_p1 <= std_logic_vector(resize(unsigned(tmp_17_2_i_reg_2051),64));
    tmp_18_3_i_fu_1320_p1 <= std_logic_vector(resize(unsigned(tmp_17_3_i_reg_2087),64));
    tmp_18_4_i_fu_1338_p1 <= std_logic_vector(resize(unsigned(tmp_17_4_i_reg_2122),64));
    tmp_18_5_i_fu_1463_p1 <= std_logic_vector(resize(unsigned(tmp_17_5_i_reg_2215),64));
    tmp_18_6_i_fu_1481_p1 <= std_logic_vector(resize(unsigned(tmp_17_6_i_reg_2251),64));
    tmp_18_7_i_fu_1537_p1 <= std_logic_vector(resize(unsigned(tmp_17_7_i_reg_2291),64));
    tmp_19_i_fu_1248_p4 <= ((reg_636 & reg_640) & ap_const_lv3_0);
    tmp_1_fu_762_p1 <= std_logic_vector(resize(unsigned(tmp_fu_759_p1),34));
    tmp_1_i_fu_694_p1 <= std_logic_vector(resize(unsigned(invdar_i_reg_526),64));
    tmp_20_i_fu_1214_p1 <= std_logic_vector(resize(unsigned(iterator_mid2_i_reg_1740),64));
    tmp_22_1_i_fu_1233_p2 <= (iterator_mid2_i_reg_1740 or ap_const_lv11_4);
    tmp_22_2_i_fu_1278_p2 <= (iterator_mid2_i_reg_1740 or ap_const_lv11_7);
    tmp_22_3_i_fu_1311_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1740) + unsigned(ap_const_lv11_A));
    tmp_22_4_i_fu_1342_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1740) + unsigned(ap_const_lv11_D));
    tmp_22_5_i_fu_1450_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it1) + unsigned(ap_const_lv11_10));
    tmp_22_6_i_fu_1485_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it2) + unsigned(ap_const_lv11_13));
    tmp_22_7_i_fu_1508_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it2) + unsigned(ap_const_lv11_16));
    tmp_22_i_49_fu_1262_p2 <= (tmp_19_i_fu_1248_p4 or tmp_29_cast_i_fu_1258_p1);
    tmp_22_i_fu_1176_p2 <= (iterator_mid2_i_reg_1740 or ap_const_lv11_1);
    tmp_23_1_i_fu_1238_p1 <= std_logic_vector(resize(unsigned(tmp_22_1_i_fu_1233_p2),64));
    tmp_23_2_i_fu_1283_p1 <= std_logic_vector(resize(unsigned(tmp_22_2_i_fu_1278_p2),64));
    tmp_23_3_i_fu_1324_p1 <= std_logic_vector(resize(unsigned(tmp_22_3_i_reg_2092),64));
    tmp_23_4_i_fu_1371_p1 <= std_logic_vector(resize(unsigned(tmp_22_4_i_reg_2142),64));
    tmp_23_5_i_fu_1467_p1 <= std_logic_vector(resize(unsigned(tmp_22_5_i_reg_2220),64));
    tmp_23_6_i_fu_1499_p1 <= std_logic_vector(resize(unsigned(tmp_22_6_i_reg_2261),64));
    tmp_23_7_i_fu_1541_p1 <= std_logic_vector(resize(unsigned(tmp_22_7_i_reg_2296),64));
    tmp_23_i_fu_1298_p1 <= std_logic_vector(resize(unsigned(tmp_22_i_49_reg_2046),64));
    tmp_27_1_i_fu_1243_p1 <= std_logic_vector(resize(unsigned(tmp_34_i_fu_1228_p2),64));
    tmp_27_2_i_fu_1288_p1 <= std_logic_vector(resize(unsigned(tmp_34_1_i_fu_1268_p2),64));
    tmp_27_3_i_fu_1316_p1 <= std_logic_vector(resize(unsigned(tmp_34_2_i_reg_2066),64));
    tmp_27_4_i_fu_1347_p1 <= std_logic_vector(resize(unsigned(tmp_34_3_i_reg_2117),64));
    tmp_27_5_i_fu_1455_p1 <= std_logic_vector(resize(unsigned(tmp_34_4_i_reg_2205),64));
    tmp_27_6_i_fu_1490_p1 <= std_logic_vector(resize(unsigned(tmp_34_5_i_reg_2246),64));
    tmp_27_7_i_fu_1513_p1 <= std_logic_vector(resize(unsigned(tmp_34_6_i_reg_2271),64));
    tmp_29_1_cast_i_fu_1361_p1 <= std_logic_vector(resize(unsigned(reg_640),9));
    tmp_29_2_cast_i_fu_1389_p1 <= std_logic_vector(resize(unsigned(tmp_29_2_i_reg_2082),9));
    tmp_29_3_cast_i_fu_1410_p1 <= std_logic_vector(resize(unsigned(tmp_29_3_i_reg_2112),9));
    tmp_29_4_cast_i_fu_1436_p1 <= std_logic_vector(resize(unsigned(tmp_29_4_i_reg_2167),9));
    tmp_29_5_cast_i_fu_1527_p1 <= std_logic_vector(resize(unsigned(reg_640),9));
    tmp_29_6_cast_i_fu_1558_p1 <= std_logic_vector(resize(unsigned(tmp_29_6_i_reg_2286),9));
    tmp_29_7_cast_i_fu_1579_p1 <= std_logic_vector(resize(unsigned(tmp_29_7_i_reg_2321),9));
    tmp_29_cast_i_fu_1258_p1 <= std_logic_vector(resize(unsigned(reg_644),9));
    tmp_2_fu_766_p2 <= std_logic_vector(signed(tmp_cast_i_reg_1634) + signed(tmp_1_fu_762_p1));
    tmp_2_i_fu_705_p2 <= "1" when (invdar_i_reg_526 = ap_const_lv9_1FF) else "0";
    tmp_30_1_i_fu_1351_p4 <= ((reg_648 & reg_636) & ap_const_lv3_0);
    tmp_30_2_i_fu_1379_p4 <= ((reg_657 & reg_644) & ap_const_lv3_0);
    tmp_30_3_i_fu_1402_p4 <= ((tmp_39_i_reg_2127 & tmp_40_i_reg_2132) & ap_const_lv3_0);
    tmp_30_4_i_fu_1428_p4 <= ((tmp_41_i_reg_2157 & tmp_42_i_reg_2178) & ap_const_lv3_0);
    tmp_30_5_i_fu_1517_p4 <= ((reg_636 & reg_648) & ap_const_lv3_0);
    tmp_30_6_i_fu_1549_p4 <= ((tmp_45_i_reg_2276 & reg_657) & ap_const_lv3_0);
    tmp_30_7_i_fu_1571_p4 <= ((tmp_47_i_reg_2332 & tmp_48_i_reg_2337) & ap_const_lv3_0);
    tmp_31_1_i_fu_1365_p2 <= (tmp_30_1_i_fu_1351_p4 or tmp_29_1_cast_i_fu_1361_p1);
    tmp_31_2_i_fu_1392_p2 <= (tmp_30_2_i_fu_1379_p4 or tmp_29_2_cast_i_fu_1389_p1);
    tmp_31_3_i_fu_1413_p2 <= (tmp_30_3_i_fu_1402_p4 or tmp_29_3_cast_i_fu_1410_p1);
    tmp_31_4_i_fu_1439_p2 <= (tmp_30_4_i_fu_1428_p4 or tmp_29_4_cast_i_fu_1436_p1);
    tmp_31_5_i_fu_1531_p2 <= (tmp_30_5_i_fu_1517_p4 or tmp_29_5_cast_i_fu_1527_p1);
    tmp_31_6_i_fu_1561_p2 <= (tmp_30_6_i_fu_1549_p4 or tmp_29_6_cast_i_fu_1558_p1);
    tmp_31_7_i_fu_1582_p2 <= (tmp_30_7_i_fu_1571_p4 or tmp_29_7_cast_i_fu_1579_p1);
    tmp_32_1_i_fu_1375_p1 <= std_logic_vector(resize(unsigned(tmp_31_1_i_reg_2152),64));
    tmp_32_2_i_fu_1398_p1 <= std_logic_vector(resize(unsigned(tmp_31_2_i_reg_2183),64));
    tmp_32_3_i_fu_1419_p1 <= std_logic_vector(resize(unsigned(tmp_31_3_i_reg_2194),64));
    tmp_32_4_i_fu_1459_p1 <= std_logic_vector(resize(unsigned(tmp_31_4_i_reg_2210),64));
    tmp_32_5_i_fu_1545_p1 <= std_logic_vector(resize(unsigned(tmp_31_5_i_reg_2306),64));
    tmp_32_6_i_fu_1567_p1 <= std_logic_vector(resize(unsigned(tmp_31_6_i_reg_2342),64));
    tmp_32_7_i_fu_1588_p1 <= std_logic_vector(resize(unsigned(tmp_31_7_i_reg_2353),64));
    tmp_32_i_fu_893_p3 <= 
        neg_ti_i_fu_888_p2 when (tmp_5_reg_1695(0) = '1') else 
        tmp_9_reg_1721;
    tmp_34_1_i_fu_1268_p2 <= (iterator_mid2_i_reg_1740 or ap_const_lv11_6);
    tmp_34_2_i_fu_1293_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1740) + unsigned(ap_const_lv11_9));
    tmp_34_3_i_fu_1328_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1740) + unsigned(ap_const_lv11_C));
    tmp_34_4_i_fu_1423_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it1) + unsigned(ap_const_lv11_F));
    tmp_34_5_i_fu_1471_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it1) + unsigned(ap_const_lv11_12));
    tmp_34_6_i_fu_1494_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_iterator_mid2_i_reg_1740_pp1_it2) + unsigned(ap_const_lv11_15));
    tmp_34_7_i_fu_969_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1740) + unsigned(ap_const_lv11_18));
    tmp_34_i_fu_1228_p2 <= (iterator_mid2_i_reg_1740 or ap_const_lv11_3);
        tmp_3_fu_771_p1 <= std_logic_vector(resize(signed(tmp_2_fu_766_p2),64));

    tmp_3_i_fu_753_p2 <= std_logic_vector(unsigned(p_shl_cast_i_fu_737_p1) - unsigned(p_shl1_cast_i_fu_749_p1));
    tmp_4_fu_840_p1 <= grp_fu_1592_p2(33 - 1 downto 0);
    tmp_4_i_fu_982_p2 <= "1" when (signed(tmp_91_cast_i_reg_1647) > signed(tmp_cast_i_45_fu_979_p1)) else "0";
    tmp_5_i_fu_822_p2 <= std_logic_vector(unsigned(p_shl2_cast_i_fu_806_p1) - unsigned(p_shl3_cast_i_fu_818_p1));
    tmp_6_i_fu_995_p2 <= "1" when (unsigned(j_cast_cast_i_fu_992_p1) < unsigned(p_read3)) else "0";
    tmp_8_fu_880_p1 <= p_v_i_fu_873_p3(9 - 1 downto 0);
    tmp_8_i_fu_793_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar2_i_reg_549_pp0_it1),64));
    tmp_91_cast_i_fu_711_p1 <= std_logic_vector(resize(unsigned(p_read),17));
    tmp_9_fu_884_p1 <= p_v_i_fu_873_p3(9 - 1 downto 0);
        tmp_cast_i_45_fu_979_p1 <= std_logic_vector(resize(signed(tmp_i_reg_1793),17));

        tmp_cast_i_fu_690_p1 <= std_logic_vector(resize(signed(frame_in1_dout),34));

        tmp_fu_759_p1 <= std_logic_vector(resize(signed(tmp_3_i_reg_1665),32));

    tmp_i_fu_964_p2 <= std_logic_vector(unsigned(tmp_32_i_reg_1726) + unsigned(i_cast_i_fu_961_p1));
end behav;
