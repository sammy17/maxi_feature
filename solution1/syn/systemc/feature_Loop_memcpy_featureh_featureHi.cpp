// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "feature_Loop_memcpy_featureh_featureHi.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic feature_Loop_memcpy_featureh_featureHi::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic feature_Loop_memcpy_featureh_featureHi::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> feature_Loop_memcpy_featureh_featureHi::ap_ST_st1_fsm_0 = "1";
const sc_lv<8> feature_Loop_memcpy_featureh_featureHi::ap_ST_st2_fsm_1 = "10";
const sc_lv<8> feature_Loop_memcpy_featureh_featureHi::ap_ST_pp0_stg0_fsm_2 = "100";
const sc_lv<8> feature_Loop_memcpy_featureh_featureHi::ap_ST_st6_fsm_3 = "1000";
const sc_lv<8> feature_Loop_memcpy_featureh_featureHi::ap_ST_st7_fsm_4 = "10000";
const sc_lv<8> feature_Loop_memcpy_featureh_featureHi::ap_ST_st8_fsm_5 = "100000";
const sc_lv<8> feature_Loop_memcpy_featureh_featureHi::ap_ST_st9_fsm_6 = "1000000";
const sc_lv<8> feature_Loop_memcpy_featureh_featureHi::ap_ST_st10_fsm_7 = "10000000";
const sc_lv<32> feature_Loop_memcpy_featureh_featureHi::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> feature_Loop_memcpy_featureh_featureHi::ap_const_lv1_1 = "1";
const sc_lv<1> feature_Loop_memcpy_featureh_featureHi::ap_const_lv1_0 = "0";
const sc_lv<3> feature_Loop_memcpy_featureh_featureHi::ap_const_lv3_0 = "000";
const sc_lv<2> feature_Loop_memcpy_featureh_featureHi::ap_const_lv2_0 = "00";
const sc_lv<4> feature_Loop_memcpy_featureh_featureHi::ap_const_lv4_0 = "0000";
const sc_lv<32> feature_Loop_memcpy_featureh_featureHi::ap_const_lv32_2 = "10";
const sc_lv<32> feature_Loop_memcpy_featureh_featureHi::ap_const_lv32_1 = "1";
const sc_lv<10> feature_Loop_memcpy_featureh_featureHi::ap_const_lv10_0 = "0000000000";
const sc_lv<32> feature_Loop_memcpy_featureh_featureHi::ap_const_lv32_200 = "1000000000";
const sc_lv<2> feature_Loop_memcpy_featureh_featureHi::ap_const_lv2_3 = "11";
const sc_lv<32> feature_Loop_memcpy_featureh_featureHi::ap_const_lv32_7 = "111";
const sc_lv<32> feature_Loop_memcpy_featureh_featureHi::ap_const_lv32_1F = "11111";
const sc_lv<10> feature_Loop_memcpy_featureh_featureHi::ap_const_lv10_200 = "1000000000";
const sc_lv<10> feature_Loop_memcpy_featureh_featureHi::ap_const_lv10_1 = "1";

feature_Loop_memcpy_featureh_featureHi::feature_Loop_memcpy_featureh_featureHi(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( m_axi_featureh_BVALID );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_7 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( m_axi_featureh_BVALID );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_7 );

    SC_METHOD(thread_ap_sig_bdd_108);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( featureh1_empty_n );

    SC_METHOD(thread_ap_sig_bdd_118);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_151);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_176);
    sensitive << ( ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_ap_sig_bdd_188);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_2);
    sensitive << ( ap_sig_bdd_118 );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_7);
    sensitive << ( ap_sig_bdd_188 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_27 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_151 );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_featureh_AWREADY);
    sensitive << ( m_axi_featureh_AWREADY );
    sensitive << ( ap_reg_ioackin_m_axi_featureh_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_featureh_WREADY);
    sensitive << ( m_axi_featureh_WREADY );
    sensitive << ( ap_reg_ioackin_m_axi_featureh_WREADY );

    SC_METHOD(thread_exitcond4_i_fu_126_p2);
    sensitive << ( indvar1_i_reg_95 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1 );
    sensitive << ( ap_sig_ioackin_m_axi_featureh_WREADY );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_featureHist_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_4_i_fu_138_p1 );

    SC_METHOD(thread_featureHist_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1 );
    sensitive << ( ap_sig_ioackin_m_axi_featureh_WREADY );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_featureh1_read);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_bdd_108 );

    SC_METHOD(thread_indvar_next1_i_fu_132_p2);
    sensitive << ( indvar1_i_reg_95 );

    SC_METHOD(thread_m_axi_featureh_ARADDR);

    SC_METHOD(thread_m_axi_featureh_ARBURST);

    SC_METHOD(thread_m_axi_featureh_ARCACHE);

    SC_METHOD(thread_m_axi_featureh_ARID);

    SC_METHOD(thread_m_axi_featureh_ARLEN);

    SC_METHOD(thread_m_axi_featureh_ARLOCK);

    SC_METHOD(thread_m_axi_featureh_ARPROT);

    SC_METHOD(thread_m_axi_featureh_ARQOS);

    SC_METHOD(thread_m_axi_featureh_ARREGION);

    SC_METHOD(thread_m_axi_featureh_ARSIZE);

    SC_METHOD(thread_m_axi_featureh_ARUSER);

    SC_METHOD(thread_m_axi_featureh_ARVALID);

    SC_METHOD(thread_m_axi_featureh_AWADDR);
    sensitive << ( featureh_addr_reg_143 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_reg_ioackin_m_axi_featureh_AWREADY );

    SC_METHOD(thread_m_axi_featureh_AWBURST);

    SC_METHOD(thread_m_axi_featureh_AWCACHE);

    SC_METHOD(thread_m_axi_featureh_AWID);

    SC_METHOD(thread_m_axi_featureh_AWLEN);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_reg_ioackin_m_axi_featureh_AWREADY );

    SC_METHOD(thread_m_axi_featureh_AWLOCK);

    SC_METHOD(thread_m_axi_featureh_AWPROT);

    SC_METHOD(thread_m_axi_featureh_AWQOS);

    SC_METHOD(thread_m_axi_featureh_AWREGION);

    SC_METHOD(thread_m_axi_featureh_AWSIZE);

    SC_METHOD(thread_m_axi_featureh_AWUSER);

    SC_METHOD(thread_m_axi_featureh_AWVALID);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_reg_ioackin_m_axi_featureh_AWREADY );

    SC_METHOD(thread_m_axi_featureh_BREADY);
    sensitive << ( m_axi_featureh_BVALID );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_7 );

    SC_METHOD(thread_m_axi_featureh_RREADY);

    SC_METHOD(thread_m_axi_featureh_WDATA);
    sensitive << ( ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( featureHist_load_reg_162 );
    sensitive << ( ap_reg_ioackin_m_axi_featureh_WREADY );

    SC_METHOD(thread_m_axi_featureh_WID);

    SC_METHOD(thread_m_axi_featureh_WLAST);

    SC_METHOD(thread_m_axi_featureh_WSTRB);
    sensitive << ( ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ioackin_m_axi_featureh_WREADY );

    SC_METHOD(thread_m_axi_featureh_WUSER);

    SC_METHOD(thread_m_axi_featureh_WVALID);
    sensitive << ( ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ioackin_m_axi_featureh_WREADY );

    SC_METHOD(thread_tmp_10_fu_116_p1);
    sensitive << ( tmp_fu_106_p4 );

    SC_METHOD(thread_tmp_4_i_fu_138_p1);
    sensitive << ( indvar1_i_reg_95 );

    SC_METHOD(thread_tmp_fu_106_p4);
    sensitive << ( featureh1_dout );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( m_axi_featureh_BVALID );
    sensitive << ( ap_sig_bdd_108 );
    sensitive << ( exitcond4_i_fu_126_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1 );
    sensitive << ( ap_sig_ioackin_m_axi_featureh_WREADY );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_ioackin_m_axi_featureh_AWREADY );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_featureh_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_featureh_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "feature_Loop_memcpy_featureh_featureHi_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_featureh_AWVALID, "(port)m_axi_featureh_AWVALID");
    sc_trace(mVcdFile, m_axi_featureh_AWREADY, "(port)m_axi_featureh_AWREADY");
    sc_trace(mVcdFile, m_axi_featureh_AWADDR, "(port)m_axi_featureh_AWADDR");
    sc_trace(mVcdFile, m_axi_featureh_AWID, "(port)m_axi_featureh_AWID");
    sc_trace(mVcdFile, m_axi_featureh_AWLEN, "(port)m_axi_featureh_AWLEN");
    sc_trace(mVcdFile, m_axi_featureh_AWSIZE, "(port)m_axi_featureh_AWSIZE");
    sc_trace(mVcdFile, m_axi_featureh_AWBURST, "(port)m_axi_featureh_AWBURST");
    sc_trace(mVcdFile, m_axi_featureh_AWLOCK, "(port)m_axi_featureh_AWLOCK");
    sc_trace(mVcdFile, m_axi_featureh_AWCACHE, "(port)m_axi_featureh_AWCACHE");
    sc_trace(mVcdFile, m_axi_featureh_AWPROT, "(port)m_axi_featureh_AWPROT");
    sc_trace(mVcdFile, m_axi_featureh_AWQOS, "(port)m_axi_featureh_AWQOS");
    sc_trace(mVcdFile, m_axi_featureh_AWREGION, "(port)m_axi_featureh_AWREGION");
    sc_trace(mVcdFile, m_axi_featureh_AWUSER, "(port)m_axi_featureh_AWUSER");
    sc_trace(mVcdFile, m_axi_featureh_WVALID, "(port)m_axi_featureh_WVALID");
    sc_trace(mVcdFile, m_axi_featureh_WREADY, "(port)m_axi_featureh_WREADY");
    sc_trace(mVcdFile, m_axi_featureh_WDATA, "(port)m_axi_featureh_WDATA");
    sc_trace(mVcdFile, m_axi_featureh_WSTRB, "(port)m_axi_featureh_WSTRB");
    sc_trace(mVcdFile, m_axi_featureh_WLAST, "(port)m_axi_featureh_WLAST");
    sc_trace(mVcdFile, m_axi_featureh_WID, "(port)m_axi_featureh_WID");
    sc_trace(mVcdFile, m_axi_featureh_WUSER, "(port)m_axi_featureh_WUSER");
    sc_trace(mVcdFile, m_axi_featureh_ARVALID, "(port)m_axi_featureh_ARVALID");
    sc_trace(mVcdFile, m_axi_featureh_ARREADY, "(port)m_axi_featureh_ARREADY");
    sc_trace(mVcdFile, m_axi_featureh_ARADDR, "(port)m_axi_featureh_ARADDR");
    sc_trace(mVcdFile, m_axi_featureh_ARID, "(port)m_axi_featureh_ARID");
    sc_trace(mVcdFile, m_axi_featureh_ARLEN, "(port)m_axi_featureh_ARLEN");
    sc_trace(mVcdFile, m_axi_featureh_ARSIZE, "(port)m_axi_featureh_ARSIZE");
    sc_trace(mVcdFile, m_axi_featureh_ARBURST, "(port)m_axi_featureh_ARBURST");
    sc_trace(mVcdFile, m_axi_featureh_ARLOCK, "(port)m_axi_featureh_ARLOCK");
    sc_trace(mVcdFile, m_axi_featureh_ARCACHE, "(port)m_axi_featureh_ARCACHE");
    sc_trace(mVcdFile, m_axi_featureh_ARPROT, "(port)m_axi_featureh_ARPROT");
    sc_trace(mVcdFile, m_axi_featureh_ARQOS, "(port)m_axi_featureh_ARQOS");
    sc_trace(mVcdFile, m_axi_featureh_ARREGION, "(port)m_axi_featureh_ARREGION");
    sc_trace(mVcdFile, m_axi_featureh_ARUSER, "(port)m_axi_featureh_ARUSER");
    sc_trace(mVcdFile, m_axi_featureh_RVALID, "(port)m_axi_featureh_RVALID");
    sc_trace(mVcdFile, m_axi_featureh_RREADY, "(port)m_axi_featureh_RREADY");
    sc_trace(mVcdFile, m_axi_featureh_RDATA, "(port)m_axi_featureh_RDATA");
    sc_trace(mVcdFile, m_axi_featureh_RLAST, "(port)m_axi_featureh_RLAST");
    sc_trace(mVcdFile, m_axi_featureh_RID, "(port)m_axi_featureh_RID");
    sc_trace(mVcdFile, m_axi_featureh_RUSER, "(port)m_axi_featureh_RUSER");
    sc_trace(mVcdFile, m_axi_featureh_RRESP, "(port)m_axi_featureh_RRESP");
    sc_trace(mVcdFile, m_axi_featureh_BVALID, "(port)m_axi_featureh_BVALID");
    sc_trace(mVcdFile, m_axi_featureh_BREADY, "(port)m_axi_featureh_BREADY");
    sc_trace(mVcdFile, m_axi_featureh_BRESP, "(port)m_axi_featureh_BRESP");
    sc_trace(mVcdFile, m_axi_featureh_BID, "(port)m_axi_featureh_BID");
    sc_trace(mVcdFile, m_axi_featureh_BUSER, "(port)m_axi_featureh_BUSER");
    sc_trace(mVcdFile, featureh1_dout, "(port)featureh1_dout");
    sc_trace(mVcdFile, featureh1_empty_n, "(port)featureh1_empty_n");
    sc_trace(mVcdFile, featureh1_read, "(port)featureh1_read");
    sc_trace(mVcdFile, featureHist_address0, "(port)featureHist_address0");
    sc_trace(mVcdFile, featureHist_ce0, "(port)featureHist_ce0");
    sc_trace(mVcdFile, featureHist_q0, "(port)featureHist_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_27, "ap_sig_bdd_27");
    sc_trace(mVcdFile, indvar1_i_reg_95, "indvar1_i_reg_95");
    sc_trace(mVcdFile, featureh_addr_reg_143, "featureh_addr_reg_143");
    sc_trace(mVcdFile, ap_sig_bdd_108, "ap_sig_bdd_108");
    sc_trace(mVcdFile, exitcond4_i_fu_126_p2, "exitcond4_i_fu_126_p2");
    sc_trace(mVcdFile, exitcond4_i_reg_148, "exitcond4_i_reg_148");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_2, "ap_sig_cseq_ST_pp0_stg0_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_118, "ap_sig_bdd_118");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1, "ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_featureh_WREADY, "ap_sig_ioackin_m_axi_featureh_WREADY");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, indvar_next1_i_fu_132_p2, "indvar_next1_i_fu_132_p2");
    sc_trace(mVcdFile, featureHist_load_reg_162, "featureHist_load_reg_162");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_151, "ap_sig_bdd_151");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_featureh_AWREADY, "ap_sig_ioackin_m_axi_featureh_AWREADY");
    sc_trace(mVcdFile, tmp_4_i_fu_138_p1, "tmp_4_i_fu_138_p1");
    sc_trace(mVcdFile, tmp_10_fu_116_p1, "tmp_10_fu_116_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_featureh_AWREADY, "ap_reg_ioackin_m_axi_featureh_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_featureh_WREADY, "ap_reg_ioackin_m_axi_featureh_WREADY");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_7, "ap_sig_cseq_ST_st10_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_188, "ap_sig_bdd_188");
    sc_trace(mVcdFile, tmp_fu_106_p4, "tmp_fu_106_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_bdd_176, "ap_sig_bdd_176");
#endif

    }
}

feature_Loop_memcpy_featureh_featureHi::~feature_Loop_memcpy_featureh_featureHi() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_7.read()) && 
                    !esl_seteq<1,1,1>(m_axi_featureh_BVALID.read(), ap_const_logic_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_featureh_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
            if (!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_AWREADY.read())) {
                ap_reg_ioackin_m_axi_featureh_AWREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, m_axi_featureh_AWREADY.read())) {
                ap_reg_ioackin_m_axi_featureh_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_featureh_WREADY = ap_const_logic_0;
    } else {
        if (ap_sig_bdd_176.read()) {
            if (!(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_WREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) {
                ap_reg_ioackin_m_axi_featureh_WREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, m_axi_featureh_WREADY.read())) {
                ap_reg_ioackin_m_axi_featureh_WREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_WREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_i_fu_126_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_AWREADY.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_WREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_i_fu_126_p2.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                     !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_AWREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_WREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_i_fu_126_p2.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_WREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_AWREADY.read()))) {
            ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_AWREADY.read()))) {
        indvar1_i_reg_95 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_WREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_i_fu_126_p2.read()))) {
        indvar1_i_reg_95 = indvar_next1_i_fu_132_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_WREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())))) {
        ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1 = exitcond4_i_reg_148.read();
        exitcond4_i_reg_148 = exitcond4_i_fu_126_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_WREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_i_reg_148.read()))) {
        featureHist_load_reg_162 = featureHist_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !ap_sig_bdd_108.read())) {
        featureh_addr_reg_143 =  (sc_lv<32>) (tmp_10_fu_116_p1.read());
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_7.read()) && 
          !esl_seteq<1,1,1>(m_axi_featureh_BVALID.read(), ap_const_logic_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_7.read()) && 
         !esl_seteq<1,1,1>(m_axi_featureh_BVALID.read(), ap_const_logic_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_sig_bdd_108() {
    ap_sig_bdd_108 = (esl_seteq<1,1,1>(featureh1_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_sig_bdd_118() {
    ap_sig_bdd_118 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_sig_bdd_151() {
    ap_sig_bdd_151 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_sig_bdd_176() {
    ap_sig_bdd_176 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()));
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_sig_bdd_188() {
    ap_sig_bdd_188 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_sig_bdd_27() {
    ap_sig_bdd_27 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_sig_cseq_ST_pp0_stg0_fsm_2() {
    if (ap_sig_bdd_118.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_sig_cseq_ST_st10_fsm_7() {
    if (ap_sig_bdd_188.read()) {
        ap_sig_cseq_ST_st10_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_7 = ap_const_logic_0;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_27.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_151.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_sig_ioackin_m_axi_featureh_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_featureh_AWREADY.read())) {
        ap_sig_ioackin_m_axi_featureh_AWREADY = m_axi_featureh_AWREADY.read();
    } else {
        ap_sig_ioackin_m_axi_featureh_AWREADY = ap_const_logic_1;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_sig_ioackin_m_axi_featureh_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_featureh_WREADY.read())) {
        ap_sig_ioackin_m_axi_featureh_WREADY = m_axi_featureh_WREADY.read();
    } else {
        ap_sig_ioackin_m_axi_featureh_WREADY = ap_const_logic_1;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_exitcond4_i_fu_126_p2() {
    exitcond4_i_fu_126_p2 = (!indvar1_i_reg_95.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(indvar1_i_reg_95.read() == ap_const_lv10_200);
}

void feature_Loop_memcpy_featureh_featureHi::thread_featureHist_address0() {
    featureHist_address0 =  (sc_lv<9>) (tmp_4_i_fu_138_p1.read());
}

void feature_Loop_memcpy_featureh_featureHi::thread_featureHist_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_WREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())))) {
        featureHist_ce0 = ap_const_logic_1;
    } else {
        featureHist_ce0 = ap_const_logic_0;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_featureh1_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !ap_sig_bdd_108.read())) {
        featureh1_read = ap_const_logic_1;
    } else {
        featureh1_read = ap_const_logic_0;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_indvar_next1_i_fu_132_p2() {
    indvar_next1_i_fu_132_p2 = (!indvar1_i_reg_95.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(indvar1_i_reg_95.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_ARADDR() {
    m_axi_featureh_ARADDR = ap_const_lv32_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_ARBURST() {
    m_axi_featureh_ARBURST = ap_const_lv2_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_ARCACHE() {
    m_axi_featureh_ARCACHE = ap_const_lv4_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_ARID() {
    m_axi_featureh_ARID = ap_const_lv1_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_ARLEN() {
    m_axi_featureh_ARLEN = ap_const_lv32_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_ARLOCK() {
    m_axi_featureh_ARLOCK = ap_const_lv2_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_ARPROT() {
    m_axi_featureh_ARPROT = ap_const_lv3_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_ARQOS() {
    m_axi_featureh_ARQOS = ap_const_lv4_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_ARREGION() {
    m_axi_featureh_ARREGION = ap_const_lv4_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_ARSIZE() {
    m_axi_featureh_ARSIZE = ap_const_lv3_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_ARUSER() {
    m_axi_featureh_ARUSER = ap_const_lv1_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_ARVALID() {
    m_axi_featureh_ARVALID = ap_const_logic_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_AWADDR() {
    m_axi_featureh_AWADDR = featureh_addr_reg_143.read();
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_AWBURST() {
    m_axi_featureh_AWBURST = ap_const_lv2_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_AWCACHE() {
    m_axi_featureh_AWCACHE = ap_const_lv4_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_AWID() {
    m_axi_featureh_AWID = ap_const_lv1_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_AWLEN() {
    m_axi_featureh_AWLEN = ap_const_lv32_200;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_AWLOCK() {
    m_axi_featureh_AWLOCK = ap_const_lv2_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_AWPROT() {
    m_axi_featureh_AWPROT = ap_const_lv3_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_AWQOS() {
    m_axi_featureh_AWQOS = ap_const_lv4_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_AWREGION() {
    m_axi_featureh_AWREGION = ap_const_lv4_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_AWSIZE() {
    m_axi_featureh_AWSIZE = ap_const_lv3_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_AWUSER() {
    m_axi_featureh_AWUSER = ap_const_lv1_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_featureh_AWREADY.read()))) {
        m_axi_featureh_AWVALID = ap_const_logic_1;
    } else {
        m_axi_featureh_AWVALID = ap_const_logic_0;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_7.read()) && 
         !esl_seteq<1,1,1>(m_axi_featureh_BVALID.read(), ap_const_logic_0))) {
        m_axi_featureh_BREADY = ap_const_logic_1;
    } else {
        m_axi_featureh_BREADY = ap_const_logic_0;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_RREADY() {
    m_axi_featureh_RREADY = ap_const_logic_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_WDATA() {
    m_axi_featureh_WDATA = featureHist_load_reg_162.read();
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_WID() {
    m_axi_featureh_WID = ap_const_lv1_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_WLAST() {
    m_axi_featureh_WLAST = ap_const_logic_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_WSTRB() {
    m_axi_featureh_WSTRB = ap_const_lv2_3;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_WUSER() {
    m_axi_featureh_WUSER = ap_const_lv1_0;
}

void feature_Loop_memcpy_featureh_featureHi::thread_m_axi_featureh_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_featureh_WREADY.read()))) {
        m_axi_featureh_WVALID = ap_const_logic_1;
    } else {
        m_axi_featureh_WVALID = ap_const_logic_0;
    }
}

void feature_Loop_memcpy_featureh_featureHi::thread_tmp_10_fu_116_p1() {
    tmp_10_fu_116_p1 = esl_zext<64,31>(tmp_fu_106_p4.read());
}

void feature_Loop_memcpy_featureh_featureHi::thread_tmp_4_i_fu_138_p1() {
    tmp_4_i_fu_138_p1 = esl_zext<64,10>(indvar1_i_reg_95.read());
}

void feature_Loop_memcpy_featureh_featureHi::thread_tmp_fu_106_p4() {
    tmp_fu_106_p4 = featureh1_dout.read().range(31, 1);
}

void feature_Loop_memcpy_featureh_featureHi::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_bdd_108.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_AWREADY.read())) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_WREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_WREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_i_fu_126_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
  !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_WREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  !(esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond4_i_reg_148_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_featureh_WREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_i_fu_126_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_st6_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st7_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st8_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st9_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st10_fsm_7;
            break;
        case 128 : 
            if (!esl_seteq<1,1,1>(m_axi_featureh_BVALID.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st10_fsm_7;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

