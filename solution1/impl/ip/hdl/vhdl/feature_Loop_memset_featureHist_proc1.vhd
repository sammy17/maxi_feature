-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity feature_Loop_memset_featureHist_proc1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    featureHist_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    featureHist_ce0 : OUT STD_LOGIC;
    featureHist_we0 : OUT STD_LOGIC;
    featureHist_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    featureHist_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    featureHist_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    featureHist_ce1 : OUT STD_LOGIC;
    featureHist_we1 : OUT STD_LOGIC;
    featureHist_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    featureHist_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_frame_in_AWVALID : OUT STD_LOGIC;
    m_axi_frame_in_AWREADY : IN STD_LOGIC;
    m_axi_frame_in_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_in_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_in_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_in_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_in_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_in_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_in_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_in_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_in_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_in_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_WVALID : OUT STD_LOGIC;
    m_axi_frame_in_WREADY : IN STD_LOGIC;
    m_axi_frame_in_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_frame_in_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_WLAST : OUT STD_LOGIC;
    m_axi_frame_in_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_ARVALID : OUT STD_LOGIC;
    m_axi_frame_in_ARREADY : IN STD_LOGIC;
    m_axi_frame_in_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_in_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frame_in_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_in_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_in_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_in_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_in_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frame_in_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_in_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frame_in_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_RVALID : IN STD_LOGIC;
    m_axi_frame_in_RREADY : OUT STD_LOGIC;
    m_axi_frame_in_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_frame_in_RLAST : IN STD_LOGIC;
    m_axi_frame_in_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_in_BVALID : IN STD_LOGIC;
    m_axi_frame_in_BREADY : OUT STD_LOGIC;
    m_axi_frame_in_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frame_in_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frame_in_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    frame_in1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    frame_in1_empty_n : IN STD_LOGIC;
    frame_in1_read : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of feature_Loop_memset_featureHist_proc1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_pp0_stg0_fsm_10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_st14_fsm_11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_st15_fsm_12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_pp1_stg0_fsm_13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_pp1_stg1_fsm_14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_pp1_stg2_fsm_15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_pp1_stg3_fsm_16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_pp1_stg4_fsm_17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_pp1_stg5_fsm_18 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_pp1_stg6_fsm_19 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_pp1_stg7_fsm_20 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_pp1_stg8_fsm_21 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_pp1_stg9_fsm_22 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_pp1_stg10_fsm_23 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_pp1_stg11_fsm_24 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_780 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011110000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv11_3C0 : STD_LOGIC_VECTOR (10 downto 0) := "01111000000";
    constant ap_const_lv9_140 : STD_LOGIC_VECTOR (8 downto 0) := "101000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_18 : STD_LOGIC_VECTOR (10 downto 0) := "00000011000";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv11_8 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_const_lv11_7 : STD_LOGIC_VECTOR (10 downto 0) := "00000000111";
    constant ap_const_lv11_6 : STD_LOGIC_VECTOR (10 downto 0) := "00000000110";
    constant ap_const_lv11_B : STD_LOGIC_VECTOR (10 downto 0) := "00000001011";
    constant ap_const_lv11_9 : STD_LOGIC_VECTOR (10 downto 0) := "00000001001";
    constant ap_const_lv11_A : STD_LOGIC_VECTOR (10 downto 0) := "00000001010";
    constant ap_const_lv11_E : STD_LOGIC_VECTOR (10 downto 0) := "00000001110";
    constant ap_const_lv11_D : STD_LOGIC_VECTOR (10 downto 0) := "00000001101";
    constant ap_const_lv11_C : STD_LOGIC_VECTOR (10 downto 0) := "00000001100";
    constant ap_const_lv11_11 : STD_LOGIC_VECTOR (10 downto 0) := "00000010001";
    constant ap_const_lv11_F : STD_LOGIC_VECTOR (10 downto 0) := "00000001111";
    constant ap_const_lv11_10 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_const_lv11_14 : STD_LOGIC_VECTOR (10 downto 0) := "00000010100";
    constant ap_const_lv11_13 : STD_LOGIC_VECTOR (10 downto 0) := "00000010011";
    constant ap_const_lv11_12 : STD_LOGIC_VECTOR (10 downto 0) := "00000010010";
    constant ap_const_lv11_17 : STD_LOGIC_VECTOR (10 downto 0) := "00000010111";
    constant ap_const_lv11_15 : STD_LOGIC_VECTOR (10 downto 0) := "00000010101";
    constant ap_const_lv11_16 : STD_LOGIC_VECTOR (10 downto 0) := "00000010110";
    constant ap_const_lv34_11112 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000010001000100010010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_44 : BOOLEAN;
    signal indvar2_i_reg_549 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_indvar2_i_reg_549_pp0_it1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_10 : STD_LOGIC;
    signal ap_sig_bdd_136 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal exitcond5_i_reg_1722 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_144 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal indvar_flatten_i_reg_561 : STD_LOGIC_VECTOR (6 downto 0);
    signal iterator_i_reg_572 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_i_reg_583 : STD_LOGIC_VECTOR (1 downto 0);
    signal iterator_i_46_reg_594 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_i_reg_605 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_616_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_652 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_pp1_stg2_fsm_15 : STD_LOGIC;
    signal ap_sig_bdd_169 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal exitcond_flatten_i_reg_1757 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_reg_1850 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1854 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg4_fsm_17 : STD_LOGIC;
    signal ap_sig_bdd_190 : BOOLEAN;
    signal or_cond3_i_reg_1868 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_i_reg_1872 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg5_fsm_18 : STD_LOGIC;
    signal ap_sig_bdd_206 : BOOLEAN;
    signal or_cond5_i_reg_1876 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_i_reg_1880 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg7_fsm_20 : STD_LOGIC;
    signal ap_sig_bdd_222 : BOOLEAN;
    signal or_cond7_i_reg_1884 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_i_reg_1888 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg9_fsm_22 : STD_LOGIC;
    signal ap_sig_bdd_238 : BOOLEAN;
    signal or_cond9_i_reg_1892 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond8_i_reg_1896 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_656 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_pp1_stg3_fsm_16 : STD_LOGIC;
    signal ap_sig_bdd_256 : BOOLEAN;
    signal or_cond11_i_reg_1900 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond10_i_reg_1904 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_660 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_pp1_stg6_fsm_19 : STD_LOGIC;
    signal ap_sig_bdd_277 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg10_fsm_23 : STD_LOGIC;
    signal ap_sig_bdd_287 : BOOLEAN;
    signal reg_664 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_pp1_stg8_fsm_21 : STD_LOGIC;
    signal ap_sig_bdd_299 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg11_fsm_24 : STD_LOGIC;
    signal ap_sig_bdd_309 : BOOLEAN;
    signal or_cond13_i_reg_1908 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond12_i_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_668 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_672 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_pp1_stg1_fsm_14 : STD_LOGIC;
    signal ap_sig_bdd_328 : BOOLEAN;
    signal or_cond15_i_reg_1916 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond14_i_reg_1920 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_345 : BOOLEAN;
    signal tmp_cast_i_fu_676_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_cast_i_reg_1685 : STD_LOGIC_VECTOR (33 downto 0);
    signal indvarinc_i_fu_685_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_363 : BOOLEAN;
    signal tmp_91_cast_i_fu_697_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_91_cast_i_reg_1698 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_i_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_7_cast_i_fu_700_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_13_7_cast_i_reg_1703 : STD_LOGIC_VECTOR (16 downto 0);
    signal k_fu_709_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_reg_1711 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_380 : BOOLEAN;
    signal frame_in_addr_reg_1716 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond3_i_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_i_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_i_reg_1722_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next2_i_fu_774_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_next2_i_reg_1726 : STD_LOGIC_VECTOR (10 downto 0);
    signal frame_in_addr_read_reg_1731 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_819_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_4_reg_1736 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_11 : STD_LOGIC;
    signal ap_sig_bdd_404 : BOOLEAN;
    signal tmp_5_reg_1741 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1747 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_32_i_fu_882_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_32_i_reg_1752 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_12 : STD_LOGIC;
    signal ap_sig_bdd_417 : BOOLEAN;
    signal exitcond_flatten_i_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_13 : STD_LOGIC;
    signal ap_sig_bdd_425 : BOOLEAN;
    signal indvar_flatten_next_i_fu_895_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten_next_i_reg_1761 : STD_LOGIC_VECTOR (6 downto 0);
    signal iterator_mid2_i_fu_913_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal iterator_mid2_i_reg_1766 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_mid2_i_fu_921_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_mid2_i_reg_1794 : STD_LOGIC_VECTOR (8 downto 0);
    signal iterator_mid2_i_44_fu_929_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal iterator_mid2_i_44_reg_1806 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_mid2_i_fu_943_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_mid2_i_reg_1811 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_i_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_reg_1816 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_7_i_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_7_i_reg_1828 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_7_i_fu_974_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_7_i_reg_1840 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_1_7_i_fu_980_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_7_i_reg_1845 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_cond1_i_fu_994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_i_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_i_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_i_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_i_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond7_i_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_i_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_i_fu_1130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond8_i_fu_1140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond11_i_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond11_i_reg_1900_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond10_i_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond10_i_reg_1904_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond13_i_fu_1188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond13_i_reg_1908_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond12_i_fu_1198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond12_i_reg_1912_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond15_i_fu_1217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond15_i_reg_1916_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond14_i_fu_1227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond14_i_reg_1920_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal featureHist_addr_1_reg_1934 : STD_LOGIC_VECTOR (8 downto 0);
    signal featureHist_addr_2_reg_1960 : STD_LOGIC_VECTOR (8 downto 0);
    signal featureHist_addr_3_reg_1985 : STD_LOGIC_VECTOR (8 downto 0);
    signal featureHist_addr_4_reg_2010 : STD_LOGIC_VECTOR (8 downto 0);
    signal featureHist_addr_5_reg_2035 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_6_i_reg_2050 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_47_i_reg_2055 : STD_LOGIC_VECTOR (2 downto 0);
    signal featureHist_addr_6_reg_2070 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_7_i_reg_2075 : STD_LOGIC_VECTOR (2 downto 0);
    signal featureHist_addr_7_reg_2080 : STD_LOGIC_VECTOR (8 downto 0);
    signal featureHist_addr_8_reg_2086 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_bdd_615 : BOOLEAN;
    signal rgb_i_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal rgb_i_ce0 : STD_LOGIC;
    signal rgb_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal rgb_i_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal rgb_i_ce1 : STD_LOGIC;
    signal rgb_i_we1 : STD_LOGIC;
    signal rgb_i_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal rgb_i_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal invdar_i_reg_526 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_i_reg_537 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar2_i_phi_fu_553_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_flatten_i_phi_fu_565_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal iterator_i_phi_fu_576_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_i_phi_fu_587_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal iterator_i_46_phi_fu_598_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_i_phi_fu_609_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_i_fu_680_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_i_fu_780_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_i_fu_1014_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_i_fu_1024_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_i_fu_1232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_1_i_fu_1241_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_i_fu_1266_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_1_i_fu_1281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_1_i_fu_1286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_2_i_fu_1296_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_2_i_fu_1306_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_1_i_fu_1331_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_2_i_fu_1341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_3_i_fu_1351_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_3_i_fu_1366_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_3_i_fu_1371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_2_i_fu_1396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_4_i_fu_1406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_4_i_fu_1416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_4_i_fu_1426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_5_i_fu_1436_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_3_i_fu_1461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_5_i_fu_1476_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_5_i_fu_1481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_6_i_fu_1491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_6_i_fu_1501_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_4_i_fu_1526_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_6_i_fu_1536_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_7_i_fu_1546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_7_i_fu_1561_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_7_i_fu_1566_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_5_i_fu_1591_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_6_i_fu_1615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_7_i_fu_1638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_758_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_m_axi_frame_in_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_m_axi_frame_in_ARREADY : STD_LOGIC;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_727 : BOOLEAN;
    signal grp_fu_636_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_644_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl_i_fu_715_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl1_i_fu_727_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl_cast_i_fu_723_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl1_cast_i_fu_735_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_3_i_fu_739_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_fu_745_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_749_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_2_fu_753_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl2_i_fu_785_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl3_i_fu_797_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl2_cast_i_fu_793_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl3_cast_i_fu_805_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_i_fu_809_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_i_fu_1643_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal neg_mul_i_fu_839_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_6_fu_844_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_13_i_fu_854_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_14_i_fu_858_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_v_i_fu_861_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_8_fu_868_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal neg_ti_i_fu_872_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_fu_878_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond1215_i_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal iterator_1_dup_i_fu_901_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_1211_i_fu_937_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_cast_i_fu_951_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_i_fu_955_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_cast_i_45_fu_960_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal j_cast_cast_i_fu_986_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_i_fu_989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_i_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_fu_1009_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_i_fu_1019_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_1_i_fu_1029_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_cast_cast_i_fu_1034_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_1_i_fu_1038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_1_i_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_1_i_fu_1058_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_1_cast_cast_i_fu_1063_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_2_i_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_2_i_fu_1077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_2_i_fu_1087_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_2_cast_cast_i_fu_1092_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_3_i_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_3_i_fu_1106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_3_i_fu_1116_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_3_cast_cast_i_fu_1121_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_4_i_fu_1125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_4_i_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_4_i_fu_1145_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_4_cast_cast_i_fu_1150_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_5_i_fu_1154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_5_i_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_5_i_fu_1174_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_5_cast_cast_i_fu_1179_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_6_i_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_6_i_fu_1193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_6_i_fu_1203_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_6_cast_cast_i_fu_1208_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_7_i_fu_1212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_7_i_fu_1222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_1_i_fu_1236_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_19_i_fu_1246_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_cast_i_fu_1256_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_i_49_fu_1260_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_1_i_fu_1276_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_i_fu_1271_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_2_i_fu_1291_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_2_i_fu_1301_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_1_i_fu_1311_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_1_cast_i_fu_1321_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_1_i_fu_1325_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_34_1_i_fu_1336_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_3_i_fu_1346_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_3_i_fu_1361_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_2_i_fu_1356_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_2_i_fu_1376_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_2_cast_i_fu_1386_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_2_i_fu_1390_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_17_4_i_fu_1401_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_4_i_fu_1411_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_3_i_fu_1421_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_5_i_fu_1431_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_3_i_fu_1441_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_3_cast_i_fu_1451_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_3_i_fu_1455_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_5_i_fu_1471_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_4_i_fu_1466_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_6_i_fu_1486_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_6_i_fu_1496_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_4_i_fu_1506_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_4_cast_i_fu_1516_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_4_i_fu_1520_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_34_5_i_fu_1531_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_7_i_fu_1541_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_7_i_fu_1556_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_6_i_fu_1551_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_5_i_fu_1571_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_5_cast_i_fu_1581_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_5_i_fu_1585_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_6_i_fu_1596_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_6_cast_i_fu_1606_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_6_i_fu_1609_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_7_i_fu_1620_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_7_cast_i_fu_1629_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_7_i_fu_1632_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_i_fu_1643_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);

    component feature_mul_mul_18ns_16s_34_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component feature_Loop_memset_featureHist_proc1_rgb_i IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    rgb_i_U : component feature_Loop_memset_featureHist_proc1_rgb_i
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rgb_i_address0,
        ce0 => rgb_i_ce0,
        q0 => rgb_i_q0,
        address1 => rgb_i_address1,
        ce1 => rgb_i_ce1,
        we1 => rgb_i_we1,
        d1 => rgb_i_d1,
        q1 => rgb_i_q1);

    feature_mul_mul_18ns_16s_34_1_U7 : component feature_mul_mul_18ns_16s_34_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 16,
        dout_WIDTH => 34)
    port map (
        din0 => mul_i_fu_1643_p0,
        din1 => tmp_5_i_fu_809_p2,
        dout => mul_i_fu_1643_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond3_i_fu_703_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_m_axi_frame_in_ARREADY assign process. --
    ap_reg_ioackin_m_axi_frame_in_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_frame_in_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                    if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_in_ARREADY))) then 
                        ap_reg_ioackin_m_axi_frame_in_ARREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = m_axi_frame_in_ARREADY)) then 
                        ap_reg_ioackin_m_axi_frame_in_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_10) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond5_i_fu_768_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_10) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (ap_const_lv1_0 = exitcond5_i_fu_768_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_10) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond5_i_fu_768_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13) and not((ap_const_lv1_0 = exitcond_flatten_i_fu_889_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_12)) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_24))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_12) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_24) and not((ap_const_lv1_0 = exitcond_flatten_i_reg_1757))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- i_i_reg_583 assign process. --
    i_i_reg_583_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then 
                i_i_reg_583 <= i_mid2_i_reg_1811;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_12)) then 
                i_i_reg_583 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    -- indvar2_i_reg_549 assign process. --
    indvar2_i_reg_549_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_10) and (ap_const_lv1_0 = exitcond5_i_reg_1722) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
                indvar2_i_reg_549 <= indvar_next2_i_reg_1726;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                indvar2_i_reg_549 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- indvar_flatten_i_reg_561 assign process. --
    indvar_flatten_i_reg_561_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then 
                indvar_flatten_i_reg_561 <= indvar_flatten_next_i_reg_1761;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_12)) then 
                indvar_flatten_i_reg_561 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    -- invdar_i_reg_526 assign process. --
    invdar_i_reg_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_345))) then 
                invdar_i_reg_526 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = tmp_2_i_fu_691_p2))) then 
                invdar_i_reg_526 <= indvarinc_i_fu_685_p2;
            end if; 
        end if;
    end process;

    -- iterator_i_46_reg_594 assign process. --
    iterator_i_46_reg_594_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then 
                iterator_i_46_reg_594 <= tmp_34_7_i_reg_1840;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_12)) then 
                iterator_i_46_reg_594 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- iterator_i_reg_572 assign process. --
    iterator_i_reg_572_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then 
                iterator_i_reg_572 <= iterator_mid2_i_44_reg_1806;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_12)) then 
                iterator_i_reg_572 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- j_i_reg_605 assign process. --
    j_i_reg_605_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then 
                j_i_reg_605 <= j_1_7_i_reg_1845;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_12)) then 
                j_i_reg_605 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    -- k_i_reg_537 assign process. --
    k_i_reg_537_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13) and not((ap_const_lv1_0 = exitcond_flatten_i_fu_889_p2)))) then 
                k_i_reg_537 <= k_reg_1711;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_2_i_fu_691_p2)))) then 
                k_i_reg_537 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_10) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                ap_reg_ppstg_exitcond5_i_reg_1722_pp0_it1 <= exitcond5_i_reg_1722;
                ap_reg_ppstg_indvar2_i_reg_549_pp0_it1 <= indvar2_i_reg_549;
                exitcond5_i_reg_1722 <= exitcond5_i_fu_768_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14)) then
                ap_reg_ppstg_or_cond10_i_reg_1904_pp1_it1 <= or_cond10_i_reg_1904;
                ap_reg_ppstg_or_cond11_i_reg_1900_pp1_it1 <= or_cond11_i_reg_1900;
                ap_reg_ppstg_or_cond12_i_reg_1912_pp1_it1 <= or_cond12_i_reg_1912;
                ap_reg_ppstg_or_cond13_i_reg_1908_pp1_it1 <= or_cond13_i_reg_1908;
                ap_reg_ppstg_or_cond14_i_reg_1920_pp1_it1 <= or_cond14_i_reg_1920;
                ap_reg_ppstg_or_cond15_i_reg_1916_pp1_it1 <= or_cond15_i_reg_1916;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13)) then
                exitcond_flatten_i_reg_1757 <= exitcond_flatten_i_fu_889_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond1_i_reg_1850) and (ap_const_lv1_0 = or_cond_i_reg_1854) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_16))) then
                featureHist_addr_1_reg_1934 <= tmp_23_i_fu_1266_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond3_i_reg_1868) and (ap_const_lv1_0 = or_cond2_i_reg_1872) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_18))) then
                featureHist_addr_2_reg_1960 <= tmp_32_1_i_fu_1331_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond5_i_reg_1876) and (ap_const_lv1_0 = or_cond4_i_reg_1880) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_20))) then
                featureHist_addr_3_reg_1985 <= tmp_32_2_i_fu_1396_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond7_i_reg_1884) and (ap_const_lv1_0 = or_cond6_i_reg_1888) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_22))) then
                featureHist_addr_4_reg_2010 <= tmp_32_3_i_fu_1461_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond9_i_reg_1892) and (ap_const_lv1_0 = or_cond8_i_reg_1896) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_24))) then
                featureHist_addr_5_reg_2035 <= tmp_32_4_i_fu_1526_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = or_cond11_i_reg_1900) and (ap_const_lv1_0 = or_cond10_i_reg_1904) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14))) then
                featureHist_addr_6_reg_2070 <= tmp_32_5_i_fu_1591_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_16) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond13_i_reg_1908_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond12_i_reg_1912_pp1_it1))) then
                featureHist_addr_7_reg_2080 <= tmp_32_6_i_fu_1615_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_18) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond15_i_reg_1916_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond14_i_reg_1920_pp1_it1))) then
                featureHist_addr_8_reg_2086 <= tmp_32_7_i_fu_1638_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_10) and (ap_const_lv1_0 = exitcond5_i_reg_1722) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                frame_in_addr_read_reg_1731 <= m_axi_frame_in_RDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond3_i_fu_703_p2))) then
                frame_in_addr_reg_1716 <= tmp_3_fu_758_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13) and (ap_const_lv1_0 = exitcond_flatten_i_fu_889_p2))) then
                i_mid2_i_reg_1811 <= i_mid2_i_fu_943_p3;
                iterator_mid2_i_44_reg_1806 <= iterator_mid2_i_44_fu_929_p3;
                j_1_7_i_reg_1845 <= j_1_7_i_fu_980_p2;
                tmp_34_7_i_reg_1840 <= tmp_34_7_i_fu_974_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then
                indvar_flatten_next_i_reg_1761 <= indvar_flatten_next_i_fu_895_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_10) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                indvar_next2_i_reg_1726 <= indvar_next2_i_fu_774_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13) and (ap_const_lv1_0 = exitcond_flatten_i_fu_889_p2))) then
                iterator_mid2_i_reg_1766 <= iterator_mid2_i_fu_913_p3;
                j_mid2_i_reg_1794 <= j_mid2_i_fu_921_p3;
                tmp_14_7_i_reg_1828 <= tmp_14_7_i_fu_969_p2;
                tmp_4_i_reg_1816 <= tmp_4_i_fu_964_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                k_reg_1711 <= k_fu_709_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14) and (ap_const_lv1_0 = or_cond11_i_fu_1159_p2))) then
                or_cond10_i_reg_1904 <= or_cond10_i_fu_1169_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14))) then
                or_cond11_i_reg_1900 <= or_cond11_i_fu_1159_p2;
                or_cond13_i_reg_1908 <= or_cond13_i_fu_1188_p2;
                or_cond15_i_reg_1916 <= or_cond15_i_fu_1217_p2;
                or_cond1_i_reg_1850 <= or_cond1_i_fu_994_p2;
                or_cond3_i_reg_1868 <= or_cond3_i_fu_1043_p2;
                or_cond5_i_reg_1876 <= or_cond5_i_fu_1072_p2;
                or_cond7_i_reg_1884 <= or_cond7_i_fu_1101_p2;
                or_cond9_i_reg_1892 <= or_cond9_i_fu_1130_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14) and (ap_const_lv1_0 = or_cond13_i_fu_1188_p2))) then
                or_cond12_i_reg_1912 <= or_cond12_i_fu_1198_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14) and (ap_const_lv1_0 = or_cond15_i_fu_1217_p2))) then
                or_cond14_i_reg_1920 <= or_cond14_i_fu_1227_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14) and (ap_const_lv1_0 = or_cond3_i_fu_1043_p2))) then
                or_cond2_i_reg_1872 <= or_cond2_i_fu_1053_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14) and (ap_const_lv1_0 = or_cond5_i_fu_1072_p2))) then
                or_cond4_i_reg_1880 <= or_cond4_i_fu_1082_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14) and (ap_const_lv1_0 = or_cond7_i_fu_1101_p2))) then
                or_cond6_i_reg_1888 <= or_cond6_i_fu_1111_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14) and (ap_const_lv1_0 = or_cond9_i_fu_1130_p2))) then
                or_cond8_i_reg_1896 <= or_cond8_i_fu_1140_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14) and (ap_const_lv1_0 = or_cond1_i_fu_994_p2))) then
                or_cond_i_reg_1854 <= or_cond_i_fu_1004_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_15) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond1_i_reg_1850) and (ap_const_lv1_0 = or_cond_i_reg_1854)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17) and (ap_const_lv1_0 = or_cond3_i_reg_1868) and (ap_const_lv1_0 = or_cond2_i_reg_1872)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_18) and (ap_const_lv1_0 = or_cond5_i_reg_1876) and (ap_const_lv1_0 = or_cond4_i_reg_1880)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_20) and (ap_const_lv1_0 = or_cond7_i_reg_1884) and (ap_const_lv1_0 = or_cond6_i_reg_1888)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_22) and (ap_const_lv1_0 = or_cond9_i_reg_1892) and (ap_const_lv1_0 = or_cond8_i_reg_1896)))) then
                reg_652 <= rgb_i_q0(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_15) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond1_i_reg_1850) and (ap_const_lv1_0 = or_cond_i_reg_1854)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_18) and (ap_const_lv1_0 = or_cond5_i_reg_1876) and (ap_const_lv1_0 = or_cond4_i_reg_1880)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_20) and (ap_const_lv1_0 = or_cond7_i_reg_1884) and (ap_const_lv1_0 = or_cond6_i_reg_1888)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond3_i_reg_1868) and (ap_const_lv1_0 = or_cond2_i_reg_1872) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_22) and (ap_const_lv1_0 = or_cond11_i_reg_1900) and (ap_const_lv1_0 = or_cond10_i_reg_1904)))) then
                reg_656 <= rgb_i_q1(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17) and (ap_const_lv1_0 = or_cond3_i_reg_1868) and (ap_const_lv1_0 = or_cond2_i_reg_1872)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond7_i_reg_1884) and (ap_const_lv1_0 = or_cond6_i_reg_1888) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond11_i_reg_1900) and (ap_const_lv1_0 = or_cond10_i_reg_1904) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_23)))) then
                reg_660 <= rgb_i_q1(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond5_i_reg_1876) and (ap_const_lv1_0 = or_cond4_i_reg_1880) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond9_i_reg_1892) and (ap_const_lv1_0 = or_cond8_i_reg_1896) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_24) and (ap_const_lv1_0 = or_cond13_i_reg_1908) and (ap_const_lv1_0 = or_cond12_i_reg_1912)))) then
                reg_664 <= rgb_i_q0(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond9_i_reg_1892) and (ap_const_lv1_0 = or_cond8_i_reg_1896) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_24) and (ap_const_lv1_0 = or_cond13_i_reg_1908) and (ap_const_lv1_0 = or_cond12_i_reg_1912)))) then
                reg_668 <= rgb_i_q1(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond11_i_reg_1900) and (ap_const_lv1_0 = or_cond10_i_reg_1904) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14) and (ap_const_lv1_0 = or_cond15_i_reg_1916) and (ap_const_lv1_0 = or_cond14_i_reg_1920)))) then
                reg_672 <= rgb_i_q0(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_2_i_fu_691_p2)))) then
                    tmp_13_7_cast_i_reg_1703(15 downto 0) <= tmp_13_7_cast_i_fu_700_p1(15 downto 0);
                    tmp_91_cast_i_reg_1698(15 downto 0) <= tmp_91_cast_i_fu_697_p1(15 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = or_cond13_i_reg_1908) and (ap_const_lv1_0 = or_cond12_i_reg_1912) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then
                tmp_29_6_i_reg_2050 <= rgb_i_q0(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14) and (ap_const_lv1_0 = or_cond15_i_reg_1916) and (ap_const_lv1_0 = or_cond14_i_reg_1920))) then
                tmp_29_7_i_reg_2075 <= rgb_i_q1(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_12)) then
                tmp_32_i_reg_1752 <= tmp_32_i_fu_882_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = or_cond15_i_reg_1916) and (ap_const_lv1_0 = or_cond14_i_reg_1920) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then
                tmp_47_i_reg_2055 <= rgb_i_q1(7 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_11)) then
                tmp_4_reg_1736 <= tmp_4_fu_819_p1;
                tmp_5_reg_1741 <= tmp_5_i_fu_809_p2(15 downto 15);
                tmp_7_reg_1747 <= mul_i_fu_1643_p2(33 downto 23);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_345))) then
                tmp_cast_i_reg_1685 <= tmp_cast_i_fu_676_p1;
            end if;
        end if;
    end process;
    tmp_91_cast_i_reg_1698(16) <= '0';
    tmp_13_7_cast_i_reg_1703(16) <= '0';

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_sig_bdd_144, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg6_fsm_19, ap_sig_bdd_345, tmp_2_i_fu_691_p2, exitcond3_i_fu_703_p2, exitcond5_i_fu_768_p2, exitcond_flatten_i_fu_889_p2, ap_sig_ioackin_m_axi_frame_in_ARREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_345)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = tmp_2_i_fu_691_p2))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_lv1_0 = exitcond3_i_fu_703_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_m_axi_frame_in_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_10;
            when ap_ST_pp0_stg0_fsm_10 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond5_i_fu_768_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_10;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond5_i_fu_768_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st14_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_10;
                end if;
            when ap_ST_st14_fsm_11 => 
                ap_NS_fsm <= ap_ST_st15_fsm_12;
            when ap_ST_st15_fsm_12 => 
                ap_NS_fsm <= ap_ST_pp1_stg0_fsm_13;
            when ap_ST_pp1_stg0_fsm_13 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = exitcond_flatten_i_fu_889_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg1_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_pp1_stg1_fsm_14 => 
                ap_NS_fsm <= ap_ST_pp1_stg2_fsm_15;
            when ap_ST_pp1_stg2_fsm_15 => 
                ap_NS_fsm <= ap_ST_pp1_stg3_fsm_16;
            when ap_ST_pp1_stg3_fsm_16 => 
                ap_NS_fsm <= ap_ST_pp1_stg4_fsm_17;
            when ap_ST_pp1_stg4_fsm_17 => 
                ap_NS_fsm <= ap_ST_pp1_stg5_fsm_18;
            when ap_ST_pp1_stg5_fsm_18 => 
                ap_NS_fsm <= ap_ST_pp1_stg6_fsm_19;
            when ap_ST_pp1_stg6_fsm_19 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg7_fsm_20;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_pp1_stg7_fsm_20 => 
                ap_NS_fsm <= ap_ST_pp1_stg8_fsm_21;
            when ap_ST_pp1_stg8_fsm_21 => 
                ap_NS_fsm <= ap_ST_pp1_stg9_fsm_22;
            when ap_ST_pp1_stg9_fsm_22 => 
                ap_NS_fsm <= ap_ST_pp1_stg10_fsm_23;
            when ap_ST_pp1_stg10_fsm_23 => 
                ap_NS_fsm <= ap_ST_pp1_stg11_fsm_24;
            when ap_ST_pp1_stg11_fsm_24 => 
                ap_NS_fsm <= ap_ST_pp1_stg0_fsm_13;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st3_fsm_2, exitcond3_i_fu_703_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond3_i_fu_703_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, exitcond3_i_fu_703_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond3_i_fu_703_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_136 assign process. --
    ap_sig_bdd_136_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_136 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    -- ap_sig_bdd_144 assign process. --
    ap_sig_bdd_144_assign_proc : process(m_axi_frame_in_RVALID, exitcond5_i_reg_1722)
    begin
                ap_sig_bdd_144 <= ((m_axi_frame_in_RVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond5_i_reg_1722));
    end process;


    -- ap_sig_bdd_169 assign process. --
    ap_sig_bdd_169_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_169 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    -- ap_sig_bdd_190 assign process. --
    ap_sig_bdd_190_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_190 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    -- ap_sig_bdd_206 assign process. --
    ap_sig_bdd_206_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_206 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    -- ap_sig_bdd_222 assign process. --
    ap_sig_bdd_222_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_222 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    -- ap_sig_bdd_238 assign process. --
    ap_sig_bdd_238_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_238 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    -- ap_sig_bdd_256 assign process. --
    ap_sig_bdd_256_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_256 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    -- ap_sig_bdd_277 assign process. --
    ap_sig_bdd_277_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_277 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    -- ap_sig_bdd_287 assign process. --
    ap_sig_bdd_287_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_287 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    -- ap_sig_bdd_299 assign process. --
    ap_sig_bdd_299_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_299 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    -- ap_sig_bdd_309 assign process. --
    ap_sig_bdd_309_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_309 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    -- ap_sig_bdd_328 assign process. --
    ap_sig_bdd_328_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_328 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    -- ap_sig_bdd_345 assign process. --
    ap_sig_bdd_345_assign_proc : process(ap_start, ap_done_reg, frame_in1_empty_n)
    begin
                ap_sig_bdd_345 <= ((frame_in1_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_363 assign process. --
    ap_sig_bdd_363_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_363 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_380 assign process. --
    ap_sig_bdd_380_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_380 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_404 assign process. --
    ap_sig_bdd_404_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_404 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    -- ap_sig_bdd_417 assign process. --
    ap_sig_bdd_417_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_417 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    -- ap_sig_bdd_425 assign process. --
    ap_sig_bdd_425_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_425 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    -- ap_sig_bdd_44 assign process. --
    ap_sig_bdd_44_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_44 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_615 assign process. --
    ap_sig_bdd_615_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_615 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    -- ap_sig_bdd_727 assign process. --
    ap_sig_bdd_727_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_727 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_10 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_10_assign_proc : process(ap_sig_bdd_136)
    begin
        if (ap_sig_bdd_136) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_13 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_13_assign_proc : process(ap_sig_bdd_425)
    begin
        if (ap_sig_bdd_425) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg10_fsm_23 assign process. --
    ap_sig_cseq_ST_pp1_stg10_fsm_23_assign_proc : process(ap_sig_bdd_287)
    begin
        if (ap_sig_bdd_287) then 
            ap_sig_cseq_ST_pp1_stg10_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg10_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg11_fsm_24 assign process. --
    ap_sig_cseq_ST_pp1_stg11_fsm_24_assign_proc : process(ap_sig_bdd_309)
    begin
        if (ap_sig_bdd_309) then 
            ap_sig_cseq_ST_pp1_stg11_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg11_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg1_fsm_14 assign process. --
    ap_sig_cseq_ST_pp1_stg1_fsm_14_assign_proc : process(ap_sig_bdd_328)
    begin
        if (ap_sig_bdd_328) then 
            ap_sig_cseq_ST_pp1_stg1_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg1_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg2_fsm_15 assign process. --
    ap_sig_cseq_ST_pp1_stg2_fsm_15_assign_proc : process(ap_sig_bdd_169)
    begin
        if (ap_sig_bdd_169) then 
            ap_sig_cseq_ST_pp1_stg2_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg2_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg3_fsm_16 assign process. --
    ap_sig_cseq_ST_pp1_stg3_fsm_16_assign_proc : process(ap_sig_bdd_256)
    begin
        if (ap_sig_bdd_256) then 
            ap_sig_cseq_ST_pp1_stg3_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg3_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg4_fsm_17 assign process. --
    ap_sig_cseq_ST_pp1_stg4_fsm_17_assign_proc : process(ap_sig_bdd_190)
    begin
        if (ap_sig_bdd_190) then 
            ap_sig_cseq_ST_pp1_stg4_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg4_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg5_fsm_18 assign process. --
    ap_sig_cseq_ST_pp1_stg5_fsm_18_assign_proc : process(ap_sig_bdd_206)
    begin
        if (ap_sig_bdd_206) then 
            ap_sig_cseq_ST_pp1_stg5_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg5_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg6_fsm_19 assign process. --
    ap_sig_cseq_ST_pp1_stg6_fsm_19_assign_proc : process(ap_sig_bdd_277)
    begin
        if (ap_sig_bdd_277) then 
            ap_sig_cseq_ST_pp1_stg6_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg6_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg7_fsm_20 assign process. --
    ap_sig_cseq_ST_pp1_stg7_fsm_20_assign_proc : process(ap_sig_bdd_222)
    begin
        if (ap_sig_bdd_222) then 
            ap_sig_cseq_ST_pp1_stg7_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg7_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg8_fsm_21 assign process. --
    ap_sig_cseq_ST_pp1_stg8_fsm_21_assign_proc : process(ap_sig_bdd_299)
    begin
        if (ap_sig_bdd_299) then 
            ap_sig_cseq_ST_pp1_stg8_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg8_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg9_fsm_22 assign process. --
    ap_sig_cseq_ST_pp1_stg9_fsm_22_assign_proc : process(ap_sig_bdd_238)
    begin
        if (ap_sig_bdd_238) then 
            ap_sig_cseq_ST_pp1_stg9_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg9_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st10_fsm_9 assign process. --
    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_bdd_615)
    begin
        if (ap_sig_bdd_615) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st14_fsm_11 assign process. --
    ap_sig_cseq_ST_st14_fsm_11_assign_proc : process(ap_sig_bdd_404)
    begin
        if (ap_sig_bdd_404) then 
            ap_sig_cseq_ST_st14_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st15_fsm_12 assign process. --
    ap_sig_cseq_ST_st15_fsm_12_assign_proc : process(ap_sig_bdd_417)
    begin
        if (ap_sig_bdd_417) then 
            ap_sig_cseq_ST_st15_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_44)
    begin
        if (ap_sig_bdd_44) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_363)
    begin
        if (ap_sig_bdd_363) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_380)
    begin
        if (ap_sig_bdd_380) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_727)
    begin
        if (ap_sig_bdd_727) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_m_axi_frame_in_ARREADY assign process. --
    ap_sig_ioackin_m_axi_frame_in_ARREADY_assign_proc : process(m_axi_frame_in_ARREADY, ap_reg_ioackin_m_axi_frame_in_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_in_ARREADY)) then 
            ap_sig_ioackin_m_axi_frame_in_ARREADY <= m_axi_frame_in_ARREADY;
        else 
            ap_sig_ioackin_m_axi_frame_in_ARREADY <= ap_const_logic_1;
        end if; 
    end process;

    exitcond1215_i_fu_907_p2 <= "1" when (j_i_phi_fu_609_p4 = ap_const_lv9_140) else "0";
    exitcond3_i_fu_703_p2 <= "1" when (k_i_reg_537 = ap_const_lv7_78) else "0";
    exitcond5_i_fu_768_p2 <= "1" when (indvar2_i_phi_fu_553_p4 = ap_const_lv11_780) else "0";
    exitcond_flatten_i_fu_889_p2 <= "1" when (indvar_flatten_i_phi_fu_565_p4 = ap_const_lv7_50) else "0";

    -- featureHist_address0 assign process. --
    featureHist_address0_assign_proc : process(ap_sig_cseq_ST_pp1_stg2_fsm_15, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg4_fsm_17, ap_sig_cseq_ST_pp1_stg5_fsm_18, ap_sig_cseq_ST_pp1_stg3_fsm_16, ap_sig_cseq_ST_pp1_stg6_fsm_19, ap_sig_cseq_ST_pp1_stg11_fsm_24, ap_sig_cseq_ST_pp1_stg1_fsm_14, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp1_stg0_fsm_13, featureHist_addr_5_reg_2035, featureHist_addr_6_reg_2070, featureHist_addr_7_reg_2080, featureHist_addr_8_reg_2086, tmp_1_i_fu_680_p1, tmp_23_i_fu_1266_p1, tmp_32_4_i_fu_1526_p1, tmp_32_5_i_fu_1591_p1, tmp_32_7_i_fu_1638_p1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19))) then 
            featureHist_address0 <= featureHist_addr_8_reg_2086;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17))) then 
            featureHist_address0 <= featureHist_addr_7_reg_2080;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_15) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            featureHist_address0 <= featureHist_addr_6_reg_2070;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then 
            featureHist_address0 <= featureHist_addr_5_reg_2035;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            featureHist_address0 <= tmp_1_i_fu_680_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_18))) then 
            featureHist_address0 <= tmp_32_7_i_fu_1638_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14))) then 
            featureHist_address0 <= tmp_32_5_i_fu_1591_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_24))) then 
            featureHist_address0 <= tmp_32_4_i_fu_1526_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_16))) then 
            featureHist_address0 <= tmp_23_i_fu_1266_p1(9 - 1 downto 0);
        else 
            featureHist_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    -- featureHist_address1 assign process. --
    featureHist_address1_assign_proc : process(ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg4_fsm_17, ap_sig_cseq_ST_pp1_stg5_fsm_18, ap_sig_cseq_ST_pp1_stg7_fsm_20, ap_sig_cseq_ST_pp1_stg9_fsm_22, ap_sig_cseq_ST_pp1_stg3_fsm_16, ap_sig_cseq_ST_pp1_stg6_fsm_19, ap_sig_cseq_ST_pp1_stg10_fsm_23, ap_sig_cseq_ST_pp1_stg8_fsm_21, featureHist_addr_1_reg_1934, featureHist_addr_2_reg_1960, featureHist_addr_3_reg_1985, featureHist_addr_4_reg_2010, tmp_32_1_i_fu_1331_p1, tmp_32_2_i_fu_1396_p1, tmp_32_3_i_fu_1461_p1, tmp_32_6_i_fu_1615_p1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_23))) then 
            featureHist_address1 <= featureHist_addr_4_reg_2010;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_21))) then 
            featureHist_address1 <= featureHist_addr_3_reg_1985;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19))) then 
            featureHist_address1 <= featureHist_addr_2_reg_1960;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17))) then 
            featureHist_address1 <= featureHist_addr_1_reg_1934;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_16))) then 
            featureHist_address1 <= tmp_32_6_i_fu_1615_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_22))) then 
            featureHist_address1 <= tmp_32_3_i_fu_1461_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_20))) then 
            featureHist_address1 <= tmp_32_2_i_fu_1396_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_18))) then 
            featureHist_address1 <= tmp_32_1_i_fu_1331_p1(9 - 1 downto 0);
        else 
            featureHist_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    -- featureHist_ce0 assign process. --
    featureHist_ce0_assign_proc : process(ap_sig_cseq_ST_pp1_stg2_fsm_15, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg4_fsm_17, ap_sig_cseq_ST_pp1_stg5_fsm_18, ap_sig_cseq_ST_pp1_stg3_fsm_16, ap_sig_cseq_ST_pp1_stg6_fsm_19, ap_sig_cseq_ST_pp1_stg11_fsm_24, ap_sig_cseq_ST_pp1_stg1_fsm_14, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp1_stg0_fsm_13)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14)) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_18)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_15) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19)))) then 
            featureHist_ce0 <= ap_const_logic_1;
        else 
            featureHist_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- featureHist_ce1 assign process. --
    featureHist_ce1_assign_proc : process(ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg4_fsm_17, ap_sig_cseq_ST_pp1_stg5_fsm_18, ap_sig_cseq_ST_pp1_stg7_fsm_20, ap_sig_cseq_ST_pp1_stg9_fsm_22, ap_sig_cseq_ST_pp1_stg3_fsm_16, ap_sig_cseq_ST_pp1_stg6_fsm_19, ap_sig_cseq_ST_pp1_stg10_fsm_23, ap_sig_cseq_ST_pp1_stg8_fsm_21)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_16)))) then 
            featureHist_ce1 <= ap_const_logic_1;
        else 
            featureHist_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- featureHist_d0 assign process. --
    featureHist_d0_assign_proc : process(ap_sig_cseq_ST_pp1_stg2_fsm_15, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg4_fsm_17, ap_sig_cseq_ST_pp1_stg6_fsm_19, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp1_stg0_fsm_13, grp_fu_636_p2, grp_fu_644_p2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17))) then 
            featureHist_d0 <= grp_fu_644_p2;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_15) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19)))) then 
            featureHist_d0 <= grp_fu_636_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            featureHist_d0 <= ap_const_lv16_0;
        else 
            featureHist_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- featureHist_d1 assign process. --
    featureHist_d1_assign_proc : process(ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp1_stg4_fsm_17, ap_sig_cseq_ST_pp1_stg6_fsm_19, ap_sig_cseq_ST_pp1_stg10_fsm_23, ap_sig_cseq_ST_pp1_stg8_fsm_21, grp_fu_636_p2, grp_fu_644_p2)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_21)))) then 
            featureHist_d1 <= grp_fu_644_p2;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17))) then 
            featureHist_d1 <= grp_fu_636_p2;
        else 
            featureHist_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- featureHist_we0 assign process. --
    featureHist_we0_assign_proc : process(ap_sig_cseq_ST_pp1_stg2_fsm_15, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg4_fsm_17, or_cond9_i_reg_1892, or_cond8_i_reg_1896, ap_sig_cseq_ST_pp1_stg6_fsm_19, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp1_stg0_fsm_13, ap_reg_ppstg_or_cond11_i_reg_1900_pp1_it1, ap_reg_ppstg_or_cond10_i_reg_1904_pp1_it1, ap_reg_ppstg_or_cond13_i_reg_1908_pp1_it1, ap_reg_ppstg_or_cond12_i_reg_1912_pp1_it1, ap_reg_ppstg_or_cond15_i_reg_1916_pp1_it1, ap_reg_ppstg_or_cond14_i_reg_1920_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = or_cond9_i_reg_1892) and (ap_const_lv1_0 = or_cond8_i_reg_1896) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_15) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond11_i_reg_1900_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond10_i_reg_1904_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond13_i_reg_1908_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond12_i_reg_1912_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond15_i_reg_1916_pp1_it1) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond14_i_reg_1920_pp1_it1)))) then 
            featureHist_we0 <= ap_const_logic_1;
        else 
            featureHist_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- featureHist_we1 assign process. --
    featureHist_we1_assign_proc : process(ap_reg_ppiten_pp1_it0, exitcond_flatten_i_reg_1757, or_cond1_i_reg_1850, or_cond_i_reg_1854, ap_sig_cseq_ST_pp1_stg4_fsm_17, or_cond3_i_reg_1868, or_cond2_i_reg_1872, or_cond5_i_reg_1876, or_cond4_i_reg_1880, or_cond7_i_reg_1884, or_cond6_i_reg_1888, ap_sig_cseq_ST_pp1_stg6_fsm_19, ap_sig_cseq_ST_pp1_stg10_fsm_23, ap_sig_cseq_ST_pp1_stg8_fsm_21)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond1_i_reg_1850) and (ap_const_lv1_0 = or_cond_i_reg_1854) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond3_i_reg_1868) and (ap_const_lv1_0 = or_cond2_i_reg_1872) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond5_i_reg_1876) and (ap_const_lv1_0 = or_cond4_i_reg_1880) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_lv1_0 = or_cond7_i_reg_1884) and (ap_const_lv1_0 = or_cond6_i_reg_1888) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_23)))) then 
            featureHist_we1 <= ap_const_logic_1;
        else 
            featureHist_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_in1_read assign process. --
    frame_in1_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_345)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_345))) then 
            frame_in1_read <= ap_const_logic_1;
        else 
            frame_in1_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_616_p4 <= rgb_i_q0(7 downto 5);
    grp_fu_636_p2 <= std_logic_vector(unsigned(featureHist_q0) + unsigned(ap_const_lv16_1));
    grp_fu_644_p2 <= std_logic_vector(unsigned(featureHist_q1) + unsigned(ap_const_lv16_1));
    i_1211_i_fu_937_p2 <= std_logic_vector(unsigned(i_i_phi_fu_587_p4) + unsigned(ap_const_lv2_1));
    i_cast_i_fu_951_p1 <= std_logic_vector(resize(unsigned(i_mid2_i_fu_943_p3),9));

    -- i_i_phi_fu_587_p4 assign process. --
    i_i_phi_fu_587_p4_assign_proc : process(i_i_reg_583, ap_reg_ppiten_pp1_it1, exitcond_flatten_i_reg_1757, ap_sig_cseq_ST_pp1_stg0_fsm_13, i_mid2_i_reg_1811)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then 
            i_i_phi_fu_587_p4 <= i_mid2_i_reg_1811;
        else 
            i_i_phi_fu_587_p4 <= i_i_reg_583;
        end if; 
    end process;

    i_mid2_i_fu_943_p3 <= 
        i_1211_i_fu_937_p2 when (exitcond1215_i_fu_907_p2(0) = '1') else 
        i_i_phi_fu_587_p4;

    -- indvar2_i_phi_fu_553_p4 assign process. --
    indvar2_i_phi_fu_553_p4_assign_proc : process(indvar2_i_reg_549, ap_sig_cseq_ST_pp0_stg0_fsm_10, exitcond5_i_reg_1722, ap_reg_ppiten_pp0_it1, indvar_next2_i_reg_1726)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_10) and (ap_const_lv1_0 = exitcond5_i_reg_1722) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            indvar2_i_phi_fu_553_p4 <= indvar_next2_i_reg_1726;
        else 
            indvar2_i_phi_fu_553_p4 <= indvar2_i_reg_549;
        end if; 
    end process;


    -- indvar_flatten_i_phi_fu_565_p4 assign process. --
    indvar_flatten_i_phi_fu_565_p4_assign_proc : process(indvar_flatten_i_reg_561, ap_reg_ppiten_pp1_it1, exitcond_flatten_i_reg_1757, ap_sig_cseq_ST_pp1_stg0_fsm_13, indvar_flatten_next_i_reg_1761)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then 
            indvar_flatten_i_phi_fu_565_p4 <= indvar_flatten_next_i_reg_1761;
        else 
            indvar_flatten_i_phi_fu_565_p4 <= indvar_flatten_i_reg_561;
        end if; 
    end process;

    indvar_flatten_next_i_fu_895_p2 <= std_logic_vector(unsigned(indvar_flatten_i_phi_fu_565_p4) + unsigned(ap_const_lv7_1));
    indvar_next2_i_fu_774_p2 <= std_logic_vector(unsigned(indvar2_i_phi_fu_553_p4) + unsigned(ap_const_lv11_1));
    indvarinc_i_fu_685_p2 <= std_logic_vector(unsigned(invdar_i_reg_526) + unsigned(ap_const_lv9_1));
    iterator_1_dup_i_fu_901_p2 <= std_logic_vector(unsigned(iterator_i_phi_fu_576_p4) + unsigned(ap_const_lv11_3C0));

    -- iterator_i_46_phi_fu_598_p4 assign process. --
    iterator_i_46_phi_fu_598_p4_assign_proc : process(iterator_i_46_reg_594, ap_reg_ppiten_pp1_it1, exitcond_flatten_i_reg_1757, ap_sig_cseq_ST_pp1_stg0_fsm_13, tmp_34_7_i_reg_1840)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then 
            iterator_i_46_phi_fu_598_p4 <= tmp_34_7_i_reg_1840;
        else 
            iterator_i_46_phi_fu_598_p4 <= iterator_i_46_reg_594;
        end if; 
    end process;


    -- iterator_i_phi_fu_576_p4 assign process. --
    iterator_i_phi_fu_576_p4_assign_proc : process(iterator_i_reg_572, ap_reg_ppiten_pp1_it1, exitcond_flatten_i_reg_1757, ap_sig_cseq_ST_pp1_stg0_fsm_13, iterator_mid2_i_44_reg_1806)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then 
            iterator_i_phi_fu_576_p4 <= iterator_mid2_i_44_reg_1806;
        else 
            iterator_i_phi_fu_576_p4 <= iterator_i_reg_572;
        end if; 
    end process;

    iterator_mid2_i_44_fu_929_p3 <= 
        iterator_1_dup_i_fu_901_p2 when (exitcond1215_i_fu_907_p2(0) = '1') else 
        iterator_i_phi_fu_576_p4;
    iterator_mid2_i_fu_913_p3 <= 
        iterator_1_dup_i_fu_901_p2 when (exitcond1215_i_fu_907_p2(0) = '1') else 
        iterator_i_46_phi_fu_598_p4;
    j_1_1_cast_cast_i_fu_1063_p1 <= std_logic_vector(resize(unsigned(j_1_1_i_fu_1058_p2),16));
    j_1_1_i_fu_1058_p2 <= (j_mid2_i_reg_1794 or ap_const_lv9_2);
    j_1_2_cast_cast_i_fu_1092_p1 <= std_logic_vector(resize(unsigned(j_1_2_i_fu_1087_p2),16));
    j_1_2_i_fu_1087_p2 <= (j_mid2_i_reg_1794 or ap_const_lv9_3);
    j_1_3_cast_cast_i_fu_1121_p1 <= std_logic_vector(resize(unsigned(j_1_3_i_fu_1116_p2),16));
    j_1_3_i_fu_1116_p2 <= (j_mid2_i_reg_1794 or ap_const_lv9_4);
    j_1_4_cast_cast_i_fu_1150_p1 <= std_logic_vector(resize(unsigned(j_1_4_i_fu_1145_p2),16));
    j_1_4_i_fu_1145_p2 <= (j_mid2_i_reg_1794 or ap_const_lv9_5);
    j_1_5_cast_cast_i_fu_1179_p1 <= std_logic_vector(resize(unsigned(j_1_5_i_fu_1174_p2),16));
    j_1_5_i_fu_1174_p2 <= (j_mid2_i_reg_1794 or ap_const_lv9_6);
    j_1_6_cast_cast_i_fu_1208_p1 <= std_logic_vector(resize(unsigned(j_1_6_i_fu_1203_p2),16));
    j_1_6_i_fu_1203_p2 <= (j_mid2_i_reg_1794 or ap_const_lv9_7);
    j_1_7_i_fu_980_p2 <= std_logic_vector(unsigned(j_mid2_i_fu_921_p3) + unsigned(ap_const_lv9_8));
    j_1_cast_cast_i_fu_1034_p1 <= std_logic_vector(resize(unsigned(j_1_i_fu_1029_p2),16));
    j_1_i_fu_1029_p2 <= (j_mid2_i_reg_1794 or ap_const_lv9_1);
    j_cast_cast_i_fu_986_p1 <= std_logic_vector(resize(unsigned(j_mid2_i_reg_1794),16));

    -- j_i_phi_fu_609_p4 assign process. --
    j_i_phi_fu_609_p4_assign_proc : process(j_i_reg_605, ap_reg_ppiten_pp1_it1, exitcond_flatten_i_reg_1757, ap_sig_cseq_ST_pp1_stg0_fsm_13, j_1_7_i_reg_1845)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_i_reg_1757) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then 
            j_i_phi_fu_609_p4 <= j_1_7_i_reg_1845;
        else 
            j_i_phi_fu_609_p4 <= j_i_reg_605;
        end if; 
    end process;

    j_mid2_i_fu_921_p3 <= 
        ap_const_lv9_0 when (exitcond1215_i_fu_907_p2(0) = '1') else 
        j_i_phi_fu_609_p4;
    k_fu_709_p2 <= std_logic_vector(unsigned(k_i_reg_537) + unsigned(ap_const_lv7_1));
    m_axi_frame_in_ARADDR <= frame_in_addr_reg_1716;
    m_axi_frame_in_ARBURST <= ap_const_lv2_0;
    m_axi_frame_in_ARCACHE <= ap_const_lv4_0;
    m_axi_frame_in_ARID <= ap_const_lv1_0;
    m_axi_frame_in_ARLEN <= ap_const_lv32_780;
    m_axi_frame_in_ARLOCK <= ap_const_lv2_0;
    m_axi_frame_in_ARPROT <= ap_const_lv3_0;
    m_axi_frame_in_ARQOS <= ap_const_lv4_0;
    m_axi_frame_in_ARREGION <= ap_const_lv4_0;
    m_axi_frame_in_ARSIZE <= ap_const_lv3_0;
    m_axi_frame_in_ARUSER <= ap_const_lv1_0;

    -- m_axi_frame_in_ARVALID assign process. --
    m_axi_frame_in_ARVALID_assign_proc : process(ap_reg_ioackin_m_axi_frame_in_ARREADY, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_frame_in_ARREADY))) then 
            m_axi_frame_in_ARVALID <= ap_const_logic_1;
        else 
            m_axi_frame_in_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_frame_in_AWADDR <= ap_const_lv32_0;
    m_axi_frame_in_AWBURST <= ap_const_lv2_0;
    m_axi_frame_in_AWCACHE <= ap_const_lv4_0;
    m_axi_frame_in_AWID <= ap_const_lv1_0;
    m_axi_frame_in_AWLEN <= ap_const_lv32_0;
    m_axi_frame_in_AWLOCK <= ap_const_lv2_0;
    m_axi_frame_in_AWPROT <= ap_const_lv3_0;
    m_axi_frame_in_AWQOS <= ap_const_lv4_0;
    m_axi_frame_in_AWREGION <= ap_const_lv4_0;
    m_axi_frame_in_AWSIZE <= ap_const_lv3_0;
    m_axi_frame_in_AWUSER <= ap_const_lv1_0;
    m_axi_frame_in_AWVALID <= ap_const_logic_0;
    m_axi_frame_in_BREADY <= ap_const_logic_0;

    -- m_axi_frame_in_RREADY assign process. --
    m_axi_frame_in_RREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_10, exitcond5_i_reg_1722, ap_sig_bdd_144, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_10) and (ap_const_lv1_0 = exitcond5_i_reg_1722) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            m_axi_frame_in_RREADY <= ap_const_logic_1;
        else 
            m_axi_frame_in_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_frame_in_WDATA <= ap_const_lv8_0;
    m_axi_frame_in_WID <= ap_const_lv1_0;
    m_axi_frame_in_WLAST <= ap_const_logic_0;
    m_axi_frame_in_WSTRB <= ap_const_lv1_0;
    m_axi_frame_in_WUSER <= ap_const_lv1_0;
    m_axi_frame_in_WVALID <= ap_const_logic_0;
    mul_i_fu_1643_p0 <= ap_const_lv34_11112(18 - 1 downto 0);
    neg_mul_i_fu_839_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(tmp_4_reg_1736));
    neg_ti_i_fu_872_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(tmp_8_fu_868_p1));
    or_cond10_i_fu_1169_p2 <= (tmp_14_7_i_reg_1828 or tmp_16_5_i_fu_1164_p2);
    or_cond11_i_fu_1159_p2 <= (tmp_4_i_reg_1816 or tmp_12_5_i_fu_1154_p2);
    or_cond12_i_fu_1198_p2 <= (tmp_14_7_i_reg_1828 or tmp_16_6_i_fu_1193_p2);
    or_cond13_i_fu_1188_p2 <= (tmp_4_i_reg_1816 or tmp_12_6_i_fu_1183_p2);
    or_cond14_i_fu_1227_p2 <= (tmp_14_7_i_reg_1828 or tmp_16_7_i_fu_1222_p2);
    or_cond15_i_fu_1217_p2 <= (tmp_4_i_reg_1816 or tmp_12_7_i_fu_1212_p2);
    or_cond1_i_fu_994_p2 <= (tmp_4_i_reg_1816 or tmp_6_i_fu_989_p2);
    or_cond2_i_fu_1053_p2 <= (tmp_14_7_i_reg_1828 or tmp_16_1_i_fu_1048_p2);
    or_cond3_i_fu_1043_p2 <= (tmp_4_i_reg_1816 or tmp_12_1_i_fu_1038_p2);
    or_cond4_i_fu_1082_p2 <= (tmp_14_7_i_reg_1828 or tmp_16_2_i_fu_1077_p2);
    or_cond5_i_fu_1072_p2 <= (tmp_4_i_reg_1816 or tmp_12_2_i_fu_1067_p2);
    or_cond6_i_fu_1111_p2 <= (tmp_14_7_i_reg_1828 or tmp_16_3_i_fu_1106_p2);
    or_cond7_i_fu_1101_p2 <= (tmp_4_i_reg_1816 or tmp_12_3_i_fu_1096_p2);
    or_cond8_i_fu_1140_p2 <= (tmp_14_7_i_reg_1828 or tmp_16_4_i_fu_1135_p2);
    or_cond9_i_fu_1130_p2 <= (tmp_4_i_reg_1816 or tmp_12_4_i_fu_1125_p2);
    or_cond_i_fu_1004_p2 <= (tmp_14_7_i_reg_1828 or tmp_10_i_fu_999_p2);
    p_shl1_cast_i_fu_735_p1 <= std_logic_vector(resize(unsigned(p_shl1_i_fu_727_p3),19));
    p_shl1_i_fu_727_p3 <= (k_i_reg_537 & ap_const_lv7_0);
    p_shl2_cast_i_fu_793_p1 <= std_logic_vector(resize(unsigned(p_shl2_i_fu_785_p3),16));
    p_shl2_i_fu_785_p3 <= (k_i_reg_537 & ap_const_lv8_0);
    p_shl3_cast_i_fu_805_p1 <= std_logic_vector(resize(unsigned(p_shl3_i_fu_797_p3),16));
    p_shl3_i_fu_797_p3 <= (k_i_reg_537 & ap_const_lv4_0);
    p_shl_cast_i_fu_723_p1 <= std_logic_vector(resize(unsigned(p_shl_i_fu_715_p3),19));
    p_shl_i_fu_715_p3 <= (k_i_reg_537 & ap_const_lv11_0);
    p_v_i_fu_861_p3 <= 
        tmp_13_i_fu_854_p1 when (tmp_5_reg_1741(0) = '1') else 
        tmp_14_i_fu_858_p1;

    -- rgb_i_address0 assign process. --
    rgb_i_address0_assign_proc : process(ap_sig_cseq_ST_pp1_stg2_fsm_15, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg4_fsm_17, ap_sig_cseq_ST_pp1_stg5_fsm_18, ap_sig_cseq_ST_pp1_stg7_fsm_20, ap_sig_cseq_ST_pp1_stg9_fsm_22, ap_sig_cseq_ST_pp1_stg3_fsm_16, ap_sig_cseq_ST_pp1_stg6_fsm_19, ap_sig_cseq_ST_pp1_stg10_fsm_23, ap_sig_cseq_ST_pp1_stg8_fsm_21, ap_sig_cseq_ST_pp1_stg11_fsm_24, ap_sig_cseq_ST_pp1_stg1_fsm_14, ap_sig_cseq_ST_pp1_stg0_fsm_13, tmp_12_i_fu_1014_p1, tmp_20_i_fu_1232_p1, tmp_23_1_i_fu_1281_p1, tmp_18_2_i_fu_1296_p1, tmp_27_2_i_fu_1341_p1, tmp_23_3_i_fu_1366_p1, tmp_18_4_i_fu_1406_p1, tmp_27_4_i_fu_1426_p1, tmp_23_5_i_fu_1476_p1, tmp_18_6_i_fu_1491_p1, tmp_27_6_i_fu_1536_p1, tmp_23_7_i_fu_1561_p1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then 
            rgb_i_address0 <= tmp_23_7_i_fu_1561_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_24))) then 
            rgb_i_address0 <= tmp_27_6_i_fu_1536_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_23))) then 
            rgb_i_address0 <= tmp_18_6_i_fu_1491_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_22))) then 
            rgb_i_address0 <= tmp_23_5_i_fu_1476_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_21))) then 
            rgb_i_address0 <= tmp_27_4_i_fu_1426_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_20))) then 
            rgb_i_address0 <= tmp_18_4_i_fu_1406_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19))) then 
            rgb_i_address0 <= tmp_23_3_i_fu_1366_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_18))) then 
            rgb_i_address0 <= tmp_27_2_i_fu_1341_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17))) then 
            rgb_i_address0 <= tmp_18_2_i_fu_1296_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_16))) then 
            rgb_i_address0 <= tmp_23_1_i_fu_1281_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_15) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            rgb_i_address0 <= tmp_20_i_fu_1232_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14))) then 
            rgb_i_address0 <= tmp_12_i_fu_1014_p1(11 - 1 downto 0);
        else 
            rgb_i_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- rgb_i_address1 assign process. --
    rgb_i_address1_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp1_stg2_fsm_15, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg4_fsm_17, ap_sig_cseq_ST_pp1_stg5_fsm_18, ap_sig_cseq_ST_pp1_stg7_fsm_20, ap_sig_cseq_ST_pp1_stg9_fsm_22, ap_sig_cseq_ST_pp1_stg3_fsm_16, ap_sig_cseq_ST_pp1_stg6_fsm_19, ap_sig_cseq_ST_pp1_stg10_fsm_23, ap_sig_cseq_ST_pp1_stg8_fsm_21, ap_sig_cseq_ST_pp1_stg11_fsm_24, ap_sig_cseq_ST_pp1_stg1_fsm_14, ap_sig_cseq_ST_pp1_stg0_fsm_13, tmp_8_i_fu_780_p1, tmp_15_i_fu_1024_p1, tmp_18_1_i_fu_1241_p1, tmp_27_1_i_fu_1286_p1, tmp_23_2_i_fu_1306_p1, tmp_18_3_i_fu_1351_p1, tmp_27_3_i_fu_1371_p1, tmp_23_4_i_fu_1416_p1, tmp_18_5_i_fu_1436_p1, tmp_27_5_i_fu_1481_p1, tmp_23_6_i_fu_1501_p1, tmp_18_7_i_fu_1546_p1, tmp_27_7_i_fu_1566_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            rgb_i_address1 <= tmp_8_i_fu_780_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13))) then 
            rgb_i_address1 <= tmp_27_7_i_fu_1566_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_24))) then 
            rgb_i_address1 <= tmp_18_7_i_fu_1546_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_23))) then 
            rgb_i_address1 <= tmp_23_6_i_fu_1501_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_22))) then 
            rgb_i_address1 <= tmp_27_5_i_fu_1481_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_21))) then 
            rgb_i_address1 <= tmp_18_5_i_fu_1436_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_20))) then 
            rgb_i_address1 <= tmp_23_4_i_fu_1416_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19))) then 
            rgb_i_address1 <= tmp_27_3_i_fu_1371_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_18))) then 
            rgb_i_address1 <= tmp_18_3_i_fu_1351_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17))) then 
            rgb_i_address1 <= tmp_23_2_i_fu_1306_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_16))) then 
            rgb_i_address1 <= tmp_27_1_i_fu_1286_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_15) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            rgb_i_address1 <= tmp_18_1_i_fu_1241_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14))) then 
            rgb_i_address1 <= tmp_15_i_fu_1024_p1(11 - 1 downto 0);
        else 
            rgb_i_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- rgb_i_ce0 assign process. --
    rgb_i_ce0_assign_proc : process(ap_sig_cseq_ST_pp1_stg2_fsm_15, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg4_fsm_17, ap_sig_cseq_ST_pp1_stg5_fsm_18, ap_sig_cseq_ST_pp1_stg7_fsm_20, ap_sig_cseq_ST_pp1_stg9_fsm_22, ap_sig_cseq_ST_pp1_stg3_fsm_16, ap_sig_cseq_ST_pp1_stg6_fsm_19, ap_sig_cseq_ST_pp1_stg10_fsm_23, ap_sig_cseq_ST_pp1_stg8_fsm_21, ap_sig_cseq_ST_pp1_stg11_fsm_24, ap_sig_cseq_ST_pp1_stg1_fsm_14, ap_sig_cseq_ST_pp1_stg0_fsm_13)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_15) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14)))) then 
            rgb_i_ce0 <= ap_const_logic_1;
        else 
            rgb_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- rgb_i_ce1 assign process. --
    rgb_i_ce1_assign_proc : process(ap_sig_bdd_144, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp1_stg2_fsm_15, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg4_fsm_17, ap_sig_cseq_ST_pp1_stg5_fsm_18, ap_sig_cseq_ST_pp1_stg7_fsm_20, ap_sig_cseq_ST_pp1_stg9_fsm_22, ap_sig_cseq_ST_pp1_stg3_fsm_16, ap_sig_cseq_ST_pp1_stg6_fsm_19, ap_sig_cseq_ST_pp1_stg10_fsm_23, ap_sig_cseq_ST_pp1_stg8_fsm_21, ap_sig_cseq_ST_pp1_stg11_fsm_24, ap_sig_cseq_ST_pp1_stg1_fsm_14, ap_sig_cseq_ST_pp1_stg0_fsm_13)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_15) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_14)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            rgb_i_ce1 <= ap_const_logic_1;
        else 
            rgb_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    rgb_i_d1 <= frame_in_addr_read_reg_1731;

    -- rgb_i_we1 assign process. --
    rgb_i_we1_assign_proc : process(ap_sig_bdd_144, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond5_i_reg_1722_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_144 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_i_reg_1722_pp0_it1)))) then 
            rgb_i_we1 <= ap_const_logic_1;
        else 
            rgb_i_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_i_fu_999_p2 <= "1" when (unsigned(j_cast_cast_i_fu_986_p1) > unsigned(p_read1)) else "0";
    tmp_12_1_i_fu_1038_p2 <= "1" when (unsigned(j_1_cast_cast_i_fu_1034_p1) < unsigned(p_read3)) else "0";
    tmp_12_2_i_fu_1067_p2 <= "1" when (unsigned(j_1_1_cast_cast_i_fu_1063_p1) < unsigned(p_read3)) else "0";
    tmp_12_3_i_fu_1096_p2 <= "1" when (unsigned(j_1_2_cast_cast_i_fu_1092_p1) < unsigned(p_read3)) else "0";
    tmp_12_4_i_fu_1125_p2 <= "1" when (unsigned(j_1_3_cast_cast_i_fu_1121_p1) < unsigned(p_read3)) else "0";
    tmp_12_5_i_fu_1154_p2 <= "1" when (unsigned(j_1_4_cast_cast_i_fu_1150_p1) < unsigned(p_read3)) else "0";
    tmp_12_6_i_fu_1183_p2 <= "1" when (unsigned(j_1_5_cast_cast_i_fu_1179_p1) < unsigned(p_read3)) else "0";
    tmp_12_7_i_fu_1212_p2 <= "1" when (unsigned(j_1_6_cast_cast_i_fu_1208_p1) < unsigned(p_read3)) else "0";
    tmp_12_i_fu_1014_p1 <= std_logic_vector(resize(unsigned(tmp_17_i_fu_1009_p2),64));
    tmp_13_7_cast_i_fu_700_p1 <= std_logic_vector(resize(unsigned(p_read2),17));
        tmp_13_i_fu_854_p1 <= std_logic_vector(resize(signed(tmp_6_fu_844_p4),17));

    tmp_14_7_i_fu_969_p2 <= "1" when (signed(tmp_13_7_cast_i_reg_1703) < signed(tmp_cast_i_45_fu_960_p1)) else "0";
        tmp_14_i_fu_858_p1 <= std_logic_vector(resize(signed(tmp_7_reg_1747),17));

    tmp_15_i_fu_1024_p1 <= std_logic_vector(resize(unsigned(tmp_22_i_fu_1019_p2),64));
    tmp_16_1_i_fu_1048_p2 <= "1" when (unsigned(j_1_cast_cast_i_fu_1034_p1) > unsigned(p_read1)) else "0";
    tmp_16_2_i_fu_1077_p2 <= "1" when (unsigned(j_1_1_cast_cast_i_fu_1063_p1) > unsigned(p_read1)) else "0";
    tmp_16_3_i_fu_1106_p2 <= "1" when (unsigned(j_1_2_cast_cast_i_fu_1092_p1) > unsigned(p_read1)) else "0";
    tmp_16_4_i_fu_1135_p2 <= "1" when (unsigned(j_1_3_cast_cast_i_fu_1121_p1) > unsigned(p_read1)) else "0";
    tmp_16_5_i_fu_1164_p2 <= "1" when (unsigned(j_1_4_cast_cast_i_fu_1150_p1) > unsigned(p_read1)) else "0";
    tmp_16_6_i_fu_1193_p2 <= "1" when (unsigned(j_1_5_cast_cast_i_fu_1179_p1) > unsigned(p_read1)) else "0";
    tmp_16_7_i_fu_1222_p2 <= "1" when (unsigned(j_1_6_cast_cast_i_fu_1208_p1) > unsigned(p_read1)) else "0";
    tmp_17_1_i_fu_1236_p2 <= (iterator_mid2_i_reg_1766 or ap_const_lv11_5);
    tmp_17_2_i_fu_1291_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_8));
    tmp_17_3_i_fu_1346_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_B));
    tmp_17_4_i_fu_1401_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_E));
    tmp_17_5_i_fu_1431_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_11));
    tmp_17_6_i_fu_1486_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_14));
    tmp_17_7_i_fu_1541_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_17));
    tmp_17_i_fu_1009_p2 <= (iterator_mid2_i_reg_1766 or ap_const_lv11_2);
    tmp_18_1_i_fu_1241_p1 <= std_logic_vector(resize(unsigned(tmp_17_1_i_fu_1236_p2),64));
    tmp_18_2_i_fu_1296_p1 <= std_logic_vector(resize(unsigned(tmp_17_2_i_fu_1291_p2),64));
    tmp_18_3_i_fu_1351_p1 <= std_logic_vector(resize(unsigned(tmp_17_3_i_fu_1346_p2),64));
    tmp_18_4_i_fu_1406_p1 <= std_logic_vector(resize(unsigned(tmp_17_4_i_fu_1401_p2),64));
    tmp_18_5_i_fu_1436_p1 <= std_logic_vector(resize(unsigned(tmp_17_5_i_fu_1431_p2),64));
    tmp_18_6_i_fu_1491_p1 <= std_logic_vector(resize(unsigned(tmp_17_6_i_fu_1486_p2),64));
    tmp_18_7_i_fu_1546_p1 <= std_logic_vector(resize(unsigned(tmp_17_7_i_fu_1541_p2),64));
    tmp_19_i_fu_1246_p4 <= ((reg_652 & reg_656) & ap_const_lv3_0);
    tmp_1_fu_749_p1 <= std_logic_vector(resize(unsigned(tmp_fu_745_p1),34));
    tmp_1_i_fu_680_p1 <= std_logic_vector(resize(unsigned(invdar_i_reg_526),64));
    tmp_20_i_fu_1232_p1 <= std_logic_vector(resize(unsigned(iterator_mid2_i_reg_1766),64));
    tmp_22_1_i_fu_1276_p2 <= (iterator_mid2_i_reg_1766 or ap_const_lv11_4);
    tmp_22_2_i_fu_1301_p2 <= (iterator_mid2_i_reg_1766 or ap_const_lv11_7);
    tmp_22_3_i_fu_1361_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_A));
    tmp_22_4_i_fu_1411_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_D));
    tmp_22_5_i_fu_1471_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_10));
    tmp_22_6_i_fu_1496_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_13));
    tmp_22_7_i_fu_1556_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_16));
    tmp_22_i_49_fu_1260_p2 <= (tmp_19_i_fu_1246_p4 or tmp_29_cast_i_fu_1256_p1);
    tmp_22_i_fu_1019_p2 <= (iterator_mid2_i_reg_1766 or ap_const_lv11_1);
    tmp_23_1_i_fu_1281_p1 <= std_logic_vector(resize(unsigned(tmp_22_1_i_fu_1276_p2),64));
    tmp_23_2_i_fu_1306_p1 <= std_logic_vector(resize(unsigned(tmp_22_2_i_fu_1301_p2),64));
    tmp_23_3_i_fu_1366_p1 <= std_logic_vector(resize(unsigned(tmp_22_3_i_fu_1361_p2),64));
    tmp_23_4_i_fu_1416_p1 <= std_logic_vector(resize(unsigned(tmp_22_4_i_fu_1411_p2),64));
    tmp_23_5_i_fu_1476_p1 <= std_logic_vector(resize(unsigned(tmp_22_5_i_fu_1471_p2),64));
    tmp_23_6_i_fu_1501_p1 <= std_logic_vector(resize(unsigned(tmp_22_6_i_fu_1496_p2),64));
    tmp_23_7_i_fu_1561_p1 <= std_logic_vector(resize(unsigned(tmp_22_7_i_fu_1556_p2),64));
    tmp_23_i_fu_1266_p1 <= std_logic_vector(resize(unsigned(tmp_22_i_49_fu_1260_p2),64));
    tmp_27_1_i_fu_1286_p1 <= std_logic_vector(resize(unsigned(tmp_34_i_fu_1271_p2),64));
    tmp_27_2_i_fu_1341_p1 <= std_logic_vector(resize(unsigned(tmp_34_1_i_fu_1336_p2),64));
    tmp_27_3_i_fu_1371_p1 <= std_logic_vector(resize(unsigned(tmp_34_2_i_fu_1356_p2),64));
    tmp_27_4_i_fu_1426_p1 <= std_logic_vector(resize(unsigned(tmp_34_3_i_fu_1421_p2),64));
    tmp_27_5_i_fu_1481_p1 <= std_logic_vector(resize(unsigned(tmp_34_4_i_fu_1466_p2),64));
    tmp_27_6_i_fu_1536_p1 <= std_logic_vector(resize(unsigned(tmp_34_5_i_fu_1531_p2),64));
    tmp_27_7_i_fu_1566_p1 <= std_logic_vector(resize(unsigned(tmp_34_6_i_fu_1551_p2),64));
    tmp_29_1_cast_i_fu_1321_p1 <= std_logic_vector(resize(unsigned(reg_660),9));
    tmp_29_2_cast_i_fu_1386_p1 <= std_logic_vector(resize(unsigned(reg_664),9));
    tmp_29_3_cast_i_fu_1451_p1 <= std_logic_vector(resize(unsigned(reg_656),9));
    tmp_29_4_cast_i_fu_1516_p1 <= std_logic_vector(resize(unsigned(reg_652),9));
    tmp_29_5_cast_i_fu_1581_p1 <= std_logic_vector(resize(unsigned(reg_660),9));
    tmp_29_6_cast_i_fu_1606_p1 <= std_logic_vector(resize(unsigned(tmp_29_6_i_reg_2050),9));
    tmp_29_7_cast_i_fu_1629_p1 <= std_logic_vector(resize(unsigned(tmp_29_7_i_reg_2075),9));
    tmp_29_cast_i_fu_1256_p1 <= std_logic_vector(resize(unsigned(grp_fu_616_p4),9));
    tmp_2_fu_753_p2 <= std_logic_vector(signed(tmp_cast_i_reg_1685) + signed(tmp_1_fu_749_p1));
    tmp_2_i_fu_691_p2 <= "1" when (invdar_i_reg_526 = ap_const_lv9_1FF) else "0";
    tmp_30_1_i_fu_1311_p4 <= ((reg_656 & reg_652) & ap_const_lv3_0);
    tmp_30_2_i_fu_1376_p4 <= ((reg_652 & reg_656) & ap_const_lv3_0);
    tmp_30_3_i_fu_1441_p4 <= ((reg_660 & reg_652) & ap_const_lv3_0);
    tmp_30_4_i_fu_1506_p4 <= ((reg_664 & reg_668) & ap_const_lv3_0);
    tmp_30_5_i_fu_1571_p4 <= ((reg_656 & reg_672) & ap_const_lv3_0);
    tmp_30_6_i_fu_1596_p4 <= ((reg_664 & reg_668) & ap_const_lv3_0);
    tmp_30_7_i_fu_1620_p4 <= ((tmp_47_i_reg_2055 & reg_672) & ap_const_lv3_0);
    tmp_31_1_i_fu_1325_p2 <= (tmp_30_1_i_fu_1311_p4 or tmp_29_1_cast_i_fu_1321_p1);
    tmp_31_2_i_fu_1390_p2 <= (tmp_30_2_i_fu_1376_p4 or tmp_29_2_cast_i_fu_1386_p1);
    tmp_31_3_i_fu_1455_p2 <= (tmp_30_3_i_fu_1441_p4 or tmp_29_3_cast_i_fu_1451_p1);
    tmp_31_4_i_fu_1520_p2 <= (tmp_30_4_i_fu_1506_p4 or tmp_29_4_cast_i_fu_1516_p1);
    tmp_31_5_i_fu_1585_p2 <= (tmp_30_5_i_fu_1571_p4 or tmp_29_5_cast_i_fu_1581_p1);
    tmp_31_6_i_fu_1609_p2 <= (tmp_30_6_i_fu_1596_p4 or tmp_29_6_cast_i_fu_1606_p1);
    tmp_31_7_i_fu_1632_p2 <= (tmp_30_7_i_fu_1620_p4 or tmp_29_7_cast_i_fu_1629_p1);
    tmp_32_1_i_fu_1331_p1 <= std_logic_vector(resize(unsigned(tmp_31_1_i_fu_1325_p2),64));
    tmp_32_2_i_fu_1396_p1 <= std_logic_vector(resize(unsigned(tmp_31_2_i_fu_1390_p2),64));
    tmp_32_3_i_fu_1461_p1 <= std_logic_vector(resize(unsigned(tmp_31_3_i_fu_1455_p2),64));
    tmp_32_4_i_fu_1526_p1 <= std_logic_vector(resize(unsigned(tmp_31_4_i_fu_1520_p2),64));
    tmp_32_5_i_fu_1591_p1 <= std_logic_vector(resize(unsigned(tmp_31_5_i_fu_1585_p2),64));
    tmp_32_6_i_fu_1615_p1 <= std_logic_vector(resize(unsigned(tmp_31_6_i_fu_1609_p2),64));
    tmp_32_7_i_fu_1638_p1 <= std_logic_vector(resize(unsigned(tmp_31_7_i_fu_1632_p2),64));
    tmp_32_i_fu_882_p3 <= 
        neg_ti_i_fu_872_p2 when (tmp_5_reg_1741(0) = '1') else 
        tmp_9_fu_878_p1;
    tmp_34_1_i_fu_1336_p2 <= (iterator_mid2_i_reg_1766 or ap_const_lv11_6);
    tmp_34_2_i_fu_1356_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_9));
    tmp_34_3_i_fu_1421_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_C));
    tmp_34_4_i_fu_1466_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_F));
    tmp_34_5_i_fu_1531_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_12));
    tmp_34_6_i_fu_1551_p2 <= std_logic_vector(unsigned(iterator_mid2_i_reg_1766) + unsigned(ap_const_lv11_15));
    tmp_34_7_i_fu_974_p2 <= std_logic_vector(unsigned(iterator_mid2_i_fu_913_p3) + unsigned(ap_const_lv11_18));
    tmp_34_i_fu_1271_p2 <= (iterator_mid2_i_reg_1766 or ap_const_lv11_3);
        tmp_3_fu_758_p1 <= std_logic_vector(resize(signed(tmp_2_fu_753_p2),64));

    tmp_3_i_fu_739_p2 <= std_logic_vector(unsigned(p_shl_cast_i_fu_723_p1) - unsigned(p_shl1_cast_i_fu_735_p1));
    tmp_4_fu_819_p1 <= mul_i_fu_1643_p2(33 - 1 downto 0);
    tmp_4_i_fu_964_p2 <= "1" when (signed(tmp_91_cast_i_reg_1698) > signed(tmp_cast_i_45_fu_960_p1)) else "0";
    tmp_5_i_fu_809_p2 <= std_logic_vector(unsigned(p_shl2_cast_i_fu_793_p1) - unsigned(p_shl3_cast_i_fu_805_p1));
    tmp_6_fu_844_p4 <= neg_mul_i_fu_839_p2(32 downto 23);
    tmp_6_i_fu_989_p2 <= "1" when (unsigned(j_cast_cast_i_fu_986_p1) < unsigned(p_read3)) else "0";
    tmp_8_fu_868_p1 <= p_v_i_fu_861_p3(9 - 1 downto 0);
    tmp_8_i_fu_780_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar2_i_reg_549_pp0_it1),64));
    tmp_91_cast_i_fu_697_p1 <= std_logic_vector(resize(unsigned(p_read),17));
    tmp_9_fu_878_p1 <= p_v_i_fu_861_p3(9 - 1 downto 0);
        tmp_cast_i_45_fu_960_p1 <= std_logic_vector(resize(signed(tmp_i_fu_955_p2),17));

        tmp_cast_i_fu_676_p1 <= std_logic_vector(resize(signed(frame_in1_dout),34));

        tmp_fu_745_p1 <= std_logic_vector(resize(signed(tmp_3_i_fu_739_p2),32));

    tmp_i_fu_955_p2 <= std_logic_vector(unsigned(tmp_32_i_reg_1752) + unsigned(i_cast_i_fu_951_p1));
end behav;
